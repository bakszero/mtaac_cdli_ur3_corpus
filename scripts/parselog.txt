   yacc.py:3317:Created by PLY version 3.11 (http://www.dabeaz.com/ply)
   yacc.py:3368:
   yacc.py:3369:Unused terminals:
   yacc.py:3370:
   yacc.py:3373:    LSQUARE
   yacc.py:3373:    RANGE
   yacc.py:3373:    RSQUARE
   yacc.py:3373:    VAR
   yacc.py:2543:Parsing method: LALR
   yacc.py:2561:
   yacc.py:2562:state 0
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> . document
   yacc.py:2565:    (1) document -> . text
   yacc.py:2565:    (2) document -> . object
   yacc.py:2565:    (3) document -> . composite
   yacc.py:2565:    (12) text -> . text version_protocol
   yacc.py:2565:    (31) text -> . text project
   yacc.py:2565:    (32) text -> . text_statement
   yacc.py:2565:    (54) text -> . text skipped_protocol
   yacc.py:2565:    (55) text -> . text link
   yacc.py:2565:    (56) text -> . text language_protocol
   yacc.py:2565:    (57) text -> . text object
   yacc.py:2565:    (58) text -> . text surface
   yacc.py:2565:    (59) text -> . text translation
   yacc.py:2565:    (60) text -> . text surface_element
   yacc.py:2565:    (61) text -> . text COMPOSITE newline
   yacc.py:2565:    (227) text -> . text comment
   yacc.py:2565:    (232) text -> . text score
   yacc.py:2565:    (78) object -> . object_statement
   yacc.py:2565:    (79) object -> . object surface
   yacc.py:2565:    (80) object -> . object translation
   yacc.py:2565:    (81) object -> . object surface_element
   yacc.py:2565:    (62) composite -> . text text
   yacc.py:2565:    (63) composite -> . composite text
   yacc.py:2565:    (13) text_statement -> . AMPERSAND ID EQUALS ID newline
   yacc.py:2565:    (14) text_statement -> . AMPERSAND ID EQUALS ID QUERY newline
   yacc.py:2565:    (64) object_statement -> . object_specifier newline
   yacc.py:2565:    (69) object_specifier -> . object_specifier flag
   yacc.py:2565:    (70) object_specifier -> . TABLET
   yacc.py:2565:    (71) object_specifier -> . ENVELOPE
   yacc.py:2565:    (72) object_specifier -> . PRISM
   yacc.py:2565:    (73) object_specifier -> . BULLA
   yacc.py:2565:    (74) object_specifier -> . SEALINGS
   yacc.py:2565:    (75) object_specifier -> . FRAGMENT ID
   yacc.py:2565:    (76) object_specifier -> . OBJECT ID
   yacc.py:2565:    (77) object_specifier -> . TABLET REFERENCE
   yacc.py:2566:
   yacc.py:2687:    AMPERSAND       shift and go to state 7
   yacc.py:2687:    TABLET          shift and go to state 9
   yacc.py:2687:    ENVELOPE        shift and go to state 10
   yacc.py:2687:    PRISM           shift and go to state 11
   yacc.py:2687:    BULLA           shift and go to state 12
   yacc.py:2687:    SEALINGS        shift and go to state 13
   yacc.py:2687:    FRAGMENT        shift and go to state 14
   yacc.py:2687:    OBJECT          shift and go to state 15
   yacc.py:2689:
   yacc.py:2714:    document                       shift and go to state 1
   yacc.py:2714:    text                           shift and go to state 2
   yacc.py:2714:    object                         shift and go to state 3
   yacc.py:2714:    composite                      shift and go to state 4
   yacc.py:2714:    text_statement                 shift and go to state 5
   yacc.py:2714:    object_statement               shift and go to state 6
   yacc.py:2714:    object_specifier               shift and go to state 8
   yacc.py:2561:
   yacc.py:2562:state 1
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> document .
   yacc.py:2566:
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 2
   yacc.py:2563:
   yacc.py:2565:    (1) document -> text .
   yacc.py:2565:    (12) text -> text . version_protocol
   yacc.py:2565:    (31) text -> text . project
   yacc.py:2565:    (54) text -> text . skipped_protocol
   yacc.py:2565:    (55) text -> text . link
   yacc.py:2565:    (56) text -> text . language_protocol
   yacc.py:2565:    (57) text -> text . object
   yacc.py:2565:    (58) text -> text . surface
   yacc.py:2565:    (59) text -> text . translation
   yacc.py:2565:    (60) text -> text . surface_element
   yacc.py:2565:    (61) text -> text . COMPOSITE newline
   yacc.py:2565:    (227) text -> text . comment
   yacc.py:2565:    (232) text -> text . score
   yacc.py:2565:    (62) composite -> text . text
   yacc.py:2565:    (11) version_protocol -> . VERSION ID newline
   yacc.py:2565:    (23) project -> . project_statement
   yacc.py:2565:    (33) skipped_protocol -> . ATF USE UNICODE newline
   yacc.py:2565:    (34) skipped_protocol -> . ATF USE MATH newline
   yacc.py:2565:    (35) skipped_protocol -> . ATF USE LEGACY newline
   yacc.py:2565:    (36) skipped_protocol -> . ATF USE MYLINES newline
   yacc.py:2565:    (37) skipped_protocol -> . ATF USE LEXICAL newline
   yacc.py:2565:    (38) skipped_protocol -> . key_statement
   yacc.py:2565:    (39) skipped_protocol -> . BIB ID newline
   yacc.py:2565:    (40) skipped_protocol -> . BIB ID EQUALS ID newline
   yacc.py:2565:    (41) skipped_protocol -> . lemmatizer_statement
   yacc.py:2565:    (49) link -> . LINK DEF ID EQUALS ID EQUALS ID newline
   yacc.py:2565:    (50) link -> . LINK SOURCE ID EQUALS ID newline
   yacc.py:2565:    (51) link -> . LINK PARALLEL ID EQUALS ID newline
   yacc.py:2565:    (52) link -> . INCLUDE ID EQUALS ID newline
   yacc.py:2565:    (53) language_protocol -> . ATF LANG ID newline
   yacc.py:2565:    (78) object -> . object_statement
   yacc.py:2565:    (79) object -> . object surface
   yacc.py:2565:    (80) object -> . object translation
   yacc.py:2565:    (81) object -> . object surface_element
   yacc.py:2565:    (89) surface -> . surface_statement
   yacc.py:2565:    (99) surface -> . surface surface_element
   yacc.py:2565:    (224) surface -> . surface comment
   yacc.py:2565:    (192) translation -> . translation_statement
   yacc.py:2565:    (193) translation -> . translation END REFERENCE newline
   yacc.py:2565:    (194) translation -> . translation surface
   yacc.py:2565:    (195) translation -> . translation translationlabeledline
   yacc.py:2565:    (196) translation -> . translation dollar
   yacc.py:2565:    (226) translation -> . translation comment
   yacc.py:2565:    (90) surface_element -> . line
   yacc.py:2565:    (91) surface_element -> . dollar
   yacc.py:2565:    (92) surface_element -> . note_statement
   yacc.py:2565:    (93) surface_element -> . link_reference_statement
   yacc.py:2565:    (94) surface_element -> . milestone
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (230) score -> . SCORE ID ID NEWLINE
   yacc.py:2565:    (231) score -> . SCORE ID ID ID NEWLINE
   yacc.py:2565:    (12) text -> . text version_protocol
   yacc.py:2565:    (31) text -> . text project
   yacc.py:2565:    (32) text -> . text_statement
   yacc.py:2565:    (54) text -> . text skipped_protocol
   yacc.py:2565:    (55) text -> . text link
   yacc.py:2565:    (56) text -> . text language_protocol
   yacc.py:2565:    (57) text -> . text object
   yacc.py:2565:    (58) text -> . text surface
   yacc.py:2565:    (59) text -> . text translation
   yacc.py:2565:    (60) text -> . text surface_element
   yacc.py:2565:    (61) text -> . text COMPOSITE newline
   yacc.py:2565:    (227) text -> . text comment
   yacc.py:2565:    (232) text -> . text score
   yacc.py:2565:    (22) project_statement -> . PROJECT ID newline
   yacc.py:2565:    (42) key_statement -> . key newline
   yacc.py:2565:    (43) key_statement -> . key EQUALS newline
   yacc.py:2565:    (48) lemmatizer_statement -> . lemmatizer newline
   yacc.py:2565:    (64) object_statement -> . object_specifier newline
   yacc.py:2565:    (82) surface_statement -> . surface_specifier newline
   yacc.py:2565:    (190) translation_statement -> . TRANSLATION PARALLEL ID PROJECT newline
   yacc.py:2565:    (191) translation_statement -> . TRANSLATION LABELED ID PROJECT newline
   yacc.py:2565:    (105) line -> . line_statement
   yacc.py:2565:    (106) line -> . line lemma_statement
   yacc.py:2565:    (107) line -> . line note_statement
   yacc.py:2565:    (108) line -> . line interlinear
   yacc.py:2565:    (111) line -> . line link_reference_statement
   yacc.py:2565:    (112) line -> . line equalbrace_statement
   yacc.py:2565:    (116) line -> . line multilingual
   yacc.py:2565:    (228) line -> . line comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (126) milestone -> . milestone_name newline
   yacc.py:2565:    (13) text_statement -> . AMPERSAND ID EQUALS ID newline
   yacc.py:2565:    (14) text_statement -> . AMPERSAND ID EQUALS ID QUERY newline
   yacc.py:2565:    (44) key -> . KEY ID
   yacc.py:2565:    (45) key -> . key EQUALS ID
   yacc.py:2565:    (46) lemmatizer -> . LEMMATIZER
   yacc.py:2565:    (47) lemmatizer -> . lemmatizer ID
   yacc.py:2565:    (69) object_specifier -> . object_specifier flag
   yacc.py:2565:    (70) object_specifier -> . TABLET
   yacc.py:2565:    (71) object_specifier -> . ENVELOPE
   yacc.py:2565:    (72) object_specifier -> . PRISM
   yacc.py:2565:    (73) object_specifier -> . BULLA
   yacc.py:2565:    (74) object_specifier -> . SEALINGS
   yacc.py:2565:    (75) object_specifier -> . FRAGMENT ID
   yacc.py:2565:    (76) object_specifier -> . OBJECT ID
   yacc.py:2565:    (77) object_specifier -> . TABLET REFERENCE
   yacc.py:2565:    (15) surface_specifier -> . OBVERSE
   yacc.py:2565:    (16) surface_specifier -> . REVERSE
   yacc.py:2565:    (17) surface_specifier -> . LEFT
   yacc.py:2565:    (18) surface_specifier -> . RIGHT
   yacc.py:2565:    (19) surface_specifier -> . TOP
   yacc.py:2565:    (20) surface_specifier -> . BOTTOM
   yacc.py:2565:    (21) surface_specifier -> . EDGE
   yacc.py:2565:    (83) surface_specifier -> . surface_specifier flag
   yacc.py:2565:    (84) surface_specifier -> . FACE ID
   yacc.py:2565:    (85) surface_specifier -> . SURFACE ID
   yacc.py:2565:    (86) surface_specifier -> . COLUMN ID
   yacc.py:2565:    (87) surface_specifier -> . SEAL ID
   yacc.py:2565:    (88) surface_specifier -> . HEADING ID
   yacc.py:2565:    (104) line_statement -> . line_sequence newline
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (24) milestone_name -> . CATCHLINE
   yacc.py:2565:    (25) milestone_name -> . COLOPHON
   yacc.py:2565:    (26) milestone_name -> . DATE
   yacc.py:2565:    (27) milestone_name -> . SIGNATURES
   yacc.py:2565:    (28) milestone_name -> . SIGNATURE
   yacc.py:2565:    (29) milestone_name -> . SUMMARY
   yacc.py:2565:    (30) milestone_name -> . WITNESSES
   yacc.py:2565:    (127) milestone_name -> . M EQUALS ID
   yacc.py:2565:    (100) line_sequence -> . LINELABEL ID
   yacc.py:2565:    (101) line_sequence -> . SCORELABEL ID
   yacc.py:2565:    (102) line_sequence -> . line_sequence ID
   yacc.py:2565:    (103) line_sequence -> . line_sequence reference
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 1 (document -> text .)
   yacc.py:2687:    COMPOSITE       shift and go to state 26
   yacc.py:2687:    VERSION         shift and go to state 29
   yacc.py:2687:    ATF             shift and go to state 31
   yacc.py:2687:    BIB             shift and go to state 33
   yacc.py:2687:    LINK            shift and go to state 35
   yacc.py:2687:    INCLUDE         shift and go to state 36
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    SCORE           shift and go to state 46
   yacc.py:2687:    PROJECT         shift and go to state 47
   yacc.py:2687:    TRANSLATION     shift and go to state 51
   yacc.py:2687:    AMPERSAND       shift and go to state 7
   yacc.py:2687:    KEY             shift and go to state 61
   yacc.py:2687:    LEMMATIZER      shift and go to state 62
   yacc.py:2687:    TABLET          shift and go to state 9
   yacc.py:2687:    ENVELOPE        shift and go to state 10
   yacc.py:2687:    PRISM           shift and go to state 11
   yacc.py:2687:    BULLA           shift and go to state 12
   yacc.py:2687:    SEALINGS        shift and go to state 13
   yacc.py:2687:    FRAGMENT        shift and go to state 14
   yacc.py:2687:    OBJECT          shift and go to state 15
   yacc.py:2687:    OBVERSE         shift and go to state 63
   yacc.py:2687:    REVERSE         shift and go to state 64
   yacc.py:2687:    LEFT            shift and go to state 65
   yacc.py:2687:    RIGHT           shift and go to state 66
   yacc.py:2687:    TOP             shift and go to state 67
   yacc.py:2687:    BOTTOM          shift and go to state 68
   yacc.py:2687:    EDGE            shift and go to state 69
   yacc.py:2687:    FACE            shift and go to state 70
   yacc.py:2687:    SURFACE         shift and go to state 71
   yacc.py:2687:    COLUMN          shift and go to state 72
   yacc.py:2687:    SEAL            shift and go to state 73
   yacc.py:2687:    HEADING         shift and go to state 74
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    CATCHLINE       shift and go to state 80
   yacc.py:2687:    COLOPHON        shift and go to state 81
   yacc.py:2687:    DATE            shift and go to state 82
   yacc.py:2687:    SIGNATURES      shift and go to state 83
   yacc.py:2687:    SIGNATURE       shift and go to state 84
   yacc.py:2687:    SUMMARY         shift and go to state 85
   yacc.py:2687:    WITNESSES       shift and go to state 86
   yacc.py:2687:    M               shift and go to state 87
   yacc.py:2687:    LINELABEL       shift and go to state 88
   yacc.py:2687:    SCORELABEL      shift and go to state 89
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2714:    text                           shift and go to state 16
   yacc.py:2714:    version_protocol               shift and go to state 17
   yacc.py:2714:    project                        shift and go to state 18
   yacc.py:2714:    skipped_protocol               shift and go to state 19
   yacc.py:2714:    link                           shift and go to state 20
   yacc.py:2714:    language_protocol              shift and go to state 21
   yacc.py:2714:    object                         shift and go to state 22
   yacc.py:2714:    surface                        shift and go to state 23
   yacc.py:2714:    translation                    shift and go to state 24
   yacc.py:2714:    surface_element                shift and go to state 25
   yacc.py:2714:    comment                        shift and go to state 27
   yacc.py:2714:    score                          shift and go to state 28
   yacc.py:2714:    project_statement              shift and go to state 30
   yacc.py:2714:    key_statement                  shift and go to state 32
   yacc.py:2714:    lemmatizer_statement           shift and go to state 34
   yacc.py:2714:    object_statement               shift and go to state 6
   yacc.py:2714:    surface_statement              shift and go to state 37
   yacc.py:2714:    translation_statement          shift and go to state 38
   yacc.py:2714:    dollar                         shift and go to state 39
   yacc.py:2714:    line                           shift and go to state 40
   yacc.py:2714:    note_statement                 shift and go to state 41
   yacc.py:2714:    link_reference_statement       shift and go to state 42
   yacc.py:2714:    milestone                      shift and go to state 43
   yacc.py:2714:    text_statement                 shift and go to state 5
   yacc.py:2714:    key                            shift and go to state 48
   yacc.py:2714:    lemmatizer                     shift and go to state 49
   yacc.py:2714:    object_specifier               shift and go to state 8
   yacc.py:2714:    surface_specifier              shift and go to state 50
   yacc.py:2714:    line_statement                 shift and go to state 52
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    milestone_name                 shift and go to state 60
   yacc.py:2714:    line_sequence                  shift and go to state 75
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 3
   yacc.py:2563:
   yacc.py:2565:    (2) document -> object .
   yacc.py:2565:    (79) object -> object . surface
   yacc.py:2565:    (80) object -> object . translation
   yacc.py:2565:    (81) object -> object . surface_element
   yacc.py:2565:    (89) surface -> . surface_statement
   yacc.py:2565:    (99) surface -> . surface surface_element
   yacc.py:2565:    (224) surface -> . surface comment
   yacc.py:2565:    (192) translation -> . translation_statement
   yacc.py:2565:    (193) translation -> . translation END REFERENCE newline
   yacc.py:2565:    (194) translation -> . translation surface
   yacc.py:2565:    (195) translation -> . translation translationlabeledline
   yacc.py:2565:    (196) translation -> . translation dollar
   yacc.py:2565:    (226) translation -> . translation comment
   yacc.py:2565:    (90) surface_element -> . line
   yacc.py:2565:    (91) surface_element -> . dollar
   yacc.py:2565:    (92) surface_element -> . note_statement
   yacc.py:2565:    (93) surface_element -> . link_reference_statement
   yacc.py:2565:    (94) surface_element -> . milestone
   yacc.py:2565:    (82) surface_statement -> . surface_specifier newline
   yacc.py:2565:    (190) translation_statement -> . TRANSLATION PARALLEL ID PROJECT newline
   yacc.py:2565:    (191) translation_statement -> . TRANSLATION LABELED ID PROJECT newline
   yacc.py:2565:    (105) line -> . line_statement
   yacc.py:2565:    (106) line -> . line lemma_statement
   yacc.py:2565:    (107) line -> . line note_statement
   yacc.py:2565:    (108) line -> . line interlinear
   yacc.py:2565:    (111) line -> . line link_reference_statement
   yacc.py:2565:    (112) line -> . line equalbrace_statement
   yacc.py:2565:    (116) line -> . line multilingual
   yacc.py:2565:    (228) line -> . line comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (126) milestone -> . milestone_name newline
   yacc.py:2565:    (15) surface_specifier -> . OBVERSE
   yacc.py:2565:    (16) surface_specifier -> . REVERSE
   yacc.py:2565:    (17) surface_specifier -> . LEFT
   yacc.py:2565:    (18) surface_specifier -> . RIGHT
   yacc.py:2565:    (19) surface_specifier -> . TOP
   yacc.py:2565:    (20) surface_specifier -> . BOTTOM
   yacc.py:2565:    (21) surface_specifier -> . EDGE
   yacc.py:2565:    (83) surface_specifier -> . surface_specifier flag
   yacc.py:2565:    (84) surface_specifier -> . FACE ID
   yacc.py:2565:    (85) surface_specifier -> . SURFACE ID
   yacc.py:2565:    (86) surface_specifier -> . COLUMN ID
   yacc.py:2565:    (87) surface_specifier -> . SEAL ID
   yacc.py:2565:    (88) surface_specifier -> . HEADING ID
   yacc.py:2565:    (104) line_statement -> . line_sequence newline
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (24) milestone_name -> . CATCHLINE
   yacc.py:2565:    (25) milestone_name -> . COLOPHON
   yacc.py:2565:    (26) milestone_name -> . DATE
   yacc.py:2565:    (27) milestone_name -> . SIGNATURES
   yacc.py:2565:    (28) milestone_name -> . SIGNATURE
   yacc.py:2565:    (29) milestone_name -> . SUMMARY
   yacc.py:2565:    (30) milestone_name -> . WITNESSES
   yacc.py:2565:    (127) milestone_name -> . M EQUALS ID
   yacc.py:2565:    (100) line_sequence -> . LINELABEL ID
   yacc.py:2565:    (101) line_sequence -> . SCORELABEL ID
   yacc.py:2565:    (102) line_sequence -> . line_sequence ID
   yacc.py:2565:    (103) line_sequence -> . line_sequence reference
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 2 (document -> object .)
   yacc.py:2687:    TRANSLATION     shift and go to state 51
   yacc.py:2687:    OBVERSE         shift and go to state 63
   yacc.py:2687:    REVERSE         shift and go to state 64
   yacc.py:2687:    LEFT            shift and go to state 65
   yacc.py:2687:    RIGHT           shift and go to state 66
   yacc.py:2687:    TOP             shift and go to state 67
   yacc.py:2687:    BOTTOM          shift and go to state 68
   yacc.py:2687:    EDGE            shift and go to state 69
   yacc.py:2687:    FACE            shift and go to state 70
   yacc.py:2687:    SURFACE         shift and go to state 71
   yacc.py:2687:    COLUMN          shift and go to state 72
   yacc.py:2687:    SEAL            shift and go to state 73
   yacc.py:2687:    HEADING         shift and go to state 74
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    CATCHLINE       shift and go to state 80
   yacc.py:2687:    COLOPHON        shift and go to state 81
   yacc.py:2687:    DATE            shift and go to state 82
   yacc.py:2687:    SIGNATURES      shift and go to state 83
   yacc.py:2687:    SIGNATURE       shift and go to state 84
   yacc.py:2687:    SUMMARY         shift and go to state 85
   yacc.py:2687:    WITNESSES       shift and go to state 86
   yacc.py:2687:    M               shift and go to state 87
   yacc.py:2687:    LINELABEL       shift and go to state 88
   yacc.py:2687:    SCORELABEL      shift and go to state 89
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2714:    surface                        shift and go to state 93
   yacc.py:2714:    translation                    shift and go to state 94
   yacc.py:2714:    surface_element                shift and go to state 95
   yacc.py:2714:    surface_statement              shift and go to state 37
   yacc.py:2714:    translation_statement          shift and go to state 38
   yacc.py:2714:    dollar                         shift and go to state 39
   yacc.py:2714:    line                           shift and go to state 40
   yacc.py:2714:    note_statement                 shift and go to state 41
   yacc.py:2714:    link_reference_statement       shift and go to state 42
   yacc.py:2714:    milestone                      shift and go to state 43
   yacc.py:2714:    surface_specifier              shift and go to state 50
   yacc.py:2714:    line_statement                 shift and go to state 52
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    milestone_name                 shift and go to state 60
   yacc.py:2714:    line_sequence                  shift and go to state 75
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 4
   yacc.py:2563:
   yacc.py:2565:    (3) document -> composite .
   yacc.py:2565:    (63) composite -> composite . text
   yacc.py:2565:    (12) text -> . text version_protocol
   yacc.py:2565:    (31) text -> . text project
   yacc.py:2565:    (32) text -> . text_statement
   yacc.py:2565:    (54) text -> . text skipped_protocol
   yacc.py:2565:    (55) text -> . text link
   yacc.py:2565:    (56) text -> . text language_protocol
   yacc.py:2565:    (57) text -> . text object
   yacc.py:2565:    (58) text -> . text surface
   yacc.py:2565:    (59) text -> . text translation
   yacc.py:2565:    (60) text -> . text surface_element
   yacc.py:2565:    (61) text -> . text COMPOSITE newline
   yacc.py:2565:    (227) text -> . text comment
   yacc.py:2565:    (232) text -> . text score
   yacc.py:2565:    (13) text_statement -> . AMPERSAND ID EQUALS ID newline
   yacc.py:2565:    (14) text_statement -> . AMPERSAND ID EQUALS ID QUERY newline
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 3 (document -> composite .)
   yacc.py:2687:    AMPERSAND       shift and go to state 7
   yacc.py:2689:
   yacc.py:2714:    text                           shift and go to state 96
   yacc.py:2714:    text_statement                 shift and go to state 5
   yacc.py:2561:
   yacc.py:2562:state 5
   yacc.py:2563:
   yacc.py:2565:    (32) text -> text_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    VERSION         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    ATF             reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    BIB             reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    LINK            reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    CHECK           reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    SCORE           reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    KEY             reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    TABLET          reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    PRISM           reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    BULLA           reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    LEFT            reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    TOP             reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    EDGE            reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    FACE            reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    SEAL            reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    HEADING         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    NOTE            reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    DATE            reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    M               reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    TO              reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    FROM            reduce using rule 32 (text -> text_statement .)
   yacc.py:2687:    $end            reduce using rule 32 (text -> text_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 6
   yacc.py:2563:
   yacc.py:2565:    (78) object -> object_statement .
   yacc.py:2566:
   yacc.py:2687:    TRANSLATION     reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    LEFT            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    TOP             reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    EDGE            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    FACE            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    SEAL            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    HEADING         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    NOTE            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    DATE            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    M               reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    TO              reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    FROM            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    $end            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    VERSION         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    ATF             reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    BIB             reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    LINK            reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    CHECK           reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    SCORE           reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    KEY             reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    TABLET          reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    PRISM           reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    BULLA           reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 78 (object -> object_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 78 (object -> object_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 7
   yacc.py:2563:
   yacc.py:2565:    (13) text_statement -> AMPERSAND . ID EQUALS ID newline
   yacc.py:2565:    (14) text_statement -> AMPERSAND . ID EQUALS ID QUERY newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 97
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 8
   yacc.py:2563:
   yacc.py:2565:    (64) object_statement -> object_specifier . newline
   yacc.py:2565:    (69) object_specifier -> object_specifier . flag
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (65) flag -> . HASH
   yacc.py:2565:    (66) flag -> . EXCLAIM
   yacc.py:2565:    (67) flag -> . QUERY
   yacc.py:2565:    (68) flag -> . STAR
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    HASH            shift and go to state 101
   yacc.py:2687:    EXCLAIM         shift and go to state 102
   yacc.py:2687:    QUERY           shift and go to state 103
   yacc.py:2687:    STAR            shift and go to state 104
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 98
   yacc.py:2714:    flag                           shift and go to state 99
   yacc.py:2561:
   yacc.py:2562:state 9
   yacc.py:2563:
   yacc.py:2565:    (70) object_specifier -> TABLET .
   yacc.py:2565:    (77) object_specifier -> TABLET . REFERENCE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 70 (object_specifier -> TABLET .)
   yacc.py:2687:    HASH            reduce using rule 70 (object_specifier -> TABLET .)
   yacc.py:2687:    EXCLAIM         reduce using rule 70 (object_specifier -> TABLET .)
   yacc.py:2687:    QUERY           reduce using rule 70 (object_specifier -> TABLET .)
   yacc.py:2687:    STAR            reduce using rule 70 (object_specifier -> TABLET .)
   yacc.py:2687:    REFERENCE       shift and go to state 105
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 10
   yacc.py:2563:
   yacc.py:2565:    (71) object_specifier -> ENVELOPE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 71 (object_specifier -> ENVELOPE .)
   yacc.py:2687:    HASH            reduce using rule 71 (object_specifier -> ENVELOPE .)
   yacc.py:2687:    EXCLAIM         reduce using rule 71 (object_specifier -> ENVELOPE .)
   yacc.py:2687:    QUERY           reduce using rule 71 (object_specifier -> ENVELOPE .)
   yacc.py:2687:    STAR            reduce using rule 71 (object_specifier -> ENVELOPE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 11
   yacc.py:2563:
   yacc.py:2565:    (72) object_specifier -> PRISM .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 72 (object_specifier -> PRISM .)
   yacc.py:2687:    HASH            reduce using rule 72 (object_specifier -> PRISM .)
   yacc.py:2687:    EXCLAIM         reduce using rule 72 (object_specifier -> PRISM .)
   yacc.py:2687:    QUERY           reduce using rule 72 (object_specifier -> PRISM .)
   yacc.py:2687:    STAR            reduce using rule 72 (object_specifier -> PRISM .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 12
   yacc.py:2563:
   yacc.py:2565:    (73) object_specifier -> BULLA .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 73 (object_specifier -> BULLA .)
   yacc.py:2687:    HASH            reduce using rule 73 (object_specifier -> BULLA .)
   yacc.py:2687:    EXCLAIM         reduce using rule 73 (object_specifier -> BULLA .)
   yacc.py:2687:    QUERY           reduce using rule 73 (object_specifier -> BULLA .)
   yacc.py:2687:    STAR            reduce using rule 73 (object_specifier -> BULLA .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 13
   yacc.py:2563:
   yacc.py:2565:    (74) object_specifier -> SEALINGS .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 74 (object_specifier -> SEALINGS .)
   yacc.py:2687:    HASH            reduce using rule 74 (object_specifier -> SEALINGS .)
   yacc.py:2687:    EXCLAIM         reduce using rule 74 (object_specifier -> SEALINGS .)
   yacc.py:2687:    QUERY           reduce using rule 74 (object_specifier -> SEALINGS .)
   yacc.py:2687:    STAR            reduce using rule 74 (object_specifier -> SEALINGS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 14
   yacc.py:2563:
   yacc.py:2565:    (75) object_specifier -> FRAGMENT . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 106
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 15
   yacc.py:2563:
   yacc.py:2565:    (76) object_specifier -> OBJECT . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 107
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 16
   yacc.py:2563:
   yacc.py:2565:    (62) composite -> text text .
   yacc.py:2565:    (12) text -> text . version_protocol
   yacc.py:2565:    (31) text -> text . project
   yacc.py:2565:    (54) text -> text . skipped_protocol
   yacc.py:2565:    (55) text -> text . link
   yacc.py:2565:    (56) text -> text . language_protocol
   yacc.py:2565:    (57) text -> text . object
   yacc.py:2565:    (58) text -> text . surface
   yacc.py:2565:    (59) text -> text . translation
   yacc.py:2565:    (60) text -> text . surface_element
   yacc.py:2565:    (61) text -> text . COMPOSITE newline
   yacc.py:2565:    (227) text -> text . comment
   yacc.py:2565:    (232) text -> text . score
   yacc.py:2565:    (11) version_protocol -> . VERSION ID newline
   yacc.py:2565:    (23) project -> . project_statement
   yacc.py:2565:    (33) skipped_protocol -> . ATF USE UNICODE newline
   yacc.py:2565:    (34) skipped_protocol -> . ATF USE MATH newline
   yacc.py:2565:    (35) skipped_protocol -> . ATF USE LEGACY newline
   yacc.py:2565:    (36) skipped_protocol -> . ATF USE MYLINES newline
   yacc.py:2565:    (37) skipped_protocol -> . ATF USE LEXICAL newline
   yacc.py:2565:    (38) skipped_protocol -> . key_statement
   yacc.py:2565:    (39) skipped_protocol -> . BIB ID newline
   yacc.py:2565:    (40) skipped_protocol -> . BIB ID EQUALS ID newline
   yacc.py:2565:    (41) skipped_protocol -> . lemmatizer_statement
   yacc.py:2565:    (49) link -> . LINK DEF ID EQUALS ID EQUALS ID newline
   yacc.py:2565:    (50) link -> . LINK SOURCE ID EQUALS ID newline
   yacc.py:2565:    (51) link -> . LINK PARALLEL ID EQUALS ID newline
   yacc.py:2565:    (52) link -> . INCLUDE ID EQUALS ID newline
   yacc.py:2565:    (53) language_protocol -> . ATF LANG ID newline
   yacc.py:2565:    (78) object -> . object_statement
   yacc.py:2565:    (79) object -> . object surface
   yacc.py:2565:    (80) object -> . object translation
   yacc.py:2565:    (81) object -> . object surface_element
   yacc.py:2565:    (89) surface -> . surface_statement
   yacc.py:2565:    (99) surface -> . surface surface_element
   yacc.py:2565:    (224) surface -> . surface comment
   yacc.py:2565:    (192) translation -> . translation_statement
   yacc.py:2565:    (193) translation -> . translation END REFERENCE newline
   yacc.py:2565:    (194) translation -> . translation surface
   yacc.py:2565:    (195) translation -> . translation translationlabeledline
   yacc.py:2565:    (196) translation -> . translation dollar
   yacc.py:2565:    (226) translation -> . translation comment
   yacc.py:2565:    (90) surface_element -> . line
   yacc.py:2565:    (91) surface_element -> . dollar
   yacc.py:2565:    (92) surface_element -> . note_statement
   yacc.py:2565:    (93) surface_element -> . link_reference_statement
   yacc.py:2565:    (94) surface_element -> . milestone
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (230) score -> . SCORE ID ID NEWLINE
   yacc.py:2565:    (231) score -> . SCORE ID ID ID NEWLINE
   yacc.py:2565:    (22) project_statement -> . PROJECT ID newline
   yacc.py:2565:    (42) key_statement -> . key newline
   yacc.py:2565:    (43) key_statement -> . key EQUALS newline
   yacc.py:2565:    (48) lemmatizer_statement -> . lemmatizer newline
   yacc.py:2565:    (64) object_statement -> . object_specifier newline
   yacc.py:2565:    (82) surface_statement -> . surface_specifier newline
   yacc.py:2565:    (190) translation_statement -> . TRANSLATION PARALLEL ID PROJECT newline
   yacc.py:2565:    (191) translation_statement -> . TRANSLATION LABELED ID PROJECT newline
   yacc.py:2565:    (105) line -> . line_statement
   yacc.py:2565:    (106) line -> . line lemma_statement
   yacc.py:2565:    (107) line -> . line note_statement
   yacc.py:2565:    (108) line -> . line interlinear
   yacc.py:2565:    (111) line -> . line link_reference_statement
   yacc.py:2565:    (112) line -> . line equalbrace_statement
   yacc.py:2565:    (116) line -> . line multilingual
   yacc.py:2565:    (228) line -> . line comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (126) milestone -> . milestone_name newline
   yacc.py:2565:    (44) key -> . KEY ID
   yacc.py:2565:    (45) key -> . key EQUALS ID
   yacc.py:2565:    (46) lemmatizer -> . LEMMATIZER
   yacc.py:2565:    (47) lemmatizer -> . lemmatizer ID
   yacc.py:2565:    (69) object_specifier -> . object_specifier flag
   yacc.py:2565:    (70) object_specifier -> . TABLET
   yacc.py:2565:    (71) object_specifier -> . ENVELOPE
   yacc.py:2565:    (72) object_specifier -> . PRISM
   yacc.py:2565:    (73) object_specifier -> . BULLA
   yacc.py:2565:    (74) object_specifier -> . SEALINGS
   yacc.py:2565:    (75) object_specifier -> . FRAGMENT ID
   yacc.py:2565:    (76) object_specifier -> . OBJECT ID
   yacc.py:2565:    (77) object_specifier -> . TABLET REFERENCE
   yacc.py:2565:    (15) surface_specifier -> . OBVERSE
   yacc.py:2565:    (16) surface_specifier -> . REVERSE
   yacc.py:2565:    (17) surface_specifier -> . LEFT
   yacc.py:2565:    (18) surface_specifier -> . RIGHT
   yacc.py:2565:    (19) surface_specifier -> . TOP
   yacc.py:2565:    (20) surface_specifier -> . BOTTOM
   yacc.py:2565:    (21) surface_specifier -> . EDGE
   yacc.py:2565:    (83) surface_specifier -> . surface_specifier flag
   yacc.py:2565:    (84) surface_specifier -> . FACE ID
   yacc.py:2565:    (85) surface_specifier -> . SURFACE ID
   yacc.py:2565:    (86) surface_specifier -> . COLUMN ID
   yacc.py:2565:    (87) surface_specifier -> . SEAL ID
   yacc.py:2565:    (88) surface_specifier -> . HEADING ID
   yacc.py:2565:    (104) line_statement -> . line_sequence newline
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (24) milestone_name -> . CATCHLINE
   yacc.py:2565:    (25) milestone_name -> . COLOPHON
   yacc.py:2565:    (26) milestone_name -> . DATE
   yacc.py:2565:    (27) milestone_name -> . SIGNATURES
   yacc.py:2565:    (28) milestone_name -> . SIGNATURE
   yacc.py:2565:    (29) milestone_name -> . SUMMARY
   yacc.py:2565:    (30) milestone_name -> . WITNESSES
   yacc.py:2565:    (127) milestone_name -> . M EQUALS ID
   yacc.py:2565:    (100) line_sequence -> . LINELABEL ID
   yacc.py:2565:    (101) line_sequence -> . SCORELABEL ID
   yacc.py:2565:    (102) line_sequence -> . line_sequence ID
   yacc.py:2565:    (103) line_sequence -> . line_sequence reference
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    AMPERSAND       reduce using rule 62 (composite -> text text .)
   yacc.py:2687:    $end            reduce using rule 62 (composite -> text text .)
   yacc.py:2687:    COMPOSITE       shift and go to state 26
   yacc.py:2687:    VERSION         shift and go to state 29
   yacc.py:2687:    ATF             shift and go to state 31
   yacc.py:2687:    BIB             shift and go to state 33
   yacc.py:2687:    LINK            shift and go to state 35
   yacc.py:2687:    INCLUDE         shift and go to state 36
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    SCORE           shift and go to state 46
   yacc.py:2687:    PROJECT         shift and go to state 47
   yacc.py:2687:    TRANSLATION     shift and go to state 51
   yacc.py:2687:    KEY             shift and go to state 61
   yacc.py:2687:    LEMMATIZER      shift and go to state 62
   yacc.py:2687:    TABLET          shift and go to state 9
   yacc.py:2687:    ENVELOPE        shift and go to state 10
   yacc.py:2687:    PRISM           shift and go to state 11
   yacc.py:2687:    BULLA           shift and go to state 12
   yacc.py:2687:    SEALINGS        shift and go to state 13
   yacc.py:2687:    FRAGMENT        shift and go to state 14
   yacc.py:2687:    OBJECT          shift and go to state 15
   yacc.py:2687:    OBVERSE         shift and go to state 63
   yacc.py:2687:    REVERSE         shift and go to state 64
   yacc.py:2687:    LEFT            shift and go to state 65
   yacc.py:2687:    RIGHT           shift and go to state 66
   yacc.py:2687:    TOP             shift and go to state 67
   yacc.py:2687:    BOTTOM          shift and go to state 68
   yacc.py:2687:    EDGE            shift and go to state 69
   yacc.py:2687:    FACE            shift and go to state 70
   yacc.py:2687:    SURFACE         shift and go to state 71
   yacc.py:2687:    COLUMN          shift and go to state 72
   yacc.py:2687:    SEAL            shift and go to state 73
   yacc.py:2687:    HEADING         shift and go to state 74
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    CATCHLINE       shift and go to state 80
   yacc.py:2687:    COLOPHON        shift and go to state 81
   yacc.py:2687:    DATE            shift and go to state 82
   yacc.py:2687:    SIGNATURES      shift and go to state 83
   yacc.py:2687:    SIGNATURE       shift and go to state 84
   yacc.py:2687:    SUMMARY         shift and go to state 85
   yacc.py:2687:    WITNESSES       shift and go to state 86
   yacc.py:2687:    M               shift and go to state 87
   yacc.py:2687:    LINELABEL       shift and go to state 88
   yacc.py:2687:    SCORELABEL      shift and go to state 89
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2714:    version_protocol               shift and go to state 17
   yacc.py:2714:    project                        shift and go to state 18
   yacc.py:2714:    skipped_protocol               shift and go to state 19
   yacc.py:2714:    link                           shift and go to state 20
   yacc.py:2714:    language_protocol              shift and go to state 21
   yacc.py:2714:    object                         shift and go to state 22
   yacc.py:2714:    surface                        shift and go to state 23
   yacc.py:2714:    translation                    shift and go to state 24
   yacc.py:2714:    surface_element                shift and go to state 25
   yacc.py:2714:    comment                        shift and go to state 27
   yacc.py:2714:    score                          shift and go to state 28
   yacc.py:2714:    project_statement              shift and go to state 30
   yacc.py:2714:    key_statement                  shift and go to state 32
   yacc.py:2714:    lemmatizer_statement           shift and go to state 34
   yacc.py:2714:    object_statement               shift and go to state 6
   yacc.py:2714:    surface_statement              shift and go to state 37
   yacc.py:2714:    translation_statement          shift and go to state 38
   yacc.py:2714:    dollar                         shift and go to state 39
   yacc.py:2714:    line                           shift and go to state 40
   yacc.py:2714:    note_statement                 shift and go to state 41
   yacc.py:2714:    link_reference_statement       shift and go to state 42
   yacc.py:2714:    milestone                      shift and go to state 43
   yacc.py:2714:    key                            shift and go to state 48
   yacc.py:2714:    lemmatizer                     shift and go to state 49
   yacc.py:2714:    object_specifier               shift and go to state 8
   yacc.py:2714:    surface_specifier              shift and go to state 50
   yacc.py:2714:    line_statement                 shift and go to state 52
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    milestone_name                 shift and go to state 60
   yacc.py:2714:    line_sequence                  shift and go to state 75
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 17
   yacc.py:2563:
   yacc.py:2565:    (12) text -> text version_protocol .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    VERSION         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    ATF             reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    BIB             reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    LINK            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    INCLUDE         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    COMMENT         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    CHECK           reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    SCORE           reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    PROJECT         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    TRANSLATION     reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    AMPERSAND       reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    KEY             reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    TABLET          reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    ENVELOPE        reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    PRISM           reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    BULLA           reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    SEALINGS        reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    FRAGMENT        reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    OBJECT          reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    OBVERSE         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    REVERSE         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    LEFT            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    RIGHT           reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    TOP             reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    BOTTOM          reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    EDGE            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    FACE            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    SURFACE         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    COLUMN          reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    SEAL            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    HEADING         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    DOLLAR          reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    NOTE            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    CATCHLINE       reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    COLOPHON        reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    DATE            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    SIGNATURES      reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    SIGNATURE       reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    SUMMARY         reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    WITNESSES       reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    M               reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    LINELABEL       reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    SCORELABEL      reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    PARBAR          reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    TO              reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    FROM            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2687:    $end            reduce using rule 12 (text -> text version_protocol .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 18
   yacc.py:2563:
   yacc.py:2565:    (31) text -> text project .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 31 (text -> text project .)
   yacc.py:2687:    VERSION         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    ATF             reduce using rule 31 (text -> text project .)
   yacc.py:2687:    BIB             reduce using rule 31 (text -> text project .)
   yacc.py:2687:    LINK            reduce using rule 31 (text -> text project .)
   yacc.py:2687:    INCLUDE         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    COMMENT         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    CHECK           reduce using rule 31 (text -> text project .)
   yacc.py:2687:    SCORE           reduce using rule 31 (text -> text project .)
   yacc.py:2687:    PROJECT         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    TRANSLATION     reduce using rule 31 (text -> text project .)
   yacc.py:2687:    AMPERSAND       reduce using rule 31 (text -> text project .)
   yacc.py:2687:    KEY             reduce using rule 31 (text -> text project .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 31 (text -> text project .)
   yacc.py:2687:    TABLET          reduce using rule 31 (text -> text project .)
   yacc.py:2687:    ENVELOPE        reduce using rule 31 (text -> text project .)
   yacc.py:2687:    PRISM           reduce using rule 31 (text -> text project .)
   yacc.py:2687:    BULLA           reduce using rule 31 (text -> text project .)
   yacc.py:2687:    SEALINGS        reduce using rule 31 (text -> text project .)
   yacc.py:2687:    FRAGMENT        reduce using rule 31 (text -> text project .)
   yacc.py:2687:    OBJECT          reduce using rule 31 (text -> text project .)
   yacc.py:2687:    OBVERSE         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    REVERSE         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    LEFT            reduce using rule 31 (text -> text project .)
   yacc.py:2687:    RIGHT           reduce using rule 31 (text -> text project .)
   yacc.py:2687:    TOP             reduce using rule 31 (text -> text project .)
   yacc.py:2687:    BOTTOM          reduce using rule 31 (text -> text project .)
   yacc.py:2687:    EDGE            reduce using rule 31 (text -> text project .)
   yacc.py:2687:    FACE            reduce using rule 31 (text -> text project .)
   yacc.py:2687:    SURFACE         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    COLUMN          reduce using rule 31 (text -> text project .)
   yacc.py:2687:    SEAL            reduce using rule 31 (text -> text project .)
   yacc.py:2687:    HEADING         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    DOLLAR          reduce using rule 31 (text -> text project .)
   yacc.py:2687:    NOTE            reduce using rule 31 (text -> text project .)
   yacc.py:2687:    CATCHLINE       reduce using rule 31 (text -> text project .)
   yacc.py:2687:    COLOPHON        reduce using rule 31 (text -> text project .)
   yacc.py:2687:    DATE            reduce using rule 31 (text -> text project .)
   yacc.py:2687:    SIGNATURES      reduce using rule 31 (text -> text project .)
   yacc.py:2687:    SIGNATURE       reduce using rule 31 (text -> text project .)
   yacc.py:2687:    SUMMARY         reduce using rule 31 (text -> text project .)
   yacc.py:2687:    WITNESSES       reduce using rule 31 (text -> text project .)
   yacc.py:2687:    M               reduce using rule 31 (text -> text project .)
   yacc.py:2687:    LINELABEL       reduce using rule 31 (text -> text project .)
   yacc.py:2687:    SCORELABEL      reduce using rule 31 (text -> text project .)
   yacc.py:2687:    PARBAR          reduce using rule 31 (text -> text project .)
   yacc.py:2687:    TO              reduce using rule 31 (text -> text project .)
   yacc.py:2687:    FROM            reduce using rule 31 (text -> text project .)
   yacc.py:2687:    $end            reduce using rule 31 (text -> text project .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 19
   yacc.py:2563:
   yacc.py:2565:    (54) text -> text skipped_protocol .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    VERSION         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    ATF             reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    BIB             reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    LINK            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    INCLUDE         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    COMMENT         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    CHECK           reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    SCORE           reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    PROJECT         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    TRANSLATION     reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    AMPERSAND       reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    KEY             reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    TABLET          reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    ENVELOPE        reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    PRISM           reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    BULLA           reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    SEALINGS        reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    FRAGMENT        reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    OBJECT          reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    OBVERSE         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    REVERSE         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    LEFT            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    RIGHT           reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    TOP             reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    BOTTOM          reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    EDGE            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    FACE            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    SURFACE         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    COLUMN          reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    SEAL            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    HEADING         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    DOLLAR          reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    NOTE            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    CATCHLINE       reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    COLOPHON        reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    DATE            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    SIGNATURES      reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    SIGNATURE       reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    SUMMARY         reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    WITNESSES       reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    M               reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    LINELABEL       reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    SCORELABEL      reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    PARBAR          reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    TO              reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    FROM            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2687:    $end            reduce using rule 54 (text -> text skipped_protocol .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 20
   yacc.py:2563:
   yacc.py:2565:    (55) text -> text link .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 55 (text -> text link .)
   yacc.py:2687:    VERSION         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    ATF             reduce using rule 55 (text -> text link .)
   yacc.py:2687:    BIB             reduce using rule 55 (text -> text link .)
   yacc.py:2687:    LINK            reduce using rule 55 (text -> text link .)
   yacc.py:2687:    INCLUDE         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    COMMENT         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    CHECK           reduce using rule 55 (text -> text link .)
   yacc.py:2687:    SCORE           reduce using rule 55 (text -> text link .)
   yacc.py:2687:    PROJECT         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    TRANSLATION     reduce using rule 55 (text -> text link .)
   yacc.py:2687:    AMPERSAND       reduce using rule 55 (text -> text link .)
   yacc.py:2687:    KEY             reduce using rule 55 (text -> text link .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 55 (text -> text link .)
   yacc.py:2687:    TABLET          reduce using rule 55 (text -> text link .)
   yacc.py:2687:    ENVELOPE        reduce using rule 55 (text -> text link .)
   yacc.py:2687:    PRISM           reduce using rule 55 (text -> text link .)
   yacc.py:2687:    BULLA           reduce using rule 55 (text -> text link .)
   yacc.py:2687:    SEALINGS        reduce using rule 55 (text -> text link .)
   yacc.py:2687:    FRAGMENT        reduce using rule 55 (text -> text link .)
   yacc.py:2687:    OBJECT          reduce using rule 55 (text -> text link .)
   yacc.py:2687:    OBVERSE         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    REVERSE         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    LEFT            reduce using rule 55 (text -> text link .)
   yacc.py:2687:    RIGHT           reduce using rule 55 (text -> text link .)
   yacc.py:2687:    TOP             reduce using rule 55 (text -> text link .)
   yacc.py:2687:    BOTTOM          reduce using rule 55 (text -> text link .)
   yacc.py:2687:    EDGE            reduce using rule 55 (text -> text link .)
   yacc.py:2687:    FACE            reduce using rule 55 (text -> text link .)
   yacc.py:2687:    SURFACE         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    COLUMN          reduce using rule 55 (text -> text link .)
   yacc.py:2687:    SEAL            reduce using rule 55 (text -> text link .)
   yacc.py:2687:    HEADING         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    DOLLAR          reduce using rule 55 (text -> text link .)
   yacc.py:2687:    NOTE            reduce using rule 55 (text -> text link .)
   yacc.py:2687:    CATCHLINE       reduce using rule 55 (text -> text link .)
   yacc.py:2687:    COLOPHON        reduce using rule 55 (text -> text link .)
   yacc.py:2687:    DATE            reduce using rule 55 (text -> text link .)
   yacc.py:2687:    SIGNATURES      reduce using rule 55 (text -> text link .)
   yacc.py:2687:    SIGNATURE       reduce using rule 55 (text -> text link .)
   yacc.py:2687:    SUMMARY         reduce using rule 55 (text -> text link .)
   yacc.py:2687:    WITNESSES       reduce using rule 55 (text -> text link .)
   yacc.py:2687:    M               reduce using rule 55 (text -> text link .)
   yacc.py:2687:    LINELABEL       reduce using rule 55 (text -> text link .)
   yacc.py:2687:    SCORELABEL      reduce using rule 55 (text -> text link .)
   yacc.py:2687:    PARBAR          reduce using rule 55 (text -> text link .)
   yacc.py:2687:    TO              reduce using rule 55 (text -> text link .)
   yacc.py:2687:    FROM            reduce using rule 55 (text -> text link .)
   yacc.py:2687:    $end            reduce using rule 55 (text -> text link .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 21
   yacc.py:2563:
   yacc.py:2565:    (56) text -> text language_protocol .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    VERSION         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    ATF             reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    BIB             reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    LINK            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    INCLUDE         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    COMMENT         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    CHECK           reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    SCORE           reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    PROJECT         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    TRANSLATION     reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    AMPERSAND       reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    KEY             reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    TABLET          reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    ENVELOPE        reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    PRISM           reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    BULLA           reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    SEALINGS        reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    FRAGMENT        reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    OBJECT          reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    OBVERSE         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    REVERSE         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    LEFT            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    RIGHT           reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    TOP             reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    BOTTOM          reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    EDGE            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    FACE            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    SURFACE         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    COLUMN          reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    SEAL            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    HEADING         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    DOLLAR          reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    NOTE            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    CATCHLINE       reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    COLOPHON        reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    DATE            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    SIGNATURES      reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    SIGNATURE       reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    SUMMARY         reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    WITNESSES       reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    M               reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    LINELABEL       reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    SCORELABEL      reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    PARBAR          reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    TO              reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    FROM            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2687:    $end            reduce using rule 56 (text -> text language_protocol .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 22
   yacc.py:2563:
   yacc.py:2565:    (57) text -> text object .
   yacc.py:2565:    (79) object -> object . surface
   yacc.py:2565:    (80) object -> object . translation
   yacc.py:2565:    (81) object -> object . surface_element
   yacc.py:2565:    (89) surface -> . surface_statement
   yacc.py:2565:    (99) surface -> . surface surface_element
   yacc.py:2565:    (224) surface -> . surface comment
   yacc.py:2565:    (192) translation -> . translation_statement
   yacc.py:2565:    (193) translation -> . translation END REFERENCE newline
   yacc.py:2565:    (194) translation -> . translation surface
   yacc.py:2565:    (195) translation -> . translation translationlabeledline
   yacc.py:2565:    (196) translation -> . translation dollar
   yacc.py:2565:    (226) translation -> . translation comment
   yacc.py:2565:    (90) surface_element -> . line
   yacc.py:2565:    (91) surface_element -> . dollar
   yacc.py:2565:    (92) surface_element -> . note_statement
   yacc.py:2565:    (93) surface_element -> . link_reference_statement
   yacc.py:2565:    (94) surface_element -> . milestone
   yacc.py:2565:    (82) surface_statement -> . surface_specifier newline
   yacc.py:2565:    (190) translation_statement -> . TRANSLATION PARALLEL ID PROJECT newline
   yacc.py:2565:    (191) translation_statement -> . TRANSLATION LABELED ID PROJECT newline
   yacc.py:2565:    (105) line -> . line_statement
   yacc.py:2565:    (106) line -> . line lemma_statement
   yacc.py:2565:    (107) line -> . line note_statement
   yacc.py:2565:    (108) line -> . line interlinear
   yacc.py:2565:    (111) line -> . line link_reference_statement
   yacc.py:2565:    (112) line -> . line equalbrace_statement
   yacc.py:2565:    (116) line -> . line multilingual
   yacc.py:2565:    (228) line -> . line comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (126) milestone -> . milestone_name newline
   yacc.py:2565:    (15) surface_specifier -> . OBVERSE
   yacc.py:2565:    (16) surface_specifier -> . REVERSE
   yacc.py:2565:    (17) surface_specifier -> . LEFT
   yacc.py:2565:    (18) surface_specifier -> . RIGHT
   yacc.py:2565:    (19) surface_specifier -> . TOP
   yacc.py:2565:    (20) surface_specifier -> . BOTTOM
   yacc.py:2565:    (21) surface_specifier -> . EDGE
   yacc.py:2565:    (83) surface_specifier -> . surface_specifier flag
   yacc.py:2565:    (84) surface_specifier -> . FACE ID
   yacc.py:2565:    (85) surface_specifier -> . SURFACE ID
   yacc.py:2565:    (86) surface_specifier -> . COLUMN ID
   yacc.py:2565:    (87) surface_specifier -> . SEAL ID
   yacc.py:2565:    (88) surface_specifier -> . HEADING ID
   yacc.py:2565:    (104) line_statement -> . line_sequence newline
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (24) milestone_name -> . CATCHLINE
   yacc.py:2565:    (25) milestone_name -> . COLOPHON
   yacc.py:2565:    (26) milestone_name -> . DATE
   yacc.py:2565:    (27) milestone_name -> . SIGNATURES
   yacc.py:2565:    (28) milestone_name -> . SIGNATURE
   yacc.py:2565:    (29) milestone_name -> . SUMMARY
   yacc.py:2565:    (30) milestone_name -> . WITNESSES
   yacc.py:2565:    (127) milestone_name -> . M EQUALS ID
   yacc.py:2565:    (100) line_sequence -> . LINELABEL ID
   yacc.py:2565:    (101) line_sequence -> . SCORELABEL ID
   yacc.py:2565:    (102) line_sequence -> . line_sequence ID
   yacc.py:2565:    (103) line_sequence -> . line_sequence reference
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 57 (text -> text object .)
   yacc.py:2687:    VERSION         reduce using rule 57 (text -> text object .)
   yacc.py:2687:    ATF             reduce using rule 57 (text -> text object .)
   yacc.py:2687:    BIB             reduce using rule 57 (text -> text object .)
   yacc.py:2687:    LINK            reduce using rule 57 (text -> text object .)
   yacc.py:2687:    INCLUDE         reduce using rule 57 (text -> text object .)
   yacc.py:2687:    COMMENT         reduce using rule 57 (text -> text object .)
   yacc.py:2687:    CHECK           reduce using rule 57 (text -> text object .)
   yacc.py:2687:    SCORE           reduce using rule 57 (text -> text object .)
   yacc.py:2687:    PROJECT         reduce using rule 57 (text -> text object .)
   yacc.py:2687:    TRANSLATION     reduce using rule 57 (text -> text object .)
   yacc.py:2687:    AMPERSAND       reduce using rule 57 (text -> text object .)
   yacc.py:2687:    KEY             reduce using rule 57 (text -> text object .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 57 (text -> text object .)
   yacc.py:2687:    TABLET          reduce using rule 57 (text -> text object .)
   yacc.py:2687:    ENVELOPE        reduce using rule 57 (text -> text object .)
   yacc.py:2687:    PRISM           reduce using rule 57 (text -> text object .)
   yacc.py:2687:    BULLA           reduce using rule 57 (text -> text object .)
   yacc.py:2687:    SEALINGS        reduce using rule 57 (text -> text object .)
   yacc.py:2687:    FRAGMENT        reduce using rule 57 (text -> text object .)
   yacc.py:2687:    OBJECT          reduce using rule 57 (text -> text object .)
   yacc.py:2687:    M               reduce using rule 57 (text -> text object .)
   yacc.py:2687:    SCORELABEL      reduce using rule 57 (text -> text object .)
   yacc.py:2687:    $end            reduce using rule 57 (text -> text object .)
   yacc.py:2687:    OBVERSE         shift and go to state 63
   yacc.py:2687:    REVERSE         shift and go to state 64
   yacc.py:2687:    LEFT            shift and go to state 65
   yacc.py:2687:    RIGHT           shift and go to state 66
   yacc.py:2687:    TOP             shift and go to state 67
   yacc.py:2687:    BOTTOM          shift and go to state 68
   yacc.py:2687:    EDGE            shift and go to state 69
   yacc.py:2687:    FACE            shift and go to state 70
   yacc.py:2687:    SURFACE         shift and go to state 71
   yacc.py:2687:    COLUMN          shift and go to state 72
   yacc.py:2687:    SEAL            shift and go to state 73
   yacc.py:2687:    HEADING         shift and go to state 74
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    CATCHLINE       shift and go to state 80
   yacc.py:2687:    COLOPHON        shift and go to state 81
   yacc.py:2687:    DATE            shift and go to state 82
   yacc.py:2687:    SIGNATURES      shift and go to state 83
   yacc.py:2687:    SIGNATURE       shift and go to state 84
   yacc.py:2687:    SUMMARY         shift and go to state 85
   yacc.py:2687:    WITNESSES       shift and go to state 86
   yacc.py:2687:    LINELABEL       shift and go to state 88
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2696:  ! OBVERSE         [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! REVERSE         [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! LEFT            [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! RIGHT           [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! TOP             [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! BOTTOM          [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! EDGE            [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! FACE            [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! SURFACE         [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! COLUMN          [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! SEAL            [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! HEADING         [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! DOLLAR          [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! NOTE            [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! CATCHLINE       [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! COLOPHON        [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! DATE            [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! SIGNATURES      [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! SIGNATURE       [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! SUMMARY         [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! WITNESSES       [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! LINELABEL       [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! PARBAR          [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! TO              [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! FROM            [ reduce using rule 57 (text -> text object .) ]
   yacc.py:2696:  ! TRANSLATION     [ shift and go to state 51 ]
   yacc.py:2696:  ! M               [ shift and go to state 87 ]
   yacc.py:2696:  ! SCORELABEL      [ shift and go to state 89 ]
   yacc.py:2700:
   yacc.py:2714:    surface                        shift and go to state 93
   yacc.py:2714:    translation                    shift and go to state 94
   yacc.py:2714:    surface_element                shift and go to state 95
   yacc.py:2714:    surface_statement              shift and go to state 37
   yacc.py:2714:    translation_statement          shift and go to state 38
   yacc.py:2714:    dollar                         shift and go to state 39
   yacc.py:2714:    line                           shift and go to state 40
   yacc.py:2714:    note_statement                 shift and go to state 41
   yacc.py:2714:    link_reference_statement       shift and go to state 42
   yacc.py:2714:    milestone                      shift and go to state 43
   yacc.py:2714:    surface_specifier              shift and go to state 50
   yacc.py:2714:    line_statement                 shift and go to state 52
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    milestone_name                 shift and go to state 60
   yacc.py:2714:    line_sequence                  shift and go to state 75
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 23
   yacc.py:2563:
   yacc.py:2565:    (58) text -> text surface .
   yacc.py:2565:    (99) surface -> surface . surface_element
   yacc.py:2565:    (224) surface -> surface . comment
   yacc.py:2565:    (90) surface_element -> . line
   yacc.py:2565:    (91) surface_element -> . dollar
   yacc.py:2565:    (92) surface_element -> . note_statement
   yacc.py:2565:    (93) surface_element -> . link_reference_statement
   yacc.py:2565:    (94) surface_element -> . milestone
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (105) line -> . line_statement
   yacc.py:2565:    (106) line -> . line lemma_statement
   yacc.py:2565:    (107) line -> . line note_statement
   yacc.py:2565:    (108) line -> . line interlinear
   yacc.py:2565:    (111) line -> . line link_reference_statement
   yacc.py:2565:    (112) line -> . line equalbrace_statement
   yacc.py:2565:    (116) line -> . line multilingual
   yacc.py:2565:    (228) line -> . line comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (126) milestone -> . milestone_name newline
   yacc.py:2565:    (104) line_statement -> . line_sequence newline
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (24) milestone_name -> . CATCHLINE
   yacc.py:2565:    (25) milestone_name -> . COLOPHON
   yacc.py:2565:    (26) milestone_name -> . DATE
   yacc.py:2565:    (27) milestone_name -> . SIGNATURES
   yacc.py:2565:    (28) milestone_name -> . SIGNATURE
   yacc.py:2565:    (29) milestone_name -> . SUMMARY
   yacc.py:2565:    (30) milestone_name -> . WITNESSES
   yacc.py:2565:    (127) milestone_name -> . M EQUALS ID
   yacc.py:2565:    (100) line_sequence -> . LINELABEL ID
   yacc.py:2565:    (101) line_sequence -> . SCORELABEL ID
   yacc.py:2565:    (102) line_sequence -> . line_sequence ID
   yacc.py:2565:    (103) line_sequence -> . line_sequence reference
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    VERSION         reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    ATF             reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    BIB             reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    LINK            reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    INCLUDE         reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    SCORE           reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    PROJECT         reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    TRANSLATION     reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    AMPERSAND       reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    KEY             reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    TABLET          reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    ENVELOPE        reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    PRISM           reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    BULLA           reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    SEALINGS        reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    FRAGMENT        reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    OBJECT          reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    OBVERSE         reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    REVERSE         reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    LEFT            reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    RIGHT           reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    TOP             reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    BOTTOM          reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    EDGE            reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    FACE            reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    SURFACE         reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    COLUMN          reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    SEAL            reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    HEADING         reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    M               reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    SCORELABEL      reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    $end            reduce using rule 58 (text -> text surface .)
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    CATCHLINE       shift and go to state 80
   yacc.py:2687:    COLOPHON        shift and go to state 81
   yacc.py:2687:    DATE            shift and go to state 82
   yacc.py:2687:    SIGNATURES      shift and go to state 83
   yacc.py:2687:    SIGNATURE       shift and go to state 84
   yacc.py:2687:    SUMMARY         shift and go to state 85
   yacc.py:2687:    WITNESSES       shift and go to state 86
   yacc.py:2687:    LINELABEL       shift and go to state 88
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2696:  ! COMMENT         [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! CHECK           [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! DOLLAR          [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! NOTE            [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! CATCHLINE       [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! COLOPHON        [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! DATE            [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! SIGNATURES      [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! SIGNATURE       [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! SUMMARY         [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! WITNESSES       [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! LINELABEL       [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! PARBAR          [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! TO              [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! FROM            [ reduce using rule 58 (text -> text surface .) ]
   yacc.py:2696:  ! M               [ shift and go to state 87 ]
   yacc.py:2696:  ! SCORELABEL      [ shift and go to state 89 ]
   yacc.py:2700:
   yacc.py:2714:    surface_element                shift and go to state 108
   yacc.py:2714:    comment                        shift and go to state 109
   yacc.py:2714:    line                           shift and go to state 40
   yacc.py:2714:    dollar                         shift and go to state 39
   yacc.py:2714:    note_statement                 shift and go to state 41
   yacc.py:2714:    link_reference_statement       shift and go to state 42
   yacc.py:2714:    milestone                      shift and go to state 43
   yacc.py:2714:    line_statement                 shift and go to state 52
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    milestone_name                 shift and go to state 60
   yacc.py:2714:    line_sequence                  shift and go to state 75
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 24
   yacc.py:2563:
   yacc.py:2565:    (59) text -> text translation .
   yacc.py:2565:    (193) translation -> translation . END REFERENCE newline
   yacc.py:2565:    (194) translation -> translation . surface
   yacc.py:2565:    (195) translation -> translation . translationlabeledline
   yacc.py:2565:    (196) translation -> translation . dollar
   yacc.py:2565:    (226) translation -> translation . comment
   yacc.py:2565:    (89) surface -> . surface_statement
   yacc.py:2565:    (99) surface -> . surface surface_element
   yacc.py:2565:    (224) surface -> . surface comment
   yacc.py:2565:    (197) translationlabeledline -> . translationlabel NEWLINE
   yacc.py:2565:    (198) translationlabeledline -> . translationrangelabel NEWLINE
   yacc.py:2565:    (199) translationlabeledline -> . translationlabel CLOSER
   yacc.py:2565:    (200) translationlabeledline -> . translationrangelabel CLOSER
   yacc.py:2565:    (208) translationlabeledline -> . translationlabeledline reference
   yacc.py:2565:    (209) translationlabeledline -> . translationlabeledline reference newline
   yacc.py:2565:    (210) translationlabeledline -> . translationlabeledline note_statement
   yacc.py:2565:    (211) translationlabeledline -> . translationlabeledline ID
   yacc.py:2565:    (212) translationlabeledline -> . translationlabeledline ID newline
   yacc.py:2565:    (225) translationlabeledline -> . translationlabeledline comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (82) surface_statement -> . surface_specifier newline
   yacc.py:2565:    (201) translationlabel -> . LABEL
   yacc.py:2565:    (202) translationlabel -> . OPENR
   yacc.py:2565:    (203) translationlabel -> . translationlabel ID
   yacc.py:2565:    (204) translationlabel -> . translationlabel REFERENCE
   yacc.py:2565:    (205) translationrangelabel -> . translationlabel MINUS
   yacc.py:2565:    (206) translationrangelabel -> . translationrangelabel ID
   yacc.py:2565:    (207) translationrangelabel -> . translationrangelabel REFERENCE
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (15) surface_specifier -> . OBVERSE
   yacc.py:2565:    (16) surface_specifier -> . REVERSE
   yacc.py:2565:    (17) surface_specifier -> . LEFT
   yacc.py:2565:    (18) surface_specifier -> . RIGHT
   yacc.py:2565:    (19) surface_specifier -> . TOP
   yacc.py:2565:    (20) surface_specifier -> . BOTTOM
   yacc.py:2565:    (21) surface_specifier -> . EDGE
   yacc.py:2565:    (83) surface_specifier -> . surface_specifier flag
   yacc.py:2565:    (84) surface_specifier -> . FACE ID
   yacc.py:2565:    (85) surface_specifier -> . SURFACE ID
   yacc.py:2565:    (86) surface_specifier -> . COLUMN ID
   yacc.py:2565:    (87) surface_specifier -> . SEAL ID
   yacc.py:2565:    (88) surface_specifier -> . HEADING ID
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    VERSION         reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    ATF             reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    BIB             reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    LINK            reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    INCLUDE         reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    SCORE           reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    PROJECT         reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    TRANSLATION     reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    AMPERSAND       reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    KEY             reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    TABLET          reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    ENVELOPE        reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    PRISM           reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    BULLA           reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    SEALINGS        reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    FRAGMENT        reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    OBJECT          reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    NOTE            reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    CATCHLINE       reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    COLOPHON        reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    DATE            reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    SIGNATURES      reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    SIGNATURE       reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    SUMMARY         reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    WITNESSES       reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    M               reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    LINELABEL       reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    SCORELABEL      reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    PARBAR          reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    TO              reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    FROM            reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    $end            reduce using rule 59 (text -> text translation .)
   yacc.py:2687:    END             shift and go to state 110
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    LABEL           shift and go to state 117
   yacc.py:2687:    OPENR           shift and go to state 118
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    OBVERSE         shift and go to state 63
   yacc.py:2687:    REVERSE         shift and go to state 64
   yacc.py:2687:    LEFT            shift and go to state 65
   yacc.py:2687:    RIGHT           shift and go to state 66
   yacc.py:2687:    TOP             shift and go to state 67
   yacc.py:2687:    BOTTOM          shift and go to state 68
   yacc.py:2687:    EDGE            shift and go to state 69
   yacc.py:2687:    FACE            shift and go to state 70
   yacc.py:2687:    SURFACE         shift and go to state 71
   yacc.py:2687:    COLUMN          shift and go to state 72
   yacc.py:2687:    SEAL            shift and go to state 73
   yacc.py:2687:    HEADING         shift and go to state 74
   yacc.py:2689:
   yacc.py:2696:  ! COMMENT         [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! CHECK           [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! OBVERSE         [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! REVERSE         [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! LEFT            [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! RIGHT           [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! TOP             [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! BOTTOM          [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! EDGE            [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! FACE            [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! SURFACE         [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! COLUMN          [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! SEAL            [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! HEADING         [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2696:  ! DOLLAR          [ reduce using rule 59 (text -> text translation .) ]
   yacc.py:2700:
   yacc.py:2714:    surface                        shift and go to state 111
   yacc.py:2714:    translationlabeledline         shift and go to state 112
   yacc.py:2714:    dollar                         shift and go to state 113
   yacc.py:2714:    comment                        shift and go to state 114
   yacc.py:2714:    surface_statement              shift and go to state 37
   yacc.py:2714:    translationlabel               shift and go to state 115
   yacc.py:2714:    translationrangelabel          shift and go to state 116
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    surface_specifier              shift and go to state 50
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2561:
   yacc.py:2562:state 25
   yacc.py:2563:
   yacc.py:2565:    (60) text -> text surface_element .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    VERSION         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    ATF             reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    BIB             reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    LINK            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    INCLUDE         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    COMMENT         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    CHECK           reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    SCORE           reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    PROJECT         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    TRANSLATION     reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    AMPERSAND       reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    KEY             reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    TABLET          reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    ENVELOPE        reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    PRISM           reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    BULLA           reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    SEALINGS        reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    FRAGMENT        reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    OBJECT          reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    OBVERSE         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    REVERSE         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    LEFT            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    RIGHT           reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    TOP             reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    BOTTOM          reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    EDGE            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    FACE            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    SURFACE         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    COLUMN          reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    SEAL            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    HEADING         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    DOLLAR          reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    NOTE            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    CATCHLINE       reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    COLOPHON        reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    DATE            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    SIGNATURES      reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    SIGNATURE       reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    SUMMARY         reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    WITNESSES       reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    M               reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    LINELABEL       reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    SCORELABEL      reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    PARBAR          reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    TO              reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    FROM            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2687:    $end            reduce using rule 60 (text -> text surface_element .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 26
   yacc.py:2563:
   yacc.py:2565:    (61) text -> text COMPOSITE . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 119
   yacc.py:2561:
   yacc.py:2562:state 27
   yacc.py:2563:
   yacc.py:2565:    (227) text -> text comment .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    VERSION         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    ATF             reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    BIB             reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    LINK            reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    INCLUDE         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    COMMENT         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    CHECK           reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    SCORE           reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    PROJECT         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    TRANSLATION     reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    AMPERSAND       reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    KEY             reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    TABLET          reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    ENVELOPE        reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    PRISM           reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    BULLA           reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    SEALINGS        reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    FRAGMENT        reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    OBJECT          reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    OBVERSE         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    REVERSE         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    LEFT            reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    RIGHT           reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    TOP             reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    BOTTOM          reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    EDGE            reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    FACE            reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    SURFACE         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    COLUMN          reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    SEAL            reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    HEADING         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    DOLLAR          reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    NOTE            reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    CATCHLINE       reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    COLOPHON        reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    DATE            reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    SIGNATURES      reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    SIGNATURE       reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    SUMMARY         reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    WITNESSES       reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    M               reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    LINELABEL       reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    SCORELABEL      reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    PARBAR          reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    TO              reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    FROM            reduce using rule 227 (text -> text comment .)
   yacc.py:2687:    $end            reduce using rule 227 (text -> text comment .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 28
   yacc.py:2563:
   yacc.py:2565:    (232) text -> text score .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 232 (text -> text score .)
   yacc.py:2687:    VERSION         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    ATF             reduce using rule 232 (text -> text score .)
   yacc.py:2687:    BIB             reduce using rule 232 (text -> text score .)
   yacc.py:2687:    LINK            reduce using rule 232 (text -> text score .)
   yacc.py:2687:    INCLUDE         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    COMMENT         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    CHECK           reduce using rule 232 (text -> text score .)
   yacc.py:2687:    SCORE           reduce using rule 232 (text -> text score .)
   yacc.py:2687:    PROJECT         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    TRANSLATION     reduce using rule 232 (text -> text score .)
   yacc.py:2687:    AMPERSAND       reduce using rule 232 (text -> text score .)
   yacc.py:2687:    KEY             reduce using rule 232 (text -> text score .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 232 (text -> text score .)
   yacc.py:2687:    TABLET          reduce using rule 232 (text -> text score .)
   yacc.py:2687:    ENVELOPE        reduce using rule 232 (text -> text score .)
   yacc.py:2687:    PRISM           reduce using rule 232 (text -> text score .)
   yacc.py:2687:    BULLA           reduce using rule 232 (text -> text score .)
   yacc.py:2687:    SEALINGS        reduce using rule 232 (text -> text score .)
   yacc.py:2687:    FRAGMENT        reduce using rule 232 (text -> text score .)
   yacc.py:2687:    OBJECT          reduce using rule 232 (text -> text score .)
   yacc.py:2687:    OBVERSE         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    REVERSE         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    LEFT            reduce using rule 232 (text -> text score .)
   yacc.py:2687:    RIGHT           reduce using rule 232 (text -> text score .)
   yacc.py:2687:    TOP             reduce using rule 232 (text -> text score .)
   yacc.py:2687:    BOTTOM          reduce using rule 232 (text -> text score .)
   yacc.py:2687:    EDGE            reduce using rule 232 (text -> text score .)
   yacc.py:2687:    FACE            reduce using rule 232 (text -> text score .)
   yacc.py:2687:    SURFACE         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    COLUMN          reduce using rule 232 (text -> text score .)
   yacc.py:2687:    SEAL            reduce using rule 232 (text -> text score .)
   yacc.py:2687:    HEADING         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    DOLLAR          reduce using rule 232 (text -> text score .)
   yacc.py:2687:    NOTE            reduce using rule 232 (text -> text score .)
   yacc.py:2687:    CATCHLINE       reduce using rule 232 (text -> text score .)
   yacc.py:2687:    COLOPHON        reduce using rule 232 (text -> text score .)
   yacc.py:2687:    DATE            reduce using rule 232 (text -> text score .)
   yacc.py:2687:    SIGNATURES      reduce using rule 232 (text -> text score .)
   yacc.py:2687:    SIGNATURE       reduce using rule 232 (text -> text score .)
   yacc.py:2687:    SUMMARY         reduce using rule 232 (text -> text score .)
   yacc.py:2687:    WITNESSES       reduce using rule 232 (text -> text score .)
   yacc.py:2687:    M               reduce using rule 232 (text -> text score .)
   yacc.py:2687:    LINELABEL       reduce using rule 232 (text -> text score .)
   yacc.py:2687:    SCORELABEL      reduce using rule 232 (text -> text score .)
   yacc.py:2687:    PARBAR          reduce using rule 232 (text -> text score .)
   yacc.py:2687:    TO              reduce using rule 232 (text -> text score .)
   yacc.py:2687:    FROM            reduce using rule 232 (text -> text score .)
   yacc.py:2687:    $end            reduce using rule 232 (text -> text score .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 29
   yacc.py:2563:
   yacc.py:2565:    (11) version_protocol -> VERSION . ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 120
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 30
   yacc.py:2563:
   yacc.py:2565:    (23) project -> project_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    VERSION         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    ATF             reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    BIB             reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    LINK            reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    CHECK           reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    SCORE           reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    KEY             reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    TABLET          reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    PRISM           reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    BULLA           reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    LEFT            reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    TOP             reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    EDGE            reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    FACE            reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    SEAL            reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    HEADING         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    NOTE            reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    DATE            reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    M               reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    TO              reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    FROM            reduce using rule 23 (project -> project_statement .)
   yacc.py:2687:    $end            reduce using rule 23 (project -> project_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 31
   yacc.py:2563:
   yacc.py:2565:    (33) skipped_protocol -> ATF . USE UNICODE newline
   yacc.py:2565:    (34) skipped_protocol -> ATF . USE MATH newline
   yacc.py:2565:    (35) skipped_protocol -> ATF . USE LEGACY newline
   yacc.py:2565:    (36) skipped_protocol -> ATF . USE MYLINES newline
   yacc.py:2565:    (37) skipped_protocol -> ATF . USE LEXICAL newline
   yacc.py:2565:    (53) language_protocol -> ATF . LANG ID newline
   yacc.py:2566:
   yacc.py:2687:    USE             shift and go to state 121
   yacc.py:2687:    LANG            shift and go to state 122
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 32
   yacc.py:2563:
   yacc.py:2565:    (38) skipped_protocol -> key_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    VERSION         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    ATF             reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    BIB             reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    LINK            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    CHECK           reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    SCORE           reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    KEY             reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    TABLET          reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    PRISM           reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    BULLA           reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    LEFT            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    TOP             reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    EDGE            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    FACE            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    SEAL            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    HEADING         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    NOTE            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    DATE            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    M               reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    TO              reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    FROM            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2687:    $end            reduce using rule 38 (skipped_protocol -> key_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 33
   yacc.py:2563:
   yacc.py:2565:    (39) skipped_protocol -> BIB . ID newline
   yacc.py:2565:    (40) skipped_protocol -> BIB . ID EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 123
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 34
   yacc.py:2563:
   yacc.py:2565:    (41) skipped_protocol -> lemmatizer_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    VERSION         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    ATF             reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    BIB             reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    LINK            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    CHECK           reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    SCORE           reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    KEY             reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    TABLET          reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    PRISM           reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    BULLA           reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    LEFT            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    TOP             reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    EDGE            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    FACE            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    SEAL            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    HEADING         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    NOTE            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    DATE            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    M               reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    TO              reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    FROM            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2687:    $end            reduce using rule 41 (skipped_protocol -> lemmatizer_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 35
   yacc.py:2563:
   yacc.py:2565:    (49) link -> LINK . DEF ID EQUALS ID EQUALS ID newline
   yacc.py:2565:    (50) link -> LINK . SOURCE ID EQUALS ID newline
   yacc.py:2565:    (51) link -> LINK . PARALLEL ID EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    DEF             shift and go to state 124
   yacc.py:2687:    SOURCE          shift and go to state 125
   yacc.py:2687:    PARALLEL        shift and go to state 126
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 36
   yacc.py:2563:
   yacc.py:2565:    (52) link -> INCLUDE . ID EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 127
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 37
   yacc.py:2563:
   yacc.py:2565:    (89) surface -> surface_statement .
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    CHECK           reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    NOTE            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    DATE            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    M               reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    TO              reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    FROM            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    VERSION         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    ATF             reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    BIB             reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    LINK            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    SCORE           reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    KEY             reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    TABLET          reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    PRISM           reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    BULLA           reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    LEFT            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    TOP             reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    EDGE            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    FACE            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    SEAL            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    HEADING         reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    $end            reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    END             reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    LABEL           reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2687:    OPENR           reduce using rule 89 (surface -> surface_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 38
   yacc.py:2563:
   yacc.py:2565:    (192) translation -> translation_statement .
   yacc.py:2566:
   yacc.py:2687:    END             reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    CHECK           reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    LABEL           reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    OPENR           reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    LEFT            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    TOP             reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    EDGE            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    FACE            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    SEAL            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    HEADING         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    VERSION         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    ATF             reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    BIB             reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    LINK            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    SCORE           reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    KEY             reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    TABLET          reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    PRISM           reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    BULLA           reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    NOTE            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    DATE            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    M               reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    TO              reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    FROM            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2687:    $end            reduce using rule 192 (translation -> translation_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 39
   yacc.py:2563:
   yacc.py:2565:    (91) surface_element -> dollar .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    VERSION         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    ATF             reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    BIB             reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    LINK            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    INCLUDE         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    COMMENT         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    CHECK           reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    SCORE           reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    PROJECT         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    TRANSLATION     reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    AMPERSAND       reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    KEY             reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    TABLET          reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    ENVELOPE        reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    PRISM           reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    BULLA           reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    SEALINGS        reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    FRAGMENT        reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    OBJECT          reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    OBVERSE         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    REVERSE         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    LEFT            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    RIGHT           reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    TOP             reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    BOTTOM          reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    EDGE            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    FACE            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    SURFACE         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    COLUMN          reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    SEAL            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    HEADING         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    DOLLAR          reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    NOTE            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    CATCHLINE       reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    COLOPHON        reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    DATE            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    SIGNATURES      reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    SIGNATURE       reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    SUMMARY         reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    WITNESSES       reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    M               reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    LINELABEL       reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    SCORELABEL      reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    PARBAR          reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    TO              reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    FROM            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    $end            reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    END             reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    LABEL           reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2687:    OPENR           reduce using rule 91 (surface_element -> dollar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 40
   yacc.py:2563:
   yacc.py:2565:    (90) surface_element -> line .
   yacc.py:2565:    (106) line -> line . lemma_statement
   yacc.py:2565:    (107) line -> line . note_statement
   yacc.py:2565:    (108) line -> line . interlinear
   yacc.py:2565:    (111) line -> line . link_reference_statement
   yacc.py:2565:    (112) line -> line . equalbrace_statement
   yacc.py:2565:    (116) line -> line . multilingual
   yacc.py:2565:    (228) line -> line . comment
   yacc.py:2565:    (131) lemma_statement -> . lemma_list newline
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (109) interlinear -> . TR ID newline
   yacc.py:2565:    (110) interlinear -> . TR newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (115) equalbrace_statement -> . equalbrace newline
   yacc.py:2565:    (121) multilingual -> . multilingual_statement
   yacc.py:2565:    (122) multilingual -> . multilingual lemma_statement
   yacc.py:2565:    (123) multilingual -> . multilingual note_statement
   yacc.py:2565:    (124) multilingual -> . multilingual link_reference_statement
   yacc.py:2565:    (229) multilingual -> . multilingual comment
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (125) lemma_list -> . LEM ID
   yacc.py:2565:    (128) lemma_list -> . lemma_list lemma
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (113) equalbrace -> . EQUALBRACE
   yacc.py:2565:    (114) equalbrace -> . equalbrace ID
   yacc.py:2565:    (120) multilingual_statement -> . multilingual_sequence newline
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2565:    (117) multilingual_sequence -> . MULTILINGUAL ID
   yacc.py:2565:    (118) multilingual_sequence -> . multilingual_sequence ID
   yacc.py:2565:    (119) multilingual_sequence -> . multilingual_sequence reference
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    VERSION         reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    ATF             reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    BIB             reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    LINK            reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    INCLUDE         reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    SCORE           reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    PROJECT         reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    TRANSLATION     reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    AMPERSAND       reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    KEY             reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    TABLET          reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    ENVELOPE        reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    PRISM           reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    BULLA           reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    SEALINGS        reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    FRAGMENT        reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    OBJECT          reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    OBVERSE         reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    REVERSE         reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    LEFT            reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    RIGHT           reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    TOP             reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    BOTTOM          reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    EDGE            reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    FACE            reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    SURFACE         reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    COLUMN          reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    SEAL            reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    HEADING         reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    DOLLAR          reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    CATCHLINE       reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    COLOPHON        reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    DATE            reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    SIGNATURES      reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    SIGNATURE       reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    SUMMARY         reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    WITNESSES       reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    M               reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    LINELABEL       reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    SCORELABEL      reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    $end            reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    END             reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    LABEL           reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    OPENR           reduce using rule 90 (surface_element -> line .)
   yacc.py:2687:    TR              shift and go to state 136
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    LEM             shift and go to state 139
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    EQUALBRACE      shift and go to state 140
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2687:    MULTILINGUAL    shift and go to state 142
   yacc.py:2689:
   yacc.py:2696:  ! COMMENT         [ reduce using rule 90 (surface_element -> line .) ]
   yacc.py:2696:  ! CHECK           [ reduce using rule 90 (surface_element -> line .) ]
   yacc.py:2696:  ! NOTE            [ reduce using rule 90 (surface_element -> line .) ]
   yacc.py:2696:  ! PARBAR          [ reduce using rule 90 (surface_element -> line .) ]
   yacc.py:2696:  ! TO              [ reduce using rule 90 (surface_element -> line .) ]
   yacc.py:2696:  ! FROM            [ reduce using rule 90 (surface_element -> line .) ]
   yacc.py:2700:
   yacc.py:2714:    lemma_statement                shift and go to state 128
   yacc.py:2714:    note_statement                 shift and go to state 129
   yacc.py:2714:    interlinear                    shift and go to state 130
   yacc.py:2714:    link_reference_statement       shift and go to state 131
   yacc.py:2714:    equalbrace_statement           shift and go to state 132
   yacc.py:2714:    multilingual                   shift and go to state 133
   yacc.py:2714:    comment                        shift and go to state 134
   yacc.py:2714:    lemma_list                     shift and go to state 135
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    equalbrace                     shift and go to state 137
   yacc.py:2714:    multilingual_statement         shift and go to state 138
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2714:    multilingual_sequence          shift and go to state 141
   yacc.py:2561:
   yacc.py:2562:state 41
   yacc.py:2563:
   yacc.py:2565:    (92) surface_element -> note_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    VERSION         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    ATF             reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    BIB             reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    LINK            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    CHECK           reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    SCORE           reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    KEY             reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    TABLET          reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    PRISM           reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    BULLA           reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    LEFT            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    TOP             reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    EDGE            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    FACE            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    SEAL            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    HEADING         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    NOTE            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    DATE            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    M               reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    TO              reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    FROM            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    $end            reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    END             reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    LABEL           reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2687:    OPENR           reduce using rule 92 (surface_element -> note_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 42
   yacc.py:2563:
   yacc.py:2565:    (93) surface_element -> link_reference_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    VERSION         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    ATF             reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    BIB             reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    LINK            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    CHECK           reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    SCORE           reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    KEY             reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    TABLET          reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    PRISM           reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    BULLA           reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    LEFT            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    TOP             reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    EDGE            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    FACE            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    SEAL            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    HEADING         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    NOTE            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    DATE            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    M               reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    TO              reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    FROM            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    $end            reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    END             reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    LABEL           reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2687:    OPENR           reduce using rule 93 (surface_element -> link_reference_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 43
   yacc.py:2563:
   yacc.py:2565:    (94) surface_element -> milestone .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    VERSION         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    ATF             reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    BIB             reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    LINK            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    INCLUDE         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    COMMENT         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    CHECK           reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    SCORE           reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    PROJECT         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    TRANSLATION     reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    AMPERSAND       reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    KEY             reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    TABLET          reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    ENVELOPE        reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    PRISM           reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    BULLA           reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    SEALINGS        reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    FRAGMENT        reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    OBJECT          reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    OBVERSE         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    REVERSE         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    LEFT            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    RIGHT           reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    TOP             reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    BOTTOM          reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    EDGE            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    FACE            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    SURFACE         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    COLUMN          reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    SEAL            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    HEADING         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    DOLLAR          reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    NOTE            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    CATCHLINE       reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    COLOPHON        reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    DATE            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    SIGNATURES      reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    SIGNATURE       reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    SUMMARY         reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    WITNESSES       reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    M               reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    LINELABEL       reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    SCORELABEL      reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    PARBAR          reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    TO              reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    FROM            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    $end            reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    END             reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    LABEL           reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2687:    OPENR           reduce using rule 94 (surface_element -> milestone .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 44
   yacc.py:2563:
   yacc.py:2565:    (222) comment -> COMMENT . ID NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 143
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 45
   yacc.py:2563:
   yacc.py:2565:    (223) comment -> CHECK . ID NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 144
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 46
   yacc.py:2563:
   yacc.py:2565:    (230) score -> SCORE . ID ID NEWLINE
   yacc.py:2565:    (231) score -> SCORE . ID ID ID NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 145
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 47
   yacc.py:2563:
   yacc.py:2565:    (22) project_statement -> PROJECT . ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 146
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 48
   yacc.py:2563:
   yacc.py:2565:    (42) key_statement -> key . newline
   yacc.py:2565:    (43) key_statement -> key . EQUALS newline
   yacc.py:2565:    (45) key -> key . EQUALS ID
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 148
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 147
   yacc.py:2561:
   yacc.py:2562:state 49
   yacc.py:2563:
   yacc.py:2565:    (48) lemmatizer_statement -> lemmatizer . newline
   yacc.py:2565:    (47) lemmatizer -> lemmatizer . ID
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 150
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 149
   yacc.py:2561:
   yacc.py:2562:state 50
   yacc.py:2563:
   yacc.py:2565:    (82) surface_statement -> surface_specifier . newline
   yacc.py:2565:    (83) surface_specifier -> surface_specifier . flag
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (65) flag -> . HASH
   yacc.py:2565:    (66) flag -> . EXCLAIM
   yacc.py:2565:    (67) flag -> . QUERY
   yacc.py:2565:    (68) flag -> . STAR
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    HASH            shift and go to state 101
   yacc.py:2687:    EXCLAIM         shift and go to state 102
   yacc.py:2687:    QUERY           shift and go to state 103
   yacc.py:2687:    STAR            shift and go to state 104
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 151
   yacc.py:2714:    flag                           shift and go to state 152
   yacc.py:2561:
   yacc.py:2562:state 51
   yacc.py:2563:
   yacc.py:2565:    (190) translation_statement -> TRANSLATION . PARALLEL ID PROJECT newline
   yacc.py:2565:    (191) translation_statement -> TRANSLATION . LABELED ID PROJECT newline
   yacc.py:2566:
   yacc.py:2687:    PARALLEL        shift and go to state 153
   yacc.py:2687:    LABELED         shift and go to state 154
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 52
   yacc.py:2563:
   yacc.py:2565:    (105) line -> line_statement .
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    CHECK           reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    LEM             reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    NOTE            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    TO              reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    FROM            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    VERSION         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    ATF             reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    BIB             reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    LINK            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    SCORE           reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    KEY             reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    TABLET          reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    PRISM           reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    BULLA           reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    LEFT            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    TOP             reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    EDGE            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    FACE            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    SEAL            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    HEADING         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    DATE            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    M               reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    $end            reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    END             reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    LABEL           reduce using rule 105 (line -> line_statement .)
   yacc.py:2687:    OPENR           reduce using rule 105 (line -> line_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 53
   yacc.py:2563:
   yacc.py:2565:    (95) dollar -> ruling_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    VERSION         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    ATF             reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    BIB             reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    LINK            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    CHECK           reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    SCORE           reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    KEY             reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    TABLET          reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    PRISM           reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    BULLA           reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    LEFT            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    TOP             reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    EDGE            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    FACE            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    SEAL            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    HEADING         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    NOTE            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    DATE            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    M               reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    TO              reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    FROM            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    $end            reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    END             reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    LABEL           reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2687:    OPENR           reduce using rule 95 (dollar -> ruling_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 54
   yacc.py:2563:
   yacc.py:2565:    (96) dollar -> loose_dollar_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    VERSION         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    ATF             reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    BIB             reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    LINK            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    CHECK           reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    SCORE           reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    KEY             reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    TABLET          reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    PRISM           reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    BULLA           reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    LEFT            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    TOP             reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    EDGE            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    FACE            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    SEAL            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    HEADING         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    NOTE            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    DATE            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    M               reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    TO              reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    FROM            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    $end            reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    END             reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    LABEL           reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2687:    OPENR           reduce using rule 96 (dollar -> loose_dollar_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 55
   yacc.py:2563:
   yacc.py:2565:    (97) dollar -> strict_dollar_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    VERSION         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    ATF             reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    BIB             reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    LINK            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    CHECK           reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    SCORE           reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    KEY             reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    TABLET          reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    PRISM           reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    BULLA           reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    LEFT            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    TOP             reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    EDGE            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    FACE            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    SEAL            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    HEADING         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    NOTE            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    DATE            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    M               reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    TO              reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    FROM            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    $end            reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    END             reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    LABEL           reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2687:    OPENR           reduce using rule 97 (dollar -> strict_dollar_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 56
   yacc.py:2563:
   yacc.py:2565:    (98) dollar -> simple_dollar_statement .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    VERSION         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    ATF             reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    BIB             reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    LINK            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    CHECK           reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    SCORE           reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    KEY             reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    TABLET          reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    PRISM           reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    BULLA           reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    LEFT            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    TOP             reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    EDGE            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    FACE            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    SEAL            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    HEADING         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    NOTE            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    DATE            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    M               reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    TO              reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    FROM            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    $end            reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    END             reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    LABEL           reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2687:    OPENR           reduce using rule 98 (dollar -> simple_dollar_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 57
   yacc.py:2563:
   yacc.py:2565:    (141) note_statement -> note_sequence . newline
   yacc.py:2565:    (143) note_sequence -> note_sequence . ID
   yacc.py:2565:    (144) note_sequence -> note_sequence . reference
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (145) reference -> . HAT ID HAT
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 156
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    HAT             shift and go to state 158
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 155
   yacc.py:2714:    reference                      shift and go to state 157
   yacc.py:2561:
   yacc.py:2562:state 58
   yacc.py:2563:
   yacc.py:2565:    (217) link_reference_statement -> link_reference . newline
   yacc.py:2565:    (4) link_reference -> link_reference . ID
   yacc.py:2565:    (5) link_reference -> link_reference . COMMA ID
   yacc.py:2565:    (6) link_reference -> link_reference . REFERENCE
   yacc.py:2565:    (7) link_reference -> link_reference . ID QUERY
   yacc.py:2565:    (216) link_range_reference -> link_reference . MINUS
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 160
   yacc.py:2687:    COMMA           shift and go to state 161
   yacc.py:2687:    REFERENCE       shift and go to state 162
   yacc.py:2687:    MINUS           shift and go to state 163
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 159
   yacc.py:2561:
   yacc.py:2562:state 59
   yacc.py:2563:
   yacc.py:2565:    (218) link_reference_statement -> link_range_reference . newline
   yacc.py:2565:    (214) link_range_reference -> link_range_reference . ID
   yacc.py:2565:    (215) link_range_reference -> link_range_reference . COMMA ID
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 165
   yacc.py:2687:    COMMA           shift and go to state 166
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 164
   yacc.py:2561:
   yacc.py:2562:state 60
   yacc.py:2563:
   yacc.py:2565:    (126) milestone -> milestone_name . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 167
   yacc.py:2561:
   yacc.py:2562:state 61
   yacc.py:2563:
   yacc.py:2565:    (44) key -> KEY . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 168
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 62
   yacc.py:2563:
   yacc.py:2565:    (46) lemmatizer -> LEMMATIZER .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 46 (lemmatizer -> LEMMATIZER .)
   yacc.py:2687:    NEWLINE         reduce using rule 46 (lemmatizer -> LEMMATIZER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 63
   yacc.py:2563:
   yacc.py:2565:    (15) surface_specifier -> OBVERSE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 15 (surface_specifier -> OBVERSE .)
   yacc.py:2687:    HASH            reduce using rule 15 (surface_specifier -> OBVERSE .)
   yacc.py:2687:    EXCLAIM         reduce using rule 15 (surface_specifier -> OBVERSE .)
   yacc.py:2687:    QUERY           reduce using rule 15 (surface_specifier -> OBVERSE .)
   yacc.py:2687:    STAR            reduce using rule 15 (surface_specifier -> OBVERSE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 64
   yacc.py:2563:
   yacc.py:2565:    (16) surface_specifier -> REVERSE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 16 (surface_specifier -> REVERSE .)
   yacc.py:2687:    HASH            reduce using rule 16 (surface_specifier -> REVERSE .)
   yacc.py:2687:    EXCLAIM         reduce using rule 16 (surface_specifier -> REVERSE .)
   yacc.py:2687:    QUERY           reduce using rule 16 (surface_specifier -> REVERSE .)
   yacc.py:2687:    STAR            reduce using rule 16 (surface_specifier -> REVERSE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 65
   yacc.py:2563:
   yacc.py:2565:    (17) surface_specifier -> LEFT .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 17 (surface_specifier -> LEFT .)
   yacc.py:2687:    HASH            reduce using rule 17 (surface_specifier -> LEFT .)
   yacc.py:2687:    EXCLAIM         reduce using rule 17 (surface_specifier -> LEFT .)
   yacc.py:2687:    QUERY           reduce using rule 17 (surface_specifier -> LEFT .)
   yacc.py:2687:    STAR            reduce using rule 17 (surface_specifier -> LEFT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 66
   yacc.py:2563:
   yacc.py:2565:    (18) surface_specifier -> RIGHT .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 18 (surface_specifier -> RIGHT .)
   yacc.py:2687:    HASH            reduce using rule 18 (surface_specifier -> RIGHT .)
   yacc.py:2687:    EXCLAIM         reduce using rule 18 (surface_specifier -> RIGHT .)
   yacc.py:2687:    QUERY           reduce using rule 18 (surface_specifier -> RIGHT .)
   yacc.py:2687:    STAR            reduce using rule 18 (surface_specifier -> RIGHT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 67
   yacc.py:2563:
   yacc.py:2565:    (19) surface_specifier -> TOP .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 19 (surface_specifier -> TOP .)
   yacc.py:2687:    HASH            reduce using rule 19 (surface_specifier -> TOP .)
   yacc.py:2687:    EXCLAIM         reduce using rule 19 (surface_specifier -> TOP .)
   yacc.py:2687:    QUERY           reduce using rule 19 (surface_specifier -> TOP .)
   yacc.py:2687:    STAR            reduce using rule 19 (surface_specifier -> TOP .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 68
   yacc.py:2563:
   yacc.py:2565:    (20) surface_specifier -> BOTTOM .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 20 (surface_specifier -> BOTTOM .)
   yacc.py:2687:    HASH            reduce using rule 20 (surface_specifier -> BOTTOM .)
   yacc.py:2687:    EXCLAIM         reduce using rule 20 (surface_specifier -> BOTTOM .)
   yacc.py:2687:    QUERY           reduce using rule 20 (surface_specifier -> BOTTOM .)
   yacc.py:2687:    STAR            reduce using rule 20 (surface_specifier -> BOTTOM .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 69
   yacc.py:2563:
   yacc.py:2565:    (21) surface_specifier -> EDGE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 21 (surface_specifier -> EDGE .)
   yacc.py:2687:    HASH            reduce using rule 21 (surface_specifier -> EDGE .)
   yacc.py:2687:    EXCLAIM         reduce using rule 21 (surface_specifier -> EDGE .)
   yacc.py:2687:    QUERY           reduce using rule 21 (surface_specifier -> EDGE .)
   yacc.py:2687:    STAR            reduce using rule 21 (surface_specifier -> EDGE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 70
   yacc.py:2563:
   yacc.py:2565:    (84) surface_specifier -> FACE . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 169
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 71
   yacc.py:2563:
   yacc.py:2565:    (85) surface_specifier -> SURFACE . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 170
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 72
   yacc.py:2563:
   yacc.py:2565:    (86) surface_specifier -> COLUMN . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 171
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 73
   yacc.py:2563:
   yacc.py:2565:    (87) surface_specifier -> SEAL . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 172
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 74
   yacc.py:2563:
   yacc.py:2565:    (88) surface_specifier -> HEADING . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 173
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 75
   yacc.py:2563:
   yacc.py:2565:    (104) line_statement -> line_sequence . newline
   yacc.py:2565:    (102) line_sequence -> line_sequence . ID
   yacc.py:2565:    (103) line_sequence -> line_sequence . reference
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (145) reference -> . HAT ID HAT
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 175
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    HAT             shift and go to state 158
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 174
   yacc.py:2714:    reference                      shift and go to state 176
   yacc.py:2561:
   yacc.py:2562:state 76
   yacc.py:2563:
   yacc.py:2565:    (132) ruling_statement -> ruling . newline
   yacc.py:2565:    (140) ruling -> ruling . flag
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (65) flag -> . HASH
   yacc.py:2565:    (66) flag -> . EXCLAIM
   yacc.py:2565:    (67) flag -> . QUERY
   yacc.py:2565:    (68) flag -> . STAR
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    HASH            shift and go to state 101
   yacc.py:2687:    EXCLAIM         shift and go to state 102
   yacc.py:2687:    QUERY           shift and go to state 103
   yacc.py:2687:    STAR            shift and go to state 104
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 177
   yacc.py:2714:    flag                           shift and go to state 178
   yacc.py:2561:
   yacc.py:2562:state 77
   yacc.py:2563:
   yacc.py:2565:    (148) loose_dollar_statement -> DOLLAR . PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> DOLLAR . state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> DOLLAR . ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> DOLLAR . state newline
   yacc.py:2565:    (10) simple_dollar_statement -> DOLLAR . REFERENCE ID newline
   yacc.py:2565:    (133) ruling -> DOLLAR . SINGLE RULING
   yacc.py:2565:    (134) ruling -> DOLLAR . DOUBLE RULING
   yacc.py:2565:    (135) ruling -> DOLLAR . TRIPLE RULING
   yacc.py:2565:    (136) ruling -> DOLLAR . SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> DOLLAR . DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> DOLLAR . TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> DOLLAR . RULING
   yacc.py:2565:    (150) state_description -> . plural_state_description
   yacc.py:2565:    (151) state_description -> . singular_state_desc
   yacc.py:2565:    (152) state_description -> . brief_state_desc
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2565:    (153) plural_state_description -> . plural_quantifier plural_scope state
   yacc.py:2565:    (154) plural_state_description -> . ID plural_scope state
   yacc.py:2565:    (155) plural_state_description -> . ID singular_scope state
   yacc.py:2565:    (156) plural_state_description -> . ID REFERENCE state
   yacc.py:2565:    (157) plural_state_description -> . plural_scope state
   yacc.py:2565:    (158) plural_state_description -> . state plural_scope
   yacc.py:2565:    (159) plural_state_description -> . ID MINUS ID plural_scope state
   yacc.py:2565:    (160) plural_state_description -> . qualification plural_state_description
   yacc.py:2565:    (161) singular_state_desc -> . singular_scope state
   yacc.py:2565:    (162) singular_state_desc -> . REFERENCE state
   yacc.py:2565:    (163) singular_state_desc -> . REFERENCE ID state
   yacc.py:2565:    (164) singular_state_desc -> . state singular_scope
   yacc.py:2565:    (166) singular_state_desc -> . partial_quantifier singular_state_desc
   yacc.py:2565:    (165) brief_state_desc -> . brief_quantifier state
   yacc.py:2565:    (173) plural_quantifier -> . SEVERAL
   yacc.py:2565:    (174) plural_quantifier -> . SOME
   yacc.py:2565:    (178) plural_scope -> . COLUMNS
   yacc.py:2565:    (179) plural_scope -> . LINES
   yacc.py:2565:    (180) plural_scope -> . CASES
   yacc.py:2565:    (187) qualification -> . AT LEAST
   yacc.py:2565:    (188) qualification -> . AT MOST
   yacc.py:2565:    (189) qualification -> . ABOUT
   yacc.py:2565:    (175) singular_scope -> . LINE
   yacc.py:2565:    (176) singular_scope -> . CASE
   yacc.py:2565:    (177) singular_scope -> . SPACE
   yacc.py:2565:    (186) partial_quantifier -> . brief_quantifier OF
   yacc.py:2565:    (181) brief_quantifier -> . REST
   yacc.py:2565:    (182) brief_quantifier -> . START
   yacc.py:2565:    (183) brief_quantifier -> . BEGINNING
   yacc.py:2565:    (184) brief_quantifier -> . MIDDLE
   yacc.py:2565:    (185) brief_quantifier -> . END
   yacc.py:2566:
   yacc.py:2687:    PARENTHETICALID shift and go to state 179
   yacc.py:2687:    ID              shift and go to state 181
   yacc.py:2687:    REFERENCE       shift and go to state 183
   yacc.py:2687:    SINGLE          shift and go to state 184
   yacc.py:2687:    DOUBLE          shift and go to state 186
   yacc.py:2687:    TRIPLE          shift and go to state 187
   yacc.py:2687:    RULING          shift and go to state 185
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2687:    SEVERAL         shift and go to state 204
   yacc.py:2687:    SOME            shift and go to state 205
   yacc.py:2687:    COLUMNS         shift and go to state 206
   yacc.py:2687:    LINES           shift and go to state 207
   yacc.py:2687:    CASES           shift and go to state 208
   yacc.py:2687:    AT              shift and go to state 209
   yacc.py:2687:    ABOUT           shift and go to state 210
   yacc.py:2687:    LINE            shift and go to state 188
   yacc.py:2687:    CASE            shift and go to state 211
   yacc.py:2687:    SPACE           shift and go to state 212
   yacc.py:2687:    REST            shift and go to state 213
   yacc.py:2687:    START           shift and go to state 214
   yacc.py:2687:    BEGINNING       shift and go to state 215
   yacc.py:2687:    MIDDLE          shift and go to state 216
   yacc.py:2687:    END             shift and go to state 217
   yacc.py:2689:
   yacc.py:2714:    state_description              shift and go to state 180
   yacc.py:2714:    state                          shift and go to state 182
   yacc.py:2714:    plural_state_description       shift and go to state 189
   yacc.py:2714:    singular_state_desc            shift and go to state 190
   yacc.py:2714:    brief_state_desc               shift and go to state 191
   yacc.py:2714:    plural_quantifier              shift and go to state 198
   yacc.py:2714:    plural_scope                   shift and go to state 199
   yacc.py:2714:    singular_scope                 shift and go to state 200
   yacc.py:2714:    qualification                  shift and go to state 201
   yacc.py:2714:    partial_quantifier             shift and go to state 202
   yacc.py:2714:    brief_quantifier               shift and go to state 203
   yacc.py:2561:
   yacc.py:2562:state 78
   yacc.py:2563:
   yacc.py:2565:    (142) note_sequence -> NOTE .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 142 (note_sequence -> NOTE .)
   yacc.py:2687:    NEWLINE         reduce using rule 142 (note_sequence -> NOTE .)
   yacc.py:2687:    HAT             reduce using rule 142 (note_sequence -> NOTE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 79
   yacc.py:2563:
   yacc.py:2565:    (213) link_reference -> link_operator . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 218
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 80
   yacc.py:2563:
   yacc.py:2565:    (24) milestone_name -> CATCHLINE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 24 (milestone_name -> CATCHLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 81
   yacc.py:2563:
   yacc.py:2565:    (25) milestone_name -> COLOPHON .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 25 (milestone_name -> COLOPHON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 82
   yacc.py:2563:
   yacc.py:2565:    (26) milestone_name -> DATE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 26 (milestone_name -> DATE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 83
   yacc.py:2563:
   yacc.py:2565:    (27) milestone_name -> SIGNATURES .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 27 (milestone_name -> SIGNATURES .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 84
   yacc.py:2563:
   yacc.py:2565:    (28) milestone_name -> SIGNATURE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 28 (milestone_name -> SIGNATURE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 85
   yacc.py:2563:
   yacc.py:2565:    (29) milestone_name -> SUMMARY .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 29 (milestone_name -> SUMMARY .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 86
   yacc.py:2563:
   yacc.py:2565:    (30) milestone_name -> WITNESSES .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 30 (milestone_name -> WITNESSES .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 87
   yacc.py:2563:
   yacc.py:2565:    (127) milestone_name -> M . EQUALS ID
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 219
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 88
   yacc.py:2563:
   yacc.py:2565:    (100) line_sequence -> LINELABEL . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 220
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 89
   yacc.py:2563:
   yacc.py:2565:    (101) line_sequence -> SCORELABEL . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 221
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 90
   yacc.py:2563:
   yacc.py:2565:    (219) link_operator -> PARBAR .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 219 (link_operator -> PARBAR .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 91
   yacc.py:2563:
   yacc.py:2565:    (220) link_operator -> TO .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 220 (link_operator -> TO .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 92
   yacc.py:2563:
   yacc.py:2565:    (221) link_operator -> FROM .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 221 (link_operator -> FROM .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 93
   yacc.py:2563:
   yacc.py:2565:    (79) object -> object surface .
   yacc.py:2565:    (99) surface -> surface . surface_element
   yacc.py:2565:    (224) surface -> surface . comment
   yacc.py:2565:    (90) surface_element -> . line
   yacc.py:2565:    (91) surface_element -> . dollar
   yacc.py:2565:    (92) surface_element -> . note_statement
   yacc.py:2565:    (93) surface_element -> . link_reference_statement
   yacc.py:2565:    (94) surface_element -> . milestone
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (105) line -> . line_statement
   yacc.py:2565:    (106) line -> . line lemma_statement
   yacc.py:2565:    (107) line -> . line note_statement
   yacc.py:2565:    (108) line -> . line interlinear
   yacc.py:2565:    (111) line -> . line link_reference_statement
   yacc.py:2565:    (112) line -> . line equalbrace_statement
   yacc.py:2565:    (116) line -> . line multilingual
   yacc.py:2565:    (228) line -> . line comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (126) milestone -> . milestone_name newline
   yacc.py:2565:    (104) line_statement -> . line_sequence newline
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (24) milestone_name -> . CATCHLINE
   yacc.py:2565:    (25) milestone_name -> . COLOPHON
   yacc.py:2565:    (26) milestone_name -> . DATE
   yacc.py:2565:    (27) milestone_name -> . SIGNATURES
   yacc.py:2565:    (28) milestone_name -> . SIGNATURE
   yacc.py:2565:    (29) milestone_name -> . SUMMARY
   yacc.py:2565:    (30) milestone_name -> . WITNESSES
   yacc.py:2565:    (127) milestone_name -> . M EQUALS ID
   yacc.py:2565:    (100) line_sequence -> . LINELABEL ID
   yacc.py:2565:    (101) line_sequence -> . SCORELABEL ID
   yacc.py:2565:    (102) line_sequence -> . line_sequence ID
   yacc.py:2565:    (103) line_sequence -> . line_sequence reference
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    TRANSLATION     reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    OBVERSE         reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    REVERSE         reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    LEFT            reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    RIGHT           reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    TOP             reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    BOTTOM          reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    EDGE            reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    FACE            reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    SURFACE         reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    COLUMN          reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    SEAL            reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    HEADING         reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    M               reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    SCORELABEL      reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    $end            reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    COMPOSITE       reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    VERSION         reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    ATF             reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    BIB             reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    LINK            reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    INCLUDE         reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    SCORE           reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    PROJECT         reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    AMPERSAND       reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    KEY             reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    TABLET          reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    ENVELOPE        reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    PRISM           reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    BULLA           reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    SEALINGS        reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    FRAGMENT        reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    OBJECT          reduce using rule 79 (object -> object surface .)
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    CATCHLINE       shift and go to state 80
   yacc.py:2687:    COLOPHON        shift and go to state 81
   yacc.py:2687:    DATE            shift and go to state 82
   yacc.py:2687:    SIGNATURES      shift and go to state 83
   yacc.py:2687:    SIGNATURE       shift and go to state 84
   yacc.py:2687:    SUMMARY         shift and go to state 85
   yacc.py:2687:    WITNESSES       shift and go to state 86
   yacc.py:2687:    LINELABEL       shift and go to state 88
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2696:  ! DOLLAR          [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! NOTE            [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! CATCHLINE       [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! COLOPHON        [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! DATE            [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! SIGNATURES      [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! SIGNATURE       [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! SUMMARY         [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! WITNESSES       [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! LINELABEL       [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! PARBAR          [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! TO              [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! FROM            [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! COMMENT         [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! CHECK           [ reduce using rule 79 (object -> object surface .) ]
   yacc.py:2696:  ! M               [ shift and go to state 87 ]
   yacc.py:2696:  ! SCORELABEL      [ shift and go to state 89 ]
   yacc.py:2700:
   yacc.py:2714:    surface_element                shift and go to state 108
   yacc.py:2714:    comment                        shift and go to state 109
   yacc.py:2714:    line                           shift and go to state 40
   yacc.py:2714:    dollar                         shift and go to state 39
   yacc.py:2714:    note_statement                 shift and go to state 41
   yacc.py:2714:    link_reference_statement       shift and go to state 42
   yacc.py:2714:    milestone                      shift and go to state 43
   yacc.py:2714:    line_statement                 shift and go to state 52
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    milestone_name                 shift and go to state 60
   yacc.py:2714:    line_sequence                  shift and go to state 75
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 94
   yacc.py:2563:
   yacc.py:2565:    (80) object -> object translation .
   yacc.py:2565:    (193) translation -> translation . END REFERENCE newline
   yacc.py:2565:    (194) translation -> translation . surface
   yacc.py:2565:    (195) translation -> translation . translationlabeledline
   yacc.py:2565:    (196) translation -> translation . dollar
   yacc.py:2565:    (226) translation -> translation . comment
   yacc.py:2565:    (89) surface -> . surface_statement
   yacc.py:2565:    (99) surface -> . surface surface_element
   yacc.py:2565:    (224) surface -> . surface comment
   yacc.py:2565:    (197) translationlabeledline -> . translationlabel NEWLINE
   yacc.py:2565:    (198) translationlabeledline -> . translationrangelabel NEWLINE
   yacc.py:2565:    (199) translationlabeledline -> . translationlabel CLOSER
   yacc.py:2565:    (200) translationlabeledline -> . translationrangelabel CLOSER
   yacc.py:2565:    (208) translationlabeledline -> . translationlabeledline reference
   yacc.py:2565:    (209) translationlabeledline -> . translationlabeledline reference newline
   yacc.py:2565:    (210) translationlabeledline -> . translationlabeledline note_statement
   yacc.py:2565:    (211) translationlabeledline -> . translationlabeledline ID
   yacc.py:2565:    (212) translationlabeledline -> . translationlabeledline ID newline
   yacc.py:2565:    (225) translationlabeledline -> . translationlabeledline comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (82) surface_statement -> . surface_specifier newline
   yacc.py:2565:    (201) translationlabel -> . LABEL
   yacc.py:2565:    (202) translationlabel -> . OPENR
   yacc.py:2565:    (203) translationlabel -> . translationlabel ID
   yacc.py:2565:    (204) translationlabel -> . translationlabel REFERENCE
   yacc.py:2565:    (205) translationrangelabel -> . translationlabel MINUS
   yacc.py:2565:    (206) translationrangelabel -> . translationrangelabel ID
   yacc.py:2565:    (207) translationrangelabel -> . translationrangelabel REFERENCE
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (15) surface_specifier -> . OBVERSE
   yacc.py:2565:    (16) surface_specifier -> . REVERSE
   yacc.py:2565:    (17) surface_specifier -> . LEFT
   yacc.py:2565:    (18) surface_specifier -> . RIGHT
   yacc.py:2565:    (19) surface_specifier -> . TOP
   yacc.py:2565:    (20) surface_specifier -> . BOTTOM
   yacc.py:2565:    (21) surface_specifier -> . EDGE
   yacc.py:2565:    (83) surface_specifier -> . surface_specifier flag
   yacc.py:2565:    (84) surface_specifier -> . FACE ID
   yacc.py:2565:    (85) surface_specifier -> . SURFACE ID
   yacc.py:2565:    (86) surface_specifier -> . COLUMN ID
   yacc.py:2565:    (87) surface_specifier -> . SEAL ID
   yacc.py:2565:    (88) surface_specifier -> . HEADING ID
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2566:
   yacc.py:2687:    TRANSLATION     reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    NOTE            reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    CATCHLINE       reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    COLOPHON        reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    DATE            reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    SIGNATURES      reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    SIGNATURE       reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    SUMMARY         reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    WITNESSES       reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    M               reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    LINELABEL       reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    SCORELABEL      reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    PARBAR          reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    TO              reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    FROM            reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    $end            reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    COMPOSITE       reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    VERSION         reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    ATF             reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    BIB             reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    LINK            reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    INCLUDE         reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    SCORE           reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    PROJECT         reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    AMPERSAND       reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    KEY             reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    TABLET          reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    ENVELOPE        reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    PRISM           reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    BULLA           reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    SEALINGS        reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    FRAGMENT        reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    OBJECT          reduce using rule 80 (object -> object translation .)
   yacc.py:2687:    END             shift and go to state 110
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    LABEL           shift and go to state 117
   yacc.py:2687:    OPENR           shift and go to state 118
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    OBVERSE         shift and go to state 63
   yacc.py:2687:    REVERSE         shift and go to state 64
   yacc.py:2687:    LEFT            shift and go to state 65
   yacc.py:2687:    RIGHT           shift and go to state 66
   yacc.py:2687:    TOP             shift and go to state 67
   yacc.py:2687:    BOTTOM          shift and go to state 68
   yacc.py:2687:    EDGE            shift and go to state 69
   yacc.py:2687:    FACE            shift and go to state 70
   yacc.py:2687:    SURFACE         shift and go to state 71
   yacc.py:2687:    COLUMN          shift and go to state 72
   yacc.py:2687:    SEAL            shift and go to state 73
   yacc.py:2687:    HEADING         shift and go to state 74
   yacc.py:2689:
   yacc.py:2696:  ! OBVERSE         [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! REVERSE         [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! LEFT            [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! RIGHT           [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! TOP             [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! BOTTOM          [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! EDGE            [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! FACE            [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! SURFACE         [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! COLUMN          [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! SEAL            [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! HEADING         [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! DOLLAR          [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! COMMENT         [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2696:  ! CHECK           [ reduce using rule 80 (object -> object translation .) ]
   yacc.py:2700:
   yacc.py:2714:    surface                        shift and go to state 111
   yacc.py:2714:    translationlabeledline         shift and go to state 112
   yacc.py:2714:    dollar                         shift and go to state 113
   yacc.py:2714:    comment                        shift and go to state 114
   yacc.py:2714:    surface_statement              shift and go to state 37
   yacc.py:2714:    translationlabel               shift and go to state 115
   yacc.py:2714:    translationrangelabel          shift and go to state 116
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    surface_specifier              shift and go to state 50
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2561:
   yacc.py:2562:state 95
   yacc.py:2563:
   yacc.py:2565:    (81) object -> object surface_element .
   yacc.py:2566:
   yacc.py:2687:    TRANSLATION     reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    OBVERSE         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    REVERSE         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    LEFT            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    RIGHT           reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    TOP             reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    BOTTOM          reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    EDGE            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    FACE            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    SURFACE         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    COLUMN          reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    SEAL            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    HEADING         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    DOLLAR          reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    NOTE            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    CATCHLINE       reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    COLOPHON        reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    DATE            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    SIGNATURES      reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    SIGNATURE       reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    SUMMARY         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    WITNESSES       reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    M               reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    LINELABEL       reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    SCORELABEL      reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    PARBAR          reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    TO              reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    FROM            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    $end            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    COMPOSITE       reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    VERSION         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    ATF             reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    BIB             reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    LINK            reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    INCLUDE         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    COMMENT         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    CHECK           reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    SCORE           reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    PROJECT         reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    AMPERSAND       reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    KEY             reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    TABLET          reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    ENVELOPE        reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    PRISM           reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    BULLA           reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    SEALINGS        reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    FRAGMENT        reduce using rule 81 (object -> object surface_element .)
   yacc.py:2687:    OBJECT          reduce using rule 81 (object -> object surface_element .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 96
   yacc.py:2563:
   yacc.py:2565:    (63) composite -> composite text .
   yacc.py:2565:    (12) text -> text . version_protocol
   yacc.py:2565:    (31) text -> text . project
   yacc.py:2565:    (54) text -> text . skipped_protocol
   yacc.py:2565:    (55) text -> text . link
   yacc.py:2565:    (56) text -> text . language_protocol
   yacc.py:2565:    (57) text -> text . object
   yacc.py:2565:    (58) text -> text . surface
   yacc.py:2565:    (59) text -> text . translation
   yacc.py:2565:    (60) text -> text . surface_element
   yacc.py:2565:    (61) text -> text . COMPOSITE newline
   yacc.py:2565:    (227) text -> text . comment
   yacc.py:2565:    (232) text -> text . score
   yacc.py:2565:    (11) version_protocol -> . VERSION ID newline
   yacc.py:2565:    (23) project -> . project_statement
   yacc.py:2565:    (33) skipped_protocol -> . ATF USE UNICODE newline
   yacc.py:2565:    (34) skipped_protocol -> . ATF USE MATH newline
   yacc.py:2565:    (35) skipped_protocol -> . ATF USE LEGACY newline
   yacc.py:2565:    (36) skipped_protocol -> . ATF USE MYLINES newline
   yacc.py:2565:    (37) skipped_protocol -> . ATF USE LEXICAL newline
   yacc.py:2565:    (38) skipped_protocol -> . key_statement
   yacc.py:2565:    (39) skipped_protocol -> . BIB ID newline
   yacc.py:2565:    (40) skipped_protocol -> . BIB ID EQUALS ID newline
   yacc.py:2565:    (41) skipped_protocol -> . lemmatizer_statement
   yacc.py:2565:    (49) link -> . LINK DEF ID EQUALS ID EQUALS ID newline
   yacc.py:2565:    (50) link -> . LINK SOURCE ID EQUALS ID newline
   yacc.py:2565:    (51) link -> . LINK PARALLEL ID EQUALS ID newline
   yacc.py:2565:    (52) link -> . INCLUDE ID EQUALS ID newline
   yacc.py:2565:    (53) language_protocol -> . ATF LANG ID newline
   yacc.py:2565:    (78) object -> . object_statement
   yacc.py:2565:    (79) object -> . object surface
   yacc.py:2565:    (80) object -> . object translation
   yacc.py:2565:    (81) object -> . object surface_element
   yacc.py:2565:    (89) surface -> . surface_statement
   yacc.py:2565:    (99) surface -> . surface surface_element
   yacc.py:2565:    (224) surface -> . surface comment
   yacc.py:2565:    (192) translation -> . translation_statement
   yacc.py:2565:    (193) translation -> . translation END REFERENCE newline
   yacc.py:2565:    (194) translation -> . translation surface
   yacc.py:2565:    (195) translation -> . translation translationlabeledline
   yacc.py:2565:    (196) translation -> . translation dollar
   yacc.py:2565:    (226) translation -> . translation comment
   yacc.py:2565:    (90) surface_element -> . line
   yacc.py:2565:    (91) surface_element -> . dollar
   yacc.py:2565:    (92) surface_element -> . note_statement
   yacc.py:2565:    (93) surface_element -> . link_reference_statement
   yacc.py:2565:    (94) surface_element -> . milestone
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (230) score -> . SCORE ID ID NEWLINE
   yacc.py:2565:    (231) score -> . SCORE ID ID ID NEWLINE
   yacc.py:2565:    (22) project_statement -> . PROJECT ID newline
   yacc.py:2565:    (42) key_statement -> . key newline
   yacc.py:2565:    (43) key_statement -> . key EQUALS newline
   yacc.py:2565:    (48) lemmatizer_statement -> . lemmatizer newline
   yacc.py:2565:    (64) object_statement -> . object_specifier newline
   yacc.py:2565:    (82) surface_statement -> . surface_specifier newline
   yacc.py:2565:    (190) translation_statement -> . TRANSLATION PARALLEL ID PROJECT newline
   yacc.py:2565:    (191) translation_statement -> . TRANSLATION LABELED ID PROJECT newline
   yacc.py:2565:    (105) line -> . line_statement
   yacc.py:2565:    (106) line -> . line lemma_statement
   yacc.py:2565:    (107) line -> . line note_statement
   yacc.py:2565:    (108) line -> . line interlinear
   yacc.py:2565:    (111) line -> . line link_reference_statement
   yacc.py:2565:    (112) line -> . line equalbrace_statement
   yacc.py:2565:    (116) line -> . line multilingual
   yacc.py:2565:    (228) line -> . line comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (126) milestone -> . milestone_name newline
   yacc.py:2565:    (44) key -> . KEY ID
   yacc.py:2565:    (45) key -> . key EQUALS ID
   yacc.py:2565:    (46) lemmatizer -> . LEMMATIZER
   yacc.py:2565:    (47) lemmatizer -> . lemmatizer ID
   yacc.py:2565:    (69) object_specifier -> . object_specifier flag
   yacc.py:2565:    (70) object_specifier -> . TABLET
   yacc.py:2565:    (71) object_specifier -> . ENVELOPE
   yacc.py:2565:    (72) object_specifier -> . PRISM
   yacc.py:2565:    (73) object_specifier -> . BULLA
   yacc.py:2565:    (74) object_specifier -> . SEALINGS
   yacc.py:2565:    (75) object_specifier -> . FRAGMENT ID
   yacc.py:2565:    (76) object_specifier -> . OBJECT ID
   yacc.py:2565:    (77) object_specifier -> . TABLET REFERENCE
   yacc.py:2565:    (15) surface_specifier -> . OBVERSE
   yacc.py:2565:    (16) surface_specifier -> . REVERSE
   yacc.py:2565:    (17) surface_specifier -> . LEFT
   yacc.py:2565:    (18) surface_specifier -> . RIGHT
   yacc.py:2565:    (19) surface_specifier -> . TOP
   yacc.py:2565:    (20) surface_specifier -> . BOTTOM
   yacc.py:2565:    (21) surface_specifier -> . EDGE
   yacc.py:2565:    (83) surface_specifier -> . surface_specifier flag
   yacc.py:2565:    (84) surface_specifier -> . FACE ID
   yacc.py:2565:    (85) surface_specifier -> . SURFACE ID
   yacc.py:2565:    (86) surface_specifier -> . COLUMN ID
   yacc.py:2565:    (87) surface_specifier -> . SEAL ID
   yacc.py:2565:    (88) surface_specifier -> . HEADING ID
   yacc.py:2565:    (104) line_statement -> . line_sequence newline
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (24) milestone_name -> . CATCHLINE
   yacc.py:2565:    (25) milestone_name -> . COLOPHON
   yacc.py:2565:    (26) milestone_name -> . DATE
   yacc.py:2565:    (27) milestone_name -> . SIGNATURES
   yacc.py:2565:    (28) milestone_name -> . SIGNATURE
   yacc.py:2565:    (29) milestone_name -> . SUMMARY
   yacc.py:2565:    (30) milestone_name -> . WITNESSES
   yacc.py:2565:    (127) milestone_name -> . M EQUALS ID
   yacc.py:2565:    (100) line_sequence -> . LINELABEL ID
   yacc.py:2565:    (101) line_sequence -> . SCORELABEL ID
   yacc.py:2565:    (102) line_sequence -> . line_sequence ID
   yacc.py:2565:    (103) line_sequence -> . line_sequence reference
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    AMPERSAND       reduce using rule 63 (composite -> composite text .)
   yacc.py:2687:    $end            reduce using rule 63 (composite -> composite text .)
   yacc.py:2687:    COMPOSITE       shift and go to state 26
   yacc.py:2687:    VERSION         shift and go to state 29
   yacc.py:2687:    ATF             shift and go to state 31
   yacc.py:2687:    BIB             shift and go to state 33
   yacc.py:2687:    LINK            shift and go to state 35
   yacc.py:2687:    INCLUDE         shift and go to state 36
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    SCORE           shift and go to state 46
   yacc.py:2687:    PROJECT         shift and go to state 47
   yacc.py:2687:    TRANSLATION     shift and go to state 51
   yacc.py:2687:    KEY             shift and go to state 61
   yacc.py:2687:    LEMMATIZER      shift and go to state 62
   yacc.py:2687:    TABLET          shift and go to state 9
   yacc.py:2687:    ENVELOPE        shift and go to state 10
   yacc.py:2687:    PRISM           shift and go to state 11
   yacc.py:2687:    BULLA           shift and go to state 12
   yacc.py:2687:    SEALINGS        shift and go to state 13
   yacc.py:2687:    FRAGMENT        shift and go to state 14
   yacc.py:2687:    OBJECT          shift and go to state 15
   yacc.py:2687:    OBVERSE         shift and go to state 63
   yacc.py:2687:    REVERSE         shift and go to state 64
   yacc.py:2687:    LEFT            shift and go to state 65
   yacc.py:2687:    RIGHT           shift and go to state 66
   yacc.py:2687:    TOP             shift and go to state 67
   yacc.py:2687:    BOTTOM          shift and go to state 68
   yacc.py:2687:    EDGE            shift and go to state 69
   yacc.py:2687:    FACE            shift and go to state 70
   yacc.py:2687:    SURFACE         shift and go to state 71
   yacc.py:2687:    COLUMN          shift and go to state 72
   yacc.py:2687:    SEAL            shift and go to state 73
   yacc.py:2687:    HEADING         shift and go to state 74
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    CATCHLINE       shift and go to state 80
   yacc.py:2687:    COLOPHON        shift and go to state 81
   yacc.py:2687:    DATE            shift and go to state 82
   yacc.py:2687:    SIGNATURES      shift and go to state 83
   yacc.py:2687:    SIGNATURE       shift and go to state 84
   yacc.py:2687:    SUMMARY         shift and go to state 85
   yacc.py:2687:    WITNESSES       shift and go to state 86
   yacc.py:2687:    M               shift and go to state 87
   yacc.py:2687:    LINELABEL       shift and go to state 88
   yacc.py:2687:    SCORELABEL      shift and go to state 89
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2714:    version_protocol               shift and go to state 17
   yacc.py:2714:    project                        shift and go to state 18
   yacc.py:2714:    skipped_protocol               shift and go to state 19
   yacc.py:2714:    link                           shift and go to state 20
   yacc.py:2714:    language_protocol              shift and go to state 21
   yacc.py:2714:    object                         shift and go to state 22
   yacc.py:2714:    surface                        shift and go to state 23
   yacc.py:2714:    translation                    shift and go to state 24
   yacc.py:2714:    surface_element                shift and go to state 25
   yacc.py:2714:    comment                        shift and go to state 27
   yacc.py:2714:    score                          shift and go to state 28
   yacc.py:2714:    project_statement              shift and go to state 30
   yacc.py:2714:    key_statement                  shift and go to state 32
   yacc.py:2714:    lemmatizer_statement           shift and go to state 34
   yacc.py:2714:    object_statement               shift and go to state 6
   yacc.py:2714:    surface_statement              shift and go to state 37
   yacc.py:2714:    translation_statement          shift and go to state 38
   yacc.py:2714:    dollar                         shift and go to state 39
   yacc.py:2714:    line                           shift and go to state 40
   yacc.py:2714:    note_statement                 shift and go to state 41
   yacc.py:2714:    link_reference_statement       shift and go to state 42
   yacc.py:2714:    milestone                      shift and go to state 43
   yacc.py:2714:    key                            shift and go to state 48
   yacc.py:2714:    lemmatizer                     shift and go to state 49
   yacc.py:2714:    object_specifier               shift and go to state 8
   yacc.py:2714:    surface_specifier              shift and go to state 50
   yacc.py:2714:    line_statement                 shift and go to state 52
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    milestone_name                 shift and go to state 60
   yacc.py:2714:    line_sequence                  shift and go to state 75
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 97
   yacc.py:2563:
   yacc.py:2565:    (13) text_statement -> AMPERSAND ID . EQUALS ID newline
   yacc.py:2565:    (14) text_statement -> AMPERSAND ID . EQUALS ID QUERY newline
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 222
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 98
   yacc.py:2563:
   yacc.py:2565:    (64) object_statement -> object_specifier newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    TRANSLATION     reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    REVERSE         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    LEFT            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    RIGHT           reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    TOP             reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    EDGE            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    FACE            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    SURFACE         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    COLUMN          reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    SEAL            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    HEADING         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    NOTE            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    DATE            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    M               reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    PARBAR          reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    TO              reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    FROM            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    $end            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    VERSION         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    ATF             reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    BIB             reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    LINK            reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    COMMENT         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    CHECK           reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    SCORE           reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    PROJECT         reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    KEY             reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    TABLET          reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    PRISM           reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    BULLA           reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    OBJECT          reduce using rule 64 (object_statement -> object_specifier newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 99
   yacc.py:2563:
   yacc.py:2565:    (69) object_specifier -> object_specifier flag .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 69 (object_specifier -> object_specifier flag .)
   yacc.py:2687:    HASH            reduce using rule 69 (object_specifier -> object_specifier flag .)
   yacc.py:2687:    EXCLAIM         reduce using rule 69 (object_specifier -> object_specifier flag .)
   yacc.py:2687:    QUERY           reduce using rule 69 (object_specifier -> object_specifier flag .)
   yacc.py:2687:    STAR            reduce using rule 69 (object_specifier -> object_specifier flag .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 100
   yacc.py:2563:
   yacc.py:2565:    (146) newline -> NEWLINE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    TRANSLATION     reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    OBVERSE         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    REVERSE         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    LEFT            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    RIGHT           reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    TOP             reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    BOTTOM          reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    EDGE            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    FACE            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    SURFACE         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    COLUMN          reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    SEAL            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    HEADING         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    DOLLAR          reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    NOTE            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    CATCHLINE       reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    COLOPHON        reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    DATE            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    SIGNATURES      reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    SIGNATURE       reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    SUMMARY         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    WITNESSES       reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    M               reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    LINELABEL       reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    SCORELABEL      reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    PARBAR          reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    TO              reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    FROM            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    $end            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    COMPOSITE       reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    VERSION         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    ATF             reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    BIB             reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    LINK            reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    INCLUDE         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    COMMENT         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    CHECK           reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    SCORE           reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    PROJECT         reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    AMPERSAND       reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    KEY             reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    TABLET          reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    ENVELOPE        reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    PRISM           reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    BULLA           reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    SEALINGS        reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    FRAGMENT        reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    OBJECT          reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    END             reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    LABEL           reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    OPENR           reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    TR              reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    LEM             reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    ID              reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2687:    HAT             reduce using rule 146 (newline -> NEWLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 101
   yacc.py:2563:
   yacc.py:2565:    (65) flag -> HASH .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 65 (flag -> HASH .)
   yacc.py:2687:    HASH            reduce using rule 65 (flag -> HASH .)
   yacc.py:2687:    EXCLAIM         reduce using rule 65 (flag -> HASH .)
   yacc.py:2687:    QUERY           reduce using rule 65 (flag -> HASH .)
   yacc.py:2687:    STAR            reduce using rule 65 (flag -> HASH .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 102
   yacc.py:2563:
   yacc.py:2565:    (66) flag -> EXCLAIM .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 66 (flag -> EXCLAIM .)
   yacc.py:2687:    HASH            reduce using rule 66 (flag -> EXCLAIM .)
   yacc.py:2687:    EXCLAIM         reduce using rule 66 (flag -> EXCLAIM .)
   yacc.py:2687:    QUERY           reduce using rule 66 (flag -> EXCLAIM .)
   yacc.py:2687:    STAR            reduce using rule 66 (flag -> EXCLAIM .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 103
   yacc.py:2563:
   yacc.py:2565:    (67) flag -> QUERY .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 67 (flag -> QUERY .)
   yacc.py:2687:    HASH            reduce using rule 67 (flag -> QUERY .)
   yacc.py:2687:    EXCLAIM         reduce using rule 67 (flag -> QUERY .)
   yacc.py:2687:    QUERY           reduce using rule 67 (flag -> QUERY .)
   yacc.py:2687:    STAR            reduce using rule 67 (flag -> QUERY .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 104
   yacc.py:2563:
   yacc.py:2565:    (68) flag -> STAR .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 68 (flag -> STAR .)
   yacc.py:2687:    HASH            reduce using rule 68 (flag -> STAR .)
   yacc.py:2687:    EXCLAIM         reduce using rule 68 (flag -> STAR .)
   yacc.py:2687:    QUERY           reduce using rule 68 (flag -> STAR .)
   yacc.py:2687:    STAR            reduce using rule 68 (flag -> STAR .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 105
   yacc.py:2563:
   yacc.py:2565:    (77) object_specifier -> TABLET REFERENCE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 77 (object_specifier -> TABLET REFERENCE .)
   yacc.py:2687:    HASH            reduce using rule 77 (object_specifier -> TABLET REFERENCE .)
   yacc.py:2687:    EXCLAIM         reduce using rule 77 (object_specifier -> TABLET REFERENCE .)
   yacc.py:2687:    QUERY           reduce using rule 77 (object_specifier -> TABLET REFERENCE .)
   yacc.py:2687:    STAR            reduce using rule 77 (object_specifier -> TABLET REFERENCE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 106
   yacc.py:2563:
   yacc.py:2565:    (75) object_specifier -> FRAGMENT ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 75 (object_specifier -> FRAGMENT ID .)
   yacc.py:2687:    HASH            reduce using rule 75 (object_specifier -> FRAGMENT ID .)
   yacc.py:2687:    EXCLAIM         reduce using rule 75 (object_specifier -> FRAGMENT ID .)
   yacc.py:2687:    QUERY           reduce using rule 75 (object_specifier -> FRAGMENT ID .)
   yacc.py:2687:    STAR            reduce using rule 75 (object_specifier -> FRAGMENT ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 107
   yacc.py:2563:
   yacc.py:2565:    (76) object_specifier -> OBJECT ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 76 (object_specifier -> OBJECT ID .)
   yacc.py:2687:    HASH            reduce using rule 76 (object_specifier -> OBJECT ID .)
   yacc.py:2687:    EXCLAIM         reduce using rule 76 (object_specifier -> OBJECT ID .)
   yacc.py:2687:    QUERY           reduce using rule 76 (object_specifier -> OBJECT ID .)
   yacc.py:2687:    STAR            reduce using rule 76 (object_specifier -> OBJECT ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 108
   yacc.py:2563:
   yacc.py:2565:    (99) surface -> surface surface_element .
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    CHECK           reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    DOLLAR          reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    NOTE            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    CATCHLINE       reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    COLOPHON        reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    DATE            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    SIGNATURES      reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    SIGNATURE       reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    SUMMARY         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    WITNESSES       reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    M               reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    LINELABEL       reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    SCORELABEL      reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    PARBAR          reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    TO              reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    FROM            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    COMPOSITE       reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    VERSION         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    ATF             reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    BIB             reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    LINK            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    INCLUDE         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    SCORE           reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    PROJECT         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    TRANSLATION     reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    AMPERSAND       reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    KEY             reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    TABLET          reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    ENVELOPE        reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    PRISM           reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    BULLA           reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    SEALINGS        reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    FRAGMENT        reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    OBJECT          reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    OBVERSE         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    REVERSE         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    LEFT            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    RIGHT           reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    TOP             reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    BOTTOM          reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    EDGE            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    FACE            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    SURFACE         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    COLUMN          reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    SEAL            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    HEADING         reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    $end            reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    END             reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    LABEL           reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2687:    OPENR           reduce using rule 99 (surface -> surface surface_element .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 109
   yacc.py:2563:
   yacc.py:2565:    (224) surface -> surface comment .
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    CHECK           reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    DOLLAR          reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    NOTE            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    CATCHLINE       reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    COLOPHON        reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    DATE            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    SIGNATURES      reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    SIGNATURE       reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    SUMMARY         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    WITNESSES       reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    M               reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    LINELABEL       reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    SCORELABEL      reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    PARBAR          reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    TO              reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    FROM            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    COMPOSITE       reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    VERSION         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    ATF             reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    BIB             reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    LINK            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    INCLUDE         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    SCORE           reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    PROJECT         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    TRANSLATION     reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    AMPERSAND       reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    KEY             reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    TABLET          reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    ENVELOPE        reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    PRISM           reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    BULLA           reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    SEALINGS        reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    FRAGMENT        reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    OBJECT          reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    OBVERSE         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    REVERSE         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    LEFT            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    RIGHT           reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    TOP             reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    BOTTOM          reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    EDGE            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    FACE            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    SURFACE         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    COLUMN          reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    SEAL            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    HEADING         reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    $end            reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    END             reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    LABEL           reduce using rule 224 (surface -> surface comment .)
   yacc.py:2687:    OPENR           reduce using rule 224 (surface -> surface comment .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 110
   yacc.py:2563:
   yacc.py:2565:    (193) translation -> translation END . REFERENCE newline
   yacc.py:2566:
   yacc.py:2687:    REFERENCE       shift and go to state 224
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 111
   yacc.py:2563:
   yacc.py:2565:    (194) translation -> translation surface .
   yacc.py:2565:    (99) surface -> surface . surface_element
   yacc.py:2565:    (224) surface -> surface . comment
   yacc.py:2565:    (90) surface_element -> . line
   yacc.py:2565:    (91) surface_element -> . dollar
   yacc.py:2565:    (92) surface_element -> . note_statement
   yacc.py:2565:    (93) surface_element -> . link_reference_statement
   yacc.py:2565:    (94) surface_element -> . milestone
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (105) line -> . line_statement
   yacc.py:2565:    (106) line -> . line lemma_statement
   yacc.py:2565:    (107) line -> . line note_statement
   yacc.py:2565:    (108) line -> . line interlinear
   yacc.py:2565:    (111) line -> . line link_reference_statement
   yacc.py:2565:    (112) line -> . line equalbrace_statement
   yacc.py:2565:    (116) line -> . line multilingual
   yacc.py:2565:    (228) line -> . line comment
   yacc.py:2565:    (95) dollar -> . ruling_statement
   yacc.py:2565:    (96) dollar -> . loose_dollar_statement
   yacc.py:2565:    (97) dollar -> . strict_dollar_statement
   yacc.py:2565:    (98) dollar -> . simple_dollar_statement
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (126) milestone -> . milestone_name newline
   yacc.py:2565:    (104) line_statement -> . line_sequence newline
   yacc.py:2565:    (132) ruling_statement -> . ruling newline
   yacc.py:2565:    (148) loose_dollar_statement -> . DOLLAR PARENTHETICALID newline
   yacc.py:2565:    (149) strict_dollar_statement -> . DOLLAR state_description newline
   yacc.py:2565:    (8) simple_dollar_statement -> . DOLLAR ID newline
   yacc.py:2565:    (9) simple_dollar_statement -> . DOLLAR state newline
   yacc.py:2565:    (10) simple_dollar_statement -> . DOLLAR REFERENCE ID newline
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (24) milestone_name -> . CATCHLINE
   yacc.py:2565:    (25) milestone_name -> . COLOPHON
   yacc.py:2565:    (26) milestone_name -> . DATE
   yacc.py:2565:    (27) milestone_name -> . SIGNATURES
   yacc.py:2565:    (28) milestone_name -> . SIGNATURE
   yacc.py:2565:    (29) milestone_name -> . SUMMARY
   yacc.py:2565:    (30) milestone_name -> . WITNESSES
   yacc.py:2565:    (127) milestone_name -> . M EQUALS ID
   yacc.py:2565:    (100) line_sequence -> . LINELABEL ID
   yacc.py:2565:    (101) line_sequence -> . SCORELABEL ID
   yacc.py:2565:    (102) line_sequence -> . line_sequence ID
   yacc.py:2565:    (103) line_sequence -> . line_sequence reference
   yacc.py:2565:    (133) ruling -> . DOLLAR SINGLE RULING
   yacc.py:2565:    (134) ruling -> . DOLLAR DOUBLE RULING
   yacc.py:2565:    (135) ruling -> . DOLLAR TRIPLE RULING
   yacc.py:2565:    (136) ruling -> . DOLLAR SINGLE LINE RULING
   yacc.py:2565:    (137) ruling -> . DOLLAR DOUBLE LINE RULING
   yacc.py:2565:    (138) ruling -> . DOLLAR TRIPLE LINE RULING
   yacc.py:2565:    (139) ruling -> . DOLLAR RULING
   yacc.py:2565:    (140) ruling -> . ruling flag
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    END             reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    LABEL           reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    OPENR           reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    OBVERSE         reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    REVERSE         reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    LEFT            reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    RIGHT           reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    TOP             reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    BOTTOM          reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    EDGE            reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    FACE            reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    SURFACE         reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    COLUMN          reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    SEAL            reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    HEADING         reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    COMPOSITE       reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    VERSION         reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    ATF             reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    BIB             reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    LINK            reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    INCLUDE         reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    SCORE           reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    PROJECT         reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    TRANSLATION     reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    AMPERSAND       reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    KEY             reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    TABLET          reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    ENVELOPE        reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    PRISM           reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    BULLA           reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    SEALINGS        reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    FRAGMENT        reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    OBJECT          reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    M               reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    SCORELABEL      reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    $end            reduce using rule 194 (translation -> translation surface .)
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    DOLLAR          shift and go to state 77
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    CATCHLINE       shift and go to state 80
   yacc.py:2687:    COLOPHON        shift and go to state 81
   yacc.py:2687:    DATE            shift and go to state 82
   yacc.py:2687:    SIGNATURES      shift and go to state 83
   yacc.py:2687:    SIGNATURE       shift and go to state 84
   yacc.py:2687:    SUMMARY         shift and go to state 85
   yacc.py:2687:    WITNESSES       shift and go to state 86
   yacc.py:2687:    LINELABEL       shift and go to state 88
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2696:  ! COMMENT         [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! CHECK           [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! DOLLAR          [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! NOTE            [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! CATCHLINE       [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! COLOPHON        [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! DATE            [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! SIGNATURES      [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! SIGNATURE       [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! SUMMARY         [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! WITNESSES       [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! LINELABEL       [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! PARBAR          [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! TO              [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! FROM            [ reduce using rule 194 (translation -> translation surface .) ]
   yacc.py:2696:  ! M               [ shift and go to state 87 ]
   yacc.py:2696:  ! SCORELABEL      [ shift and go to state 89 ]
   yacc.py:2700:
   yacc.py:2714:    surface_element                shift and go to state 108
   yacc.py:2714:    comment                        shift and go to state 109
   yacc.py:2714:    line                           shift and go to state 40
   yacc.py:2714:    dollar                         shift and go to state 39
   yacc.py:2714:    note_statement                 shift and go to state 41
   yacc.py:2714:    link_reference_statement       shift and go to state 42
   yacc.py:2714:    milestone                      shift and go to state 43
   yacc.py:2714:    line_statement                 shift and go to state 52
   yacc.py:2714:    ruling_statement               shift and go to state 53
   yacc.py:2714:    loose_dollar_statement         shift and go to state 54
   yacc.py:2714:    strict_dollar_statement        shift and go to state 55
   yacc.py:2714:    simple_dollar_statement        shift and go to state 56
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    milestone_name                 shift and go to state 60
   yacc.py:2714:    line_sequence                  shift and go to state 75
   yacc.py:2714:    ruling                         shift and go to state 76
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 112
   yacc.py:2563:
   yacc.py:2565:    (195) translation -> translation translationlabeledline .
   yacc.py:2565:    (208) translationlabeledline -> translationlabeledline . reference
   yacc.py:2565:    (209) translationlabeledline -> translationlabeledline . reference newline
   yacc.py:2565:    (210) translationlabeledline -> translationlabeledline . note_statement
   yacc.py:2565:    (211) translationlabeledline -> translationlabeledline . ID
   yacc.py:2565:    (212) translationlabeledline -> translationlabeledline . ID newline
   yacc.py:2565:    (225) translationlabeledline -> translationlabeledline . comment
   yacc.py:2565:    (145) reference -> . HAT ID HAT
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2566:
   yacc.py:2687:    END             reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    LABEL           reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    OPENR           reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    DOLLAR          reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    OBVERSE         reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    REVERSE         reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    LEFT            reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    RIGHT           reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    TOP             reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    BOTTOM          reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    EDGE            reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    FACE            reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    SURFACE         reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    COLUMN          reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    SEAL            reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    HEADING         reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    VERSION         reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    ATF             reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    BIB             reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    LINK            reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    INCLUDE         reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    SCORE           reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    PROJECT         reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    KEY             reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    TABLET          reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    PRISM           reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    BULLA           reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    SEALINGS        reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    OBJECT          reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    COLOPHON        reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    DATE            reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    SUMMARY         reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    WITNESSES       reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    M               reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    LINELABEL       reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    PARBAR          reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    TO              reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    FROM            reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    $end            reduce using rule 195 (translation -> translation translationlabeledline .)
   yacc.py:2687:    ID              shift and go to state 227
   yacc.py:2687:    HAT             shift and go to state 158
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2689:
   yacc.py:2696:  ! COMMENT         [ reduce using rule 195 (translation -> translation translationlabeledline .) ]
   yacc.py:2696:  ! CHECK           [ reduce using rule 195 (translation -> translation translationlabeledline .) ]
   yacc.py:2696:  ! NOTE            [ reduce using rule 195 (translation -> translation translationlabeledline .) ]
   yacc.py:2700:
   yacc.py:2714:    reference                      shift and go to state 225
   yacc.py:2714:    note_statement                 shift and go to state 226
   yacc.py:2714:    comment                        shift and go to state 228
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2561:
   yacc.py:2562:state 113
   yacc.py:2563:
   yacc.py:2565:    (196) translation -> translation dollar .
   yacc.py:2566:
   yacc.py:2687:    END             reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    COMMENT         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    CHECK           reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    LABEL           reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    OPENR           reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    DOLLAR          reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    OBVERSE         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    REVERSE         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    LEFT            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    RIGHT           reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    TOP             reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    BOTTOM          reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    EDGE            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    FACE            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    SURFACE         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    COLUMN          reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    SEAL            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    HEADING         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    COMPOSITE       reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    VERSION         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    ATF             reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    BIB             reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    LINK            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    INCLUDE         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    SCORE           reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    PROJECT         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    TRANSLATION     reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    AMPERSAND       reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    KEY             reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    TABLET          reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    ENVELOPE        reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    PRISM           reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    BULLA           reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    SEALINGS        reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    FRAGMENT        reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    OBJECT          reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    NOTE            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    CATCHLINE       reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    COLOPHON        reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    DATE            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    SIGNATURES      reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    SIGNATURE       reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    SUMMARY         reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    WITNESSES       reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    M               reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    LINELABEL       reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    SCORELABEL      reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    PARBAR          reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    TO              reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    FROM            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2687:    $end            reduce using rule 196 (translation -> translation dollar .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 114
   yacc.py:2563:
   yacc.py:2565:    (226) translation -> translation comment .
   yacc.py:2566:
   yacc.py:2687:    END             reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    COMMENT         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    CHECK           reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    LABEL           reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    OPENR           reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    DOLLAR          reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    OBVERSE         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    REVERSE         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    LEFT            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    RIGHT           reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    TOP             reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    BOTTOM          reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    EDGE            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    FACE            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    SURFACE         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    COLUMN          reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    SEAL            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    HEADING         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    COMPOSITE       reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    VERSION         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    ATF             reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    BIB             reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    LINK            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    INCLUDE         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    SCORE           reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    PROJECT         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    TRANSLATION     reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    AMPERSAND       reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    KEY             reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    TABLET          reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    ENVELOPE        reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    PRISM           reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    BULLA           reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    SEALINGS        reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    FRAGMENT        reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    OBJECT          reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    NOTE            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    CATCHLINE       reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    COLOPHON        reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    DATE            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    SIGNATURES      reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    SIGNATURE       reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    SUMMARY         reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    WITNESSES       reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    M               reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    LINELABEL       reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    SCORELABEL      reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    PARBAR          reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    TO              reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    FROM            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2687:    $end            reduce using rule 226 (translation -> translation comment .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 115
   yacc.py:2563:
   yacc.py:2565:    (197) translationlabeledline -> translationlabel . NEWLINE
   yacc.py:2565:    (199) translationlabeledline -> translationlabel . CLOSER
   yacc.py:2565:    (203) translationlabel -> translationlabel . ID
   yacc.py:2565:    (204) translationlabel -> translationlabel . REFERENCE
   yacc.py:2565:    (205) translationrangelabel -> translationlabel . MINUS
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 229
   yacc.py:2687:    CLOSER          shift and go to state 230
   yacc.py:2687:    ID              shift and go to state 231
   yacc.py:2687:    REFERENCE       shift and go to state 232
   yacc.py:2687:    MINUS           shift and go to state 233
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 116
   yacc.py:2563:
   yacc.py:2565:    (198) translationlabeledline -> translationrangelabel . NEWLINE
   yacc.py:2565:    (200) translationlabeledline -> translationrangelabel . CLOSER
   yacc.py:2565:    (206) translationrangelabel -> translationrangelabel . ID
   yacc.py:2565:    (207) translationrangelabel -> translationrangelabel . REFERENCE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 234
   yacc.py:2687:    CLOSER          shift and go to state 235
   yacc.py:2687:    ID              shift and go to state 236
   yacc.py:2687:    REFERENCE       shift and go to state 237
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 117
   yacc.py:2563:
   yacc.py:2565:    (201) translationlabel -> LABEL .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 201 (translationlabel -> LABEL .)
   yacc.py:2687:    CLOSER          reduce using rule 201 (translationlabel -> LABEL .)
   yacc.py:2687:    ID              reduce using rule 201 (translationlabel -> LABEL .)
   yacc.py:2687:    REFERENCE       reduce using rule 201 (translationlabel -> LABEL .)
   yacc.py:2687:    MINUS           reduce using rule 201 (translationlabel -> LABEL .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 118
   yacc.py:2563:
   yacc.py:2565:    (202) translationlabel -> OPENR .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 202 (translationlabel -> OPENR .)
   yacc.py:2687:    CLOSER          reduce using rule 202 (translationlabel -> OPENR .)
   yacc.py:2687:    ID              reduce using rule 202 (translationlabel -> OPENR .)
   yacc.py:2687:    REFERENCE       reduce using rule 202 (translationlabel -> OPENR .)
   yacc.py:2687:    MINUS           reduce using rule 202 (translationlabel -> OPENR .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 119
   yacc.py:2563:
   yacc.py:2565:    (61) text -> text COMPOSITE newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    VERSION         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    ATF             reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    BIB             reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    LINK            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    COMMENT         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    CHECK           reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    SCORE           reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    PROJECT         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    KEY             reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    TABLET          reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    PRISM           reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    BULLA           reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    OBJECT          reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    REVERSE         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    LEFT            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    RIGHT           reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    TOP             reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    EDGE            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    FACE            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    SURFACE         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    COLUMN          reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    SEAL            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    HEADING         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    NOTE            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    DATE            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    M               reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    PARBAR          reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    TO              reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    FROM            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    $end            reduce using rule 61 (text -> text COMPOSITE newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 120
   yacc.py:2563:
   yacc.py:2565:    (11) version_protocol -> VERSION ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 238
   yacc.py:2561:
   yacc.py:2562:state 121
   yacc.py:2563:
   yacc.py:2565:    (33) skipped_protocol -> ATF USE . UNICODE newline
   yacc.py:2565:    (34) skipped_protocol -> ATF USE . MATH newline
   yacc.py:2565:    (35) skipped_protocol -> ATF USE . LEGACY newline
   yacc.py:2565:    (36) skipped_protocol -> ATF USE . MYLINES newline
   yacc.py:2565:    (37) skipped_protocol -> ATF USE . LEXICAL newline
   yacc.py:2566:
   yacc.py:2687:    UNICODE         shift and go to state 239
   yacc.py:2687:    MATH            shift and go to state 240
   yacc.py:2687:    LEGACY          shift and go to state 241
   yacc.py:2687:    MYLINES         shift and go to state 242
   yacc.py:2687:    LEXICAL         shift and go to state 243
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 122
   yacc.py:2563:
   yacc.py:2565:    (53) language_protocol -> ATF LANG . ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 244
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 123
   yacc.py:2563:
   yacc.py:2565:    (39) skipped_protocol -> BIB ID . newline
   yacc.py:2565:    (40) skipped_protocol -> BIB ID . EQUALS ID newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 246
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 245
   yacc.py:2561:
   yacc.py:2562:state 124
   yacc.py:2563:
   yacc.py:2565:    (49) link -> LINK DEF . ID EQUALS ID EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 247
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 125
   yacc.py:2563:
   yacc.py:2565:    (50) link -> LINK SOURCE . ID EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 248
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 126
   yacc.py:2563:
   yacc.py:2565:    (51) link -> LINK PARALLEL . ID EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 249
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 127
   yacc.py:2563:
   yacc.py:2565:    (52) link -> INCLUDE ID . EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 250
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 128
   yacc.py:2563:
   yacc.py:2565:    (106) line -> line lemma_statement .
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    CHECK           reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    LEM             reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    NOTE            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    TO              reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    FROM            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    VERSION         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    ATF             reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    BIB             reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    LINK            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    SCORE           reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    KEY             reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    TABLET          reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    PRISM           reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    BULLA           reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    LEFT            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    TOP             reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    EDGE            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    FACE            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    SEAL            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    HEADING         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    DATE            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    M               reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    $end            reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    END             reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    LABEL           reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2687:    OPENR           reduce using rule 106 (line -> line lemma_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 129
   yacc.py:2563:
   yacc.py:2565:    (107) line -> line note_statement .
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    CHECK           reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    LEM             reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    NOTE            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    TO              reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    FROM            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    VERSION         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    ATF             reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    BIB             reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    LINK            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    SCORE           reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    KEY             reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    TABLET          reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    PRISM           reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    BULLA           reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    LEFT            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    TOP             reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    EDGE            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    FACE            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    SEAL            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    HEADING         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    DATE            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    M               reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    $end            reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    END             reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    LABEL           reduce using rule 107 (line -> line note_statement .)
   yacc.py:2687:    OPENR           reduce using rule 107 (line -> line note_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 130
   yacc.py:2563:
   yacc.py:2565:    (108) line -> line interlinear .
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    COMMENT         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    CHECK           reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    LEM             reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    NOTE            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    PARBAR          reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    TO              reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    FROM            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    COMPOSITE       reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    VERSION         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    ATF             reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    BIB             reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    LINK            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    INCLUDE         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    SCORE           reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    PROJECT         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    TRANSLATION     reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    AMPERSAND       reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    KEY             reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    TABLET          reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    ENVELOPE        reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    PRISM           reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    BULLA           reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    SEALINGS        reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    FRAGMENT        reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    OBJECT          reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    OBVERSE         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    REVERSE         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    LEFT            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    RIGHT           reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    TOP             reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    BOTTOM          reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    EDGE            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    FACE            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    SURFACE         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    COLUMN          reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    SEAL            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    HEADING         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    DOLLAR          reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    CATCHLINE       reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    COLOPHON        reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    DATE            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    SIGNATURES      reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    SIGNATURE       reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    SUMMARY         reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    WITNESSES       reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    M               reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    LINELABEL       reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    SCORELABEL      reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    $end            reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    END             reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    LABEL           reduce using rule 108 (line -> line interlinear .)
   yacc.py:2687:    OPENR           reduce using rule 108 (line -> line interlinear .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 131
   yacc.py:2563:
   yacc.py:2565:    (111) line -> line link_reference_statement .
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    CHECK           reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    LEM             reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    NOTE            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    TO              reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    FROM            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    VERSION         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    ATF             reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    BIB             reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    LINK            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    SCORE           reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    KEY             reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    TABLET          reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    PRISM           reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    BULLA           reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    LEFT            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    TOP             reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    EDGE            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    FACE            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    SEAL            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    HEADING         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    DATE            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    M               reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    $end            reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    END             reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    LABEL           reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2687:    OPENR           reduce using rule 111 (line -> line link_reference_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 132
   yacc.py:2563:
   yacc.py:2565:    (112) line -> line equalbrace_statement .
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    CHECK           reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    LEM             reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    NOTE            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    TO              reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    FROM            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    VERSION         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    ATF             reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    BIB             reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    LINK            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    SCORE           reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    KEY             reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    TABLET          reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    PRISM           reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    BULLA           reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    LEFT            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    TOP             reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    EDGE            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    FACE            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    SEAL            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    HEADING         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    DATE            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    M               reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    $end            reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    END             reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    LABEL           reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2687:    OPENR           reduce using rule 112 (line -> line equalbrace_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 133
   yacc.py:2563:
   yacc.py:2565:    (116) line -> line multilingual .
   yacc.py:2565:    (122) multilingual -> multilingual . lemma_statement
   yacc.py:2565:    (123) multilingual -> multilingual . note_statement
   yacc.py:2565:    (124) multilingual -> multilingual . link_reference_statement
   yacc.py:2565:    (229) multilingual -> multilingual . comment
   yacc.py:2565:    (131) lemma_statement -> . lemma_list newline
   yacc.py:2565:    (141) note_statement -> . note_sequence newline
   yacc.py:2565:    (217) link_reference_statement -> . link_reference newline
   yacc.py:2565:    (218) link_reference_statement -> . link_range_reference newline
   yacc.py:2565:    (222) comment -> . COMMENT ID NEWLINE
   yacc.py:2565:    (223) comment -> . CHECK ID NEWLINE
   yacc.py:2565:    (125) lemma_list -> . LEM ID
   yacc.py:2565:    (128) lemma_list -> . lemma_list lemma
   yacc.py:2565:    (142) note_sequence -> . NOTE
   yacc.py:2565:    (143) note_sequence -> . note_sequence ID
   yacc.py:2565:    (144) note_sequence -> . note_sequence reference
   yacc.py:2565:    (4) link_reference -> . link_reference ID
   yacc.py:2565:    (5) link_reference -> . link_reference COMMA ID
   yacc.py:2565:    (6) link_reference -> . link_reference REFERENCE
   yacc.py:2565:    (7) link_reference -> . link_reference ID QUERY
   yacc.py:2565:    (213) link_reference -> . link_operator ID
   yacc.py:2565:    (214) link_range_reference -> . link_range_reference ID
   yacc.py:2565:    (215) link_range_reference -> . link_range_reference COMMA ID
   yacc.py:2565:    (216) link_range_reference -> . link_reference MINUS
   yacc.py:2565:    (219) link_operator -> . PARBAR
   yacc.py:2565:    (220) link_operator -> . TO
   yacc.py:2565:    (221) link_operator -> . FROM
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    COMPOSITE       reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    VERSION         reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    ATF             reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    BIB             reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    LINK            reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    INCLUDE         reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    SCORE           reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    PROJECT         reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    TRANSLATION     reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    AMPERSAND       reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    KEY             reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    TABLET          reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    ENVELOPE        reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    PRISM           reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    BULLA           reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    SEALINGS        reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    FRAGMENT        reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    OBJECT          reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    OBVERSE         reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    REVERSE         reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    LEFT            reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    RIGHT           reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    TOP             reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    BOTTOM          reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    EDGE            reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    FACE            reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    SURFACE         reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    COLUMN          reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    SEAL            reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    HEADING         reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    DOLLAR          reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    CATCHLINE       reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    COLOPHON        reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    DATE            reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    SIGNATURES      reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    SIGNATURE       reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    SUMMARY         reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    WITNESSES       reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    M               reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    LINELABEL       reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    SCORELABEL      reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    $end            reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    END             reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    LABEL           reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    OPENR           reduce using rule 116 (line -> line multilingual .)
   yacc.py:2687:    COMMENT         shift and go to state 44
   yacc.py:2687:    CHECK           shift and go to state 45
   yacc.py:2687:    LEM             shift and go to state 139
   yacc.py:2687:    NOTE            shift and go to state 78
   yacc.py:2687:    PARBAR          shift and go to state 90
   yacc.py:2687:    TO              shift and go to state 91
   yacc.py:2687:    FROM            shift and go to state 92
   yacc.py:2689:
   yacc.py:2696:  ! COMMENT         [ reduce using rule 116 (line -> line multilingual .) ]
   yacc.py:2696:  ! CHECK           [ reduce using rule 116 (line -> line multilingual .) ]
   yacc.py:2696:  ! LEM             [ reduce using rule 116 (line -> line multilingual .) ]
   yacc.py:2696:  ! NOTE            [ reduce using rule 116 (line -> line multilingual .) ]
   yacc.py:2696:  ! PARBAR          [ reduce using rule 116 (line -> line multilingual .) ]
   yacc.py:2696:  ! TO              [ reduce using rule 116 (line -> line multilingual .) ]
   yacc.py:2696:  ! FROM            [ reduce using rule 116 (line -> line multilingual .) ]
   yacc.py:2700:
   yacc.py:2714:    lemma_statement                shift and go to state 251
   yacc.py:2714:    note_statement                 shift and go to state 252
   yacc.py:2714:    link_reference_statement       shift and go to state 253
   yacc.py:2714:    comment                        shift and go to state 254
   yacc.py:2714:    lemma_list                     shift and go to state 135
   yacc.py:2714:    note_sequence                  shift and go to state 57
   yacc.py:2714:    link_reference                 shift and go to state 58
   yacc.py:2714:    link_range_reference           shift and go to state 59
   yacc.py:2714:    link_operator                  shift and go to state 79
   yacc.py:2561:
   yacc.py:2562:state 134
   yacc.py:2563:
   yacc.py:2565:    (228) line -> line comment .
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    COMMENT         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    CHECK           reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    LEM             reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    NOTE            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    PARBAR          reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    TO              reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    FROM            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    COMPOSITE       reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    VERSION         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    ATF             reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    BIB             reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    LINK            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    INCLUDE         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    SCORE           reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    PROJECT         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    TRANSLATION     reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    AMPERSAND       reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    KEY             reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    TABLET          reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    ENVELOPE        reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    PRISM           reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    BULLA           reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    SEALINGS        reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    FRAGMENT        reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    OBJECT          reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    OBVERSE         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    REVERSE         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    LEFT            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    RIGHT           reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    TOP             reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    BOTTOM          reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    EDGE            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    FACE            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    SURFACE         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    COLUMN          reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    SEAL            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    HEADING         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    DOLLAR          reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    CATCHLINE       reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    COLOPHON        reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    DATE            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    SIGNATURES      reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    SIGNATURE       reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    SUMMARY         reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    WITNESSES       reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    M               reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    LINELABEL       reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    SCORELABEL      reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    $end            reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    END             reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    LABEL           reduce using rule 228 (line -> line comment .)
   yacc.py:2687:    OPENR           reduce using rule 228 (line -> line comment .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 135
   yacc.py:2563:
   yacc.py:2565:    (131) lemma_statement -> lemma_list . newline
   yacc.py:2565:    (128) lemma_list -> lemma_list . lemma
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (129) lemma -> . SEMICOLON
   yacc.py:2565:    (130) lemma -> . lemma ID
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    SEMICOLON       shift and go to state 257
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 255
   yacc.py:2714:    lemma                          shift and go to state 256
   yacc.py:2561:
   yacc.py:2562:state 136
   yacc.py:2563:
   yacc.py:2565:    (109) interlinear -> TR . ID newline
   yacc.py:2565:    (110) interlinear -> TR . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 258
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 259
   yacc.py:2561:
   yacc.py:2562:state 137
   yacc.py:2563:
   yacc.py:2565:    (115) equalbrace_statement -> equalbrace . newline
   yacc.py:2565:    (114) equalbrace -> equalbrace . ID
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 261
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 260
   yacc.py:2561:
   yacc.py:2562:state 138
   yacc.py:2563:
   yacc.py:2565:    (121) multilingual -> multilingual_statement .
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    CHECK           reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    LEM             reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    NOTE            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    TO              reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    FROM            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    TR              reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    VERSION         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    ATF             reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    BIB             reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    LINK            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    SCORE           reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    KEY             reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    TABLET          reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    PRISM           reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    BULLA           reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    LEFT            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    TOP             reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    EDGE            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    FACE            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    SEAL            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    HEADING         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    DATE            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    M               reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    $end            reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    END             reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    LABEL           reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2687:    OPENR           reduce using rule 121 (multilingual -> multilingual_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 139
   yacc.py:2563:
   yacc.py:2565:    (125) lemma_list -> LEM . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 262
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 140
   yacc.py:2563:
   yacc.py:2565:    (113) equalbrace -> EQUALBRACE .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 113 (equalbrace -> EQUALBRACE .)
   yacc.py:2687:    NEWLINE         reduce using rule 113 (equalbrace -> EQUALBRACE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 141
   yacc.py:2563:
   yacc.py:2565:    (120) multilingual_statement -> multilingual_sequence . newline
   yacc.py:2565:    (118) multilingual_sequence -> multilingual_sequence . ID
   yacc.py:2565:    (119) multilingual_sequence -> multilingual_sequence . reference
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (145) reference -> . HAT ID HAT
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 264
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    HAT             shift and go to state 158
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 263
   yacc.py:2714:    reference                      shift and go to state 265
   yacc.py:2561:
   yacc.py:2562:state 142
   yacc.py:2563:
   yacc.py:2565:    (117) multilingual_sequence -> MULTILINGUAL . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 266
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 143
   yacc.py:2563:
   yacc.py:2565:    (222) comment -> COMMENT ID . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 267
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 144
   yacc.py:2563:
   yacc.py:2565:    (223) comment -> CHECK ID . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 268
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 145
   yacc.py:2563:
   yacc.py:2565:    (230) score -> SCORE ID . ID NEWLINE
   yacc.py:2565:    (231) score -> SCORE ID . ID ID NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 269
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 146
   yacc.py:2563:
   yacc.py:2565:    (22) project_statement -> PROJECT ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 270
   yacc.py:2561:
   yacc.py:2562:state 147
   yacc.py:2563:
   yacc.py:2565:    (42) key_statement -> key newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    VERSION         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    ATF             reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    BIB             reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    LINK            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    COMMENT         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    CHECK           reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    SCORE           reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    PROJECT         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    KEY             reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    TABLET          reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    PRISM           reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    BULLA           reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    OBJECT          reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    REVERSE         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    LEFT            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    RIGHT           reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    TOP             reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    EDGE            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    FACE            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    SURFACE         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    COLUMN          reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    SEAL            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    HEADING         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    NOTE            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    DATE            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    M               reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    PARBAR          reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    TO              reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    FROM            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    $end            reduce using rule 42 (key_statement -> key newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 148
   yacc.py:2563:
   yacc.py:2565:    (43) key_statement -> key EQUALS . newline
   yacc.py:2565:    (45) key -> key EQUALS . ID
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 272
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 271
   yacc.py:2561:
   yacc.py:2562:state 149
   yacc.py:2563:
   yacc.py:2565:    (48) lemmatizer_statement -> lemmatizer newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    VERSION         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    ATF             reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    BIB             reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    LINK            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    COMMENT         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    CHECK           reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    SCORE           reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    PROJECT         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    KEY             reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    TABLET          reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    PRISM           reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    BULLA           reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    OBJECT          reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    REVERSE         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    LEFT            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    RIGHT           reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    TOP             reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    EDGE            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    FACE            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    SURFACE         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    COLUMN          reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    SEAL            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    HEADING         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    NOTE            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    DATE            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    M               reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    PARBAR          reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    TO              reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    FROM            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    $end            reduce using rule 48 (lemmatizer_statement -> lemmatizer newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 150
   yacc.py:2563:
   yacc.py:2565:    (47) lemmatizer -> lemmatizer ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 47 (lemmatizer -> lemmatizer ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 47 (lemmatizer -> lemmatizer ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 151
   yacc.py:2563:
   yacc.py:2565:    (82) surface_statement -> surface_specifier newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    CHECK           reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    NOTE            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    DATE            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    M               reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    PARBAR          reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    TO              reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    FROM            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    VERSION         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    ATF             reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    BIB             reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    LINK            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    SCORE           reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    PROJECT         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    KEY             reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    TABLET          reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    PRISM           reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    BULLA           reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    OBJECT          reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    REVERSE         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    LEFT            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    RIGHT           reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    TOP             reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    EDGE            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    FACE            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    SURFACE         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    COLUMN          reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    SEAL            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    HEADING         reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    $end            reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    END             reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    LABEL           reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    OPENR           reduce using rule 82 (surface_statement -> surface_specifier newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 152
   yacc.py:2563:
   yacc.py:2565:    (83) surface_specifier -> surface_specifier flag .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 83 (surface_specifier -> surface_specifier flag .)
   yacc.py:2687:    HASH            reduce using rule 83 (surface_specifier -> surface_specifier flag .)
   yacc.py:2687:    EXCLAIM         reduce using rule 83 (surface_specifier -> surface_specifier flag .)
   yacc.py:2687:    QUERY           reduce using rule 83 (surface_specifier -> surface_specifier flag .)
   yacc.py:2687:    STAR            reduce using rule 83 (surface_specifier -> surface_specifier flag .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 153
   yacc.py:2563:
   yacc.py:2565:    (190) translation_statement -> TRANSLATION PARALLEL . ID PROJECT newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 273
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 154
   yacc.py:2563:
   yacc.py:2565:    (191) translation_statement -> TRANSLATION LABELED . ID PROJECT newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 274
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 155
   yacc.py:2563:
   yacc.py:2565:    (141) note_statement -> note_sequence newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    VERSION         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    ATF             reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    BIB             reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    LINK            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    COMMENT         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    CHECK           reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    SCORE           reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    PROJECT         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    KEY             reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    TABLET          reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    PRISM           reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    BULLA           reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    OBJECT          reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    REVERSE         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    LEFT            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    RIGHT           reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    TOP             reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    EDGE            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    FACE            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    SURFACE         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    COLUMN          reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    SEAL            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    HEADING         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    NOTE            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    DATE            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    M               reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    PARBAR          reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    TO              reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    FROM            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    $end            reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    TR              reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    LEM             reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    END             reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    LABEL           reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    OPENR           reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    ID              reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    HAT             reduce using rule 141 (note_statement -> note_sequence newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 156
   yacc.py:2563:
   yacc.py:2565:    (143) note_sequence -> note_sequence ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 143 (note_sequence -> note_sequence ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 143 (note_sequence -> note_sequence ID .)
   yacc.py:2687:    HAT             reduce using rule 143 (note_sequence -> note_sequence ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 157
   yacc.py:2563:
   yacc.py:2565:    (144) note_sequence -> note_sequence reference .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 144 (note_sequence -> note_sequence reference .)
   yacc.py:2687:    NEWLINE         reduce using rule 144 (note_sequence -> note_sequence reference .)
   yacc.py:2687:    HAT             reduce using rule 144 (note_sequence -> note_sequence reference .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 158
   yacc.py:2563:
   yacc.py:2565:    (145) reference -> HAT . ID HAT
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 275
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 159
   yacc.py:2563:
   yacc.py:2565:    (217) link_reference_statement -> link_reference newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    VERSION         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    ATF             reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    BIB             reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    LINK            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    COMMENT         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    CHECK           reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    SCORE           reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    PROJECT         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    KEY             reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    TABLET          reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    PRISM           reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    BULLA           reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    OBJECT          reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    REVERSE         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    LEFT            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    RIGHT           reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    TOP             reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    EDGE            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    FACE            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    SURFACE         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    COLUMN          reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    SEAL            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    HEADING         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    NOTE            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    DATE            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    M               reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    PARBAR          reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    TO              reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    FROM            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    $end            reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    TR              reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    LEM             reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    END             reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    LABEL           reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    OPENR           reduce using rule 217 (link_reference_statement -> link_reference newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 160
   yacc.py:2563:
   yacc.py:2565:    (4) link_reference -> link_reference ID .
   yacc.py:2565:    (7) link_reference -> link_reference ID . QUERY
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 4 (link_reference -> link_reference ID .)
   yacc.py:2687:    COMMA           reduce using rule 4 (link_reference -> link_reference ID .)
   yacc.py:2687:    REFERENCE       reduce using rule 4 (link_reference -> link_reference ID .)
   yacc.py:2687:    MINUS           reduce using rule 4 (link_reference -> link_reference ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 4 (link_reference -> link_reference ID .)
   yacc.py:2687:    QUERY           shift and go to state 276
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 161
   yacc.py:2563:
   yacc.py:2565:    (5) link_reference -> link_reference COMMA . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 277
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 162
   yacc.py:2563:
   yacc.py:2565:    (6) link_reference -> link_reference REFERENCE .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 6 (link_reference -> link_reference REFERENCE .)
   yacc.py:2687:    COMMA           reduce using rule 6 (link_reference -> link_reference REFERENCE .)
   yacc.py:2687:    REFERENCE       reduce using rule 6 (link_reference -> link_reference REFERENCE .)
   yacc.py:2687:    MINUS           reduce using rule 6 (link_reference -> link_reference REFERENCE .)
   yacc.py:2687:    NEWLINE         reduce using rule 6 (link_reference -> link_reference REFERENCE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 163
   yacc.py:2563:
   yacc.py:2565:    (216) link_range_reference -> link_reference MINUS .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 216 (link_range_reference -> link_reference MINUS .)
   yacc.py:2687:    COMMA           reduce using rule 216 (link_range_reference -> link_reference MINUS .)
   yacc.py:2687:    NEWLINE         reduce using rule 216 (link_range_reference -> link_reference MINUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 164
   yacc.py:2563:
   yacc.py:2565:    (218) link_reference_statement -> link_range_reference newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    VERSION         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    ATF             reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    BIB             reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    LINK            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    COMMENT         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    CHECK           reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    SCORE           reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    PROJECT         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    KEY             reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    TABLET          reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    PRISM           reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    BULLA           reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    OBJECT          reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    REVERSE         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    LEFT            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    RIGHT           reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    TOP             reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    EDGE            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    FACE            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    SURFACE         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    COLUMN          reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    SEAL            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    HEADING         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    NOTE            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    DATE            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    M               reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    PARBAR          reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    TO              reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    FROM            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    $end            reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    TR              reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    LEM             reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    END             reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    LABEL           reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    OPENR           reduce using rule 218 (link_reference_statement -> link_range_reference newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 165
   yacc.py:2563:
   yacc.py:2565:    (214) link_range_reference -> link_range_reference ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 214 (link_range_reference -> link_range_reference ID .)
   yacc.py:2687:    COMMA           reduce using rule 214 (link_range_reference -> link_range_reference ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 214 (link_range_reference -> link_range_reference ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 166
   yacc.py:2563:
   yacc.py:2565:    (215) link_range_reference -> link_range_reference COMMA . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 278
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 167
   yacc.py:2563:
   yacc.py:2565:    (126) milestone -> milestone_name newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    VERSION         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    ATF             reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    BIB             reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    LINK            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    COMMENT         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    CHECK           reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    SCORE           reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    PROJECT         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    KEY             reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    TABLET          reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    PRISM           reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    BULLA           reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    OBJECT          reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    REVERSE         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    LEFT            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    RIGHT           reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    TOP             reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    EDGE            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    FACE            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    SURFACE         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    COLUMN          reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    SEAL            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    HEADING         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    NOTE            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    DATE            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    M               reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    PARBAR          reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    TO              reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    FROM            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    $end            reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    END             reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    LABEL           reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    OPENR           reduce using rule 126 (milestone -> milestone_name newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 168
   yacc.py:2563:
   yacc.py:2565:    (44) key -> KEY ID .
   yacc.py:2566:
   yacc.py:2687:    EQUALS          reduce using rule 44 (key -> KEY ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 44 (key -> KEY ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 169
   yacc.py:2563:
   yacc.py:2565:    (84) surface_specifier -> FACE ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 84 (surface_specifier -> FACE ID .)
   yacc.py:2687:    HASH            reduce using rule 84 (surface_specifier -> FACE ID .)
   yacc.py:2687:    EXCLAIM         reduce using rule 84 (surface_specifier -> FACE ID .)
   yacc.py:2687:    QUERY           reduce using rule 84 (surface_specifier -> FACE ID .)
   yacc.py:2687:    STAR            reduce using rule 84 (surface_specifier -> FACE ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 170
   yacc.py:2563:
   yacc.py:2565:    (85) surface_specifier -> SURFACE ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 85 (surface_specifier -> SURFACE ID .)
   yacc.py:2687:    HASH            reduce using rule 85 (surface_specifier -> SURFACE ID .)
   yacc.py:2687:    EXCLAIM         reduce using rule 85 (surface_specifier -> SURFACE ID .)
   yacc.py:2687:    QUERY           reduce using rule 85 (surface_specifier -> SURFACE ID .)
   yacc.py:2687:    STAR            reduce using rule 85 (surface_specifier -> SURFACE ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 171
   yacc.py:2563:
   yacc.py:2565:    (86) surface_specifier -> COLUMN ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 86 (surface_specifier -> COLUMN ID .)
   yacc.py:2687:    HASH            reduce using rule 86 (surface_specifier -> COLUMN ID .)
   yacc.py:2687:    EXCLAIM         reduce using rule 86 (surface_specifier -> COLUMN ID .)
   yacc.py:2687:    QUERY           reduce using rule 86 (surface_specifier -> COLUMN ID .)
   yacc.py:2687:    STAR            reduce using rule 86 (surface_specifier -> COLUMN ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 172
   yacc.py:2563:
   yacc.py:2565:    (87) surface_specifier -> SEAL ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 87 (surface_specifier -> SEAL ID .)
   yacc.py:2687:    HASH            reduce using rule 87 (surface_specifier -> SEAL ID .)
   yacc.py:2687:    EXCLAIM         reduce using rule 87 (surface_specifier -> SEAL ID .)
   yacc.py:2687:    QUERY           reduce using rule 87 (surface_specifier -> SEAL ID .)
   yacc.py:2687:    STAR            reduce using rule 87 (surface_specifier -> SEAL ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 173
   yacc.py:2563:
   yacc.py:2565:    (88) surface_specifier -> HEADING ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 88 (surface_specifier -> HEADING ID .)
   yacc.py:2687:    HASH            reduce using rule 88 (surface_specifier -> HEADING ID .)
   yacc.py:2687:    EXCLAIM         reduce using rule 88 (surface_specifier -> HEADING ID .)
   yacc.py:2687:    QUERY           reduce using rule 88 (surface_specifier -> HEADING ID .)
   yacc.py:2687:    STAR            reduce using rule 88 (surface_specifier -> HEADING ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 174
   yacc.py:2563:
   yacc.py:2565:    (104) line_statement -> line_sequence newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    COMMENT         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    CHECK           reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    LEM             reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    NOTE            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    PARBAR          reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    TO              reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    FROM            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    VERSION         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    ATF             reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    BIB             reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    LINK            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    SCORE           reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    PROJECT         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    KEY             reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    TABLET          reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    PRISM           reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    BULLA           reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    OBJECT          reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    REVERSE         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    LEFT            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    RIGHT           reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    TOP             reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    EDGE            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    FACE            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    SURFACE         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    COLUMN          reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    SEAL            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    HEADING         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    DATE            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    M               reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    $end            reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    END             reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    LABEL           reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    OPENR           reduce using rule 104 (line_statement -> line_sequence newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 175
   yacc.py:2563:
   yacc.py:2565:    (102) line_sequence -> line_sequence ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 102 (line_sequence -> line_sequence ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 102 (line_sequence -> line_sequence ID .)
   yacc.py:2687:    HAT             reduce using rule 102 (line_sequence -> line_sequence ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 176
   yacc.py:2563:
   yacc.py:2565:    (103) line_sequence -> line_sequence reference .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 103 (line_sequence -> line_sequence reference .)
   yacc.py:2687:    NEWLINE         reduce using rule 103 (line_sequence -> line_sequence reference .)
   yacc.py:2687:    HAT             reduce using rule 103 (line_sequence -> line_sequence reference .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 177
   yacc.py:2563:
   yacc.py:2565:    (132) ruling_statement -> ruling newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    VERSION         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    ATF             reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    BIB             reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    LINK            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    COMMENT         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    CHECK           reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    SCORE           reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    PROJECT         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    KEY             reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    TABLET          reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    PRISM           reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    BULLA           reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    OBJECT          reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    REVERSE         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    LEFT            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    RIGHT           reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    TOP             reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    EDGE            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    FACE            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    SURFACE         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    COLUMN          reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    SEAL            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    HEADING         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    NOTE            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    DATE            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    M               reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    PARBAR          reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    TO              reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    FROM            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    $end            reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    END             reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    LABEL           reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    OPENR           reduce using rule 132 (ruling_statement -> ruling newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 178
   yacc.py:2563:
   yacc.py:2565:    (140) ruling -> ruling flag .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 140 (ruling -> ruling flag .)
   yacc.py:2687:    HASH            reduce using rule 140 (ruling -> ruling flag .)
   yacc.py:2687:    EXCLAIM         reduce using rule 140 (ruling -> ruling flag .)
   yacc.py:2687:    QUERY           reduce using rule 140 (ruling -> ruling flag .)
   yacc.py:2687:    STAR            reduce using rule 140 (ruling -> ruling flag .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 179
   yacc.py:2563:
   yacc.py:2565:    (148) loose_dollar_statement -> DOLLAR PARENTHETICALID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 279
   yacc.py:2561:
   yacc.py:2562:state 180
   yacc.py:2563:
   yacc.py:2565:    (149) strict_dollar_statement -> DOLLAR state_description . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 280
   yacc.py:2561:
   yacc.py:2562:state 181
   yacc.py:2563:
   yacc.py:2565:    (8) simple_dollar_statement -> DOLLAR ID . newline
   yacc.py:2565:    (154) plural_state_description -> ID . plural_scope state
   yacc.py:2565:    (155) plural_state_description -> ID . singular_scope state
   yacc.py:2565:    (156) plural_state_description -> ID . REFERENCE state
   yacc.py:2565:    (159) plural_state_description -> ID . MINUS ID plural_scope state
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (178) plural_scope -> . COLUMNS
   yacc.py:2565:    (179) plural_scope -> . LINES
   yacc.py:2565:    (180) plural_scope -> . CASES
   yacc.py:2565:    (175) singular_scope -> . LINE
   yacc.py:2565:    (176) singular_scope -> . CASE
   yacc.py:2565:    (177) singular_scope -> . SPACE
   yacc.py:2566:
   yacc.py:2687:    REFERENCE       shift and go to state 284
   yacc.py:2687:    MINUS           shift and go to state 285
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    COLUMNS         shift and go to state 206
   yacc.py:2687:    LINES           shift and go to state 207
   yacc.py:2687:    CASES           shift and go to state 208
   yacc.py:2687:    LINE            shift and go to state 188
   yacc.py:2687:    CASE            shift and go to state 211
   yacc.py:2687:    SPACE           shift and go to state 212
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 281
   yacc.py:2714:    plural_scope                   shift and go to state 282
   yacc.py:2714:    singular_scope                 shift and go to state 283
   yacc.py:2561:
   yacc.py:2562:state 182
   yacc.py:2563:
   yacc.py:2565:    (9) simple_dollar_statement -> DOLLAR state . newline
   yacc.py:2565:    (158) plural_state_description -> state . plural_scope
   yacc.py:2565:    (164) singular_state_desc -> state . singular_scope
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (178) plural_scope -> . COLUMNS
   yacc.py:2565:    (179) plural_scope -> . LINES
   yacc.py:2565:    (180) plural_scope -> . CASES
   yacc.py:2565:    (175) singular_scope -> . LINE
   yacc.py:2565:    (176) singular_scope -> . CASE
   yacc.py:2565:    (177) singular_scope -> . SPACE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    COLUMNS         shift and go to state 206
   yacc.py:2687:    LINES           shift and go to state 207
   yacc.py:2687:    CASES           shift and go to state 208
   yacc.py:2687:    LINE            shift and go to state 188
   yacc.py:2687:    CASE            shift and go to state 211
   yacc.py:2687:    SPACE           shift and go to state 212
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 286
   yacc.py:2714:    plural_scope                   shift and go to state 287
   yacc.py:2714:    singular_scope                 shift and go to state 288
   yacc.py:2561:
   yacc.py:2562:state 183
   yacc.py:2563:
   yacc.py:2565:    (10) simple_dollar_statement -> DOLLAR REFERENCE . ID newline
   yacc.py:2565:    (162) singular_state_desc -> REFERENCE . state
   yacc.py:2565:    (163) singular_state_desc -> REFERENCE . ID state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 289
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 290
   yacc.py:2561:
   yacc.py:2562:state 184
   yacc.py:2563:
   yacc.py:2565:    (133) ruling -> DOLLAR SINGLE . RULING
   yacc.py:2565:    (136) ruling -> DOLLAR SINGLE . LINE RULING
   yacc.py:2566:
   yacc.py:2687:    RULING          shift and go to state 291
   yacc.py:2687:    LINE            shift and go to state 292
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 185
   yacc.py:2563:
   yacc.py:2565:    (139) ruling -> DOLLAR RULING .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 139 (ruling -> DOLLAR RULING .)
   yacc.py:2687:    HASH            reduce using rule 139 (ruling -> DOLLAR RULING .)
   yacc.py:2687:    EXCLAIM         reduce using rule 139 (ruling -> DOLLAR RULING .)
   yacc.py:2687:    QUERY           reduce using rule 139 (ruling -> DOLLAR RULING .)
   yacc.py:2687:    STAR            reduce using rule 139 (ruling -> DOLLAR RULING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 186
   yacc.py:2563:
   yacc.py:2565:    (134) ruling -> DOLLAR DOUBLE . RULING
   yacc.py:2565:    (137) ruling -> DOLLAR DOUBLE . LINE RULING
   yacc.py:2566:
   yacc.py:2687:    RULING          shift and go to state 293
   yacc.py:2687:    LINE            shift and go to state 294
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 187
   yacc.py:2563:
   yacc.py:2565:    (135) ruling -> DOLLAR TRIPLE . RULING
   yacc.py:2565:    (138) ruling -> DOLLAR TRIPLE . LINE RULING
   yacc.py:2566:
   yacc.py:2687:    RULING          shift and go to state 295
   yacc.py:2687:    LINE            shift and go to state 296
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 188
   yacc.py:2563:
   yacc.py:2565:    (175) singular_scope -> LINE .
   yacc.py:2566:
   yacc.py:2687:    BLANK           reduce using rule 175 (singular_scope -> LINE .)
   yacc.py:2687:    BROKEN          reduce using rule 175 (singular_scope -> LINE .)
   yacc.py:2687:    EFFACED         reduce using rule 175 (singular_scope -> LINE .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 175 (singular_scope -> LINE .)
   yacc.py:2687:    MISSING         reduce using rule 175 (singular_scope -> LINE .)
   yacc.py:2687:    TRACES          reduce using rule 175 (singular_scope -> LINE .)
   yacc.py:2687:    NEWLINE         reduce using rule 175 (singular_scope -> LINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 189
   yacc.py:2563:
   yacc.py:2565:    (150) state_description -> plural_state_description .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 150 (state_description -> plural_state_description .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 190
   yacc.py:2563:
   yacc.py:2565:    (151) state_description -> singular_state_desc .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 151 (state_description -> singular_state_desc .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 191
   yacc.py:2563:
   yacc.py:2565:    (152) state_description -> brief_state_desc .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 152 (state_description -> brief_state_desc .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 192
   yacc.py:2563:
   yacc.py:2565:    (167) state -> BLANK .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 167 (state -> BLANK .)
   yacc.py:2687:    COLUMNS         reduce using rule 167 (state -> BLANK .)
   yacc.py:2687:    LINES           reduce using rule 167 (state -> BLANK .)
   yacc.py:2687:    CASES           reduce using rule 167 (state -> BLANK .)
   yacc.py:2687:    LINE            reduce using rule 167 (state -> BLANK .)
   yacc.py:2687:    CASE            reduce using rule 167 (state -> BLANK .)
   yacc.py:2687:    SPACE           reduce using rule 167 (state -> BLANK .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 193
   yacc.py:2563:
   yacc.py:2565:    (168) state -> BROKEN .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 168 (state -> BROKEN .)
   yacc.py:2687:    COLUMNS         reduce using rule 168 (state -> BROKEN .)
   yacc.py:2687:    LINES           reduce using rule 168 (state -> BROKEN .)
   yacc.py:2687:    CASES           reduce using rule 168 (state -> BROKEN .)
   yacc.py:2687:    LINE            reduce using rule 168 (state -> BROKEN .)
   yacc.py:2687:    CASE            reduce using rule 168 (state -> BROKEN .)
   yacc.py:2687:    SPACE           reduce using rule 168 (state -> BROKEN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 194
   yacc.py:2563:
   yacc.py:2565:    (169) state -> EFFACED .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 169 (state -> EFFACED .)
   yacc.py:2687:    COLUMNS         reduce using rule 169 (state -> EFFACED .)
   yacc.py:2687:    LINES           reduce using rule 169 (state -> EFFACED .)
   yacc.py:2687:    CASES           reduce using rule 169 (state -> EFFACED .)
   yacc.py:2687:    LINE            reduce using rule 169 (state -> EFFACED .)
   yacc.py:2687:    CASE            reduce using rule 169 (state -> EFFACED .)
   yacc.py:2687:    SPACE           reduce using rule 169 (state -> EFFACED .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 195
   yacc.py:2563:
   yacc.py:2565:    (170) state -> ILLEGIBLE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 170 (state -> ILLEGIBLE .)
   yacc.py:2687:    COLUMNS         reduce using rule 170 (state -> ILLEGIBLE .)
   yacc.py:2687:    LINES           reduce using rule 170 (state -> ILLEGIBLE .)
   yacc.py:2687:    CASES           reduce using rule 170 (state -> ILLEGIBLE .)
   yacc.py:2687:    LINE            reduce using rule 170 (state -> ILLEGIBLE .)
   yacc.py:2687:    CASE            reduce using rule 170 (state -> ILLEGIBLE .)
   yacc.py:2687:    SPACE           reduce using rule 170 (state -> ILLEGIBLE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 196
   yacc.py:2563:
   yacc.py:2565:    (171) state -> MISSING .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 171 (state -> MISSING .)
   yacc.py:2687:    COLUMNS         reduce using rule 171 (state -> MISSING .)
   yacc.py:2687:    LINES           reduce using rule 171 (state -> MISSING .)
   yacc.py:2687:    CASES           reduce using rule 171 (state -> MISSING .)
   yacc.py:2687:    LINE            reduce using rule 171 (state -> MISSING .)
   yacc.py:2687:    CASE            reduce using rule 171 (state -> MISSING .)
   yacc.py:2687:    SPACE           reduce using rule 171 (state -> MISSING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 197
   yacc.py:2563:
   yacc.py:2565:    (172) state -> TRACES .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 172 (state -> TRACES .)
   yacc.py:2687:    COLUMNS         reduce using rule 172 (state -> TRACES .)
   yacc.py:2687:    LINES           reduce using rule 172 (state -> TRACES .)
   yacc.py:2687:    CASES           reduce using rule 172 (state -> TRACES .)
   yacc.py:2687:    LINE            reduce using rule 172 (state -> TRACES .)
   yacc.py:2687:    CASE            reduce using rule 172 (state -> TRACES .)
   yacc.py:2687:    SPACE           reduce using rule 172 (state -> TRACES .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 198
   yacc.py:2563:
   yacc.py:2565:    (153) plural_state_description -> plural_quantifier . plural_scope state
   yacc.py:2565:    (178) plural_scope -> . COLUMNS
   yacc.py:2565:    (179) plural_scope -> . LINES
   yacc.py:2565:    (180) plural_scope -> . CASES
   yacc.py:2566:
   yacc.py:2687:    COLUMNS         shift and go to state 206
   yacc.py:2687:    LINES           shift and go to state 207
   yacc.py:2687:    CASES           shift and go to state 208
   yacc.py:2689:
   yacc.py:2714:    plural_scope                   shift and go to state 297
   yacc.py:2561:
   yacc.py:2562:state 199
   yacc.py:2563:
   yacc.py:2565:    (157) plural_state_description -> plural_scope . state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 298
   yacc.py:2561:
   yacc.py:2562:state 200
   yacc.py:2563:
   yacc.py:2565:    (161) singular_state_desc -> singular_scope . state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 299
   yacc.py:2561:
   yacc.py:2562:state 201
   yacc.py:2563:
   yacc.py:2565:    (160) plural_state_description -> qualification . plural_state_description
   yacc.py:2565:    (153) plural_state_description -> . plural_quantifier plural_scope state
   yacc.py:2565:    (154) plural_state_description -> . ID plural_scope state
   yacc.py:2565:    (155) plural_state_description -> . ID singular_scope state
   yacc.py:2565:    (156) plural_state_description -> . ID REFERENCE state
   yacc.py:2565:    (157) plural_state_description -> . plural_scope state
   yacc.py:2565:    (158) plural_state_description -> . state plural_scope
   yacc.py:2565:    (159) plural_state_description -> . ID MINUS ID plural_scope state
   yacc.py:2565:    (160) plural_state_description -> . qualification plural_state_description
   yacc.py:2565:    (173) plural_quantifier -> . SEVERAL
   yacc.py:2565:    (174) plural_quantifier -> . SOME
   yacc.py:2565:    (178) plural_scope -> . COLUMNS
   yacc.py:2565:    (179) plural_scope -> . LINES
   yacc.py:2565:    (180) plural_scope -> . CASES
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2565:    (187) qualification -> . AT LEAST
   yacc.py:2565:    (188) qualification -> . AT MOST
   yacc.py:2565:    (189) qualification -> . ABOUT
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 302
   yacc.py:2687:    SEVERAL         shift and go to state 204
   yacc.py:2687:    SOME            shift and go to state 205
   yacc.py:2687:    COLUMNS         shift and go to state 206
   yacc.py:2687:    LINES           shift and go to state 207
   yacc.py:2687:    CASES           shift and go to state 208
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2687:    AT              shift and go to state 209
   yacc.py:2687:    ABOUT           shift and go to state 210
   yacc.py:2689:
   yacc.py:2714:    qualification                  shift and go to state 201
   yacc.py:2714:    plural_state_description       shift and go to state 300
   yacc.py:2714:    plural_quantifier              shift and go to state 198
   yacc.py:2714:    plural_scope                   shift and go to state 199
   yacc.py:2714:    state                          shift and go to state 301
   yacc.py:2561:
   yacc.py:2562:state 202
   yacc.py:2563:
   yacc.py:2565:    (166) singular_state_desc -> partial_quantifier . singular_state_desc
   yacc.py:2565:    (161) singular_state_desc -> . singular_scope state
   yacc.py:2565:    (162) singular_state_desc -> . REFERENCE state
   yacc.py:2565:    (163) singular_state_desc -> . REFERENCE ID state
   yacc.py:2565:    (164) singular_state_desc -> . state singular_scope
   yacc.py:2565:    (166) singular_state_desc -> . partial_quantifier singular_state_desc
   yacc.py:2565:    (175) singular_scope -> . LINE
   yacc.py:2565:    (176) singular_scope -> . CASE
   yacc.py:2565:    (177) singular_scope -> . SPACE
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2565:    (186) partial_quantifier -> . brief_quantifier OF
   yacc.py:2565:    (181) brief_quantifier -> . REST
   yacc.py:2565:    (182) brief_quantifier -> . START
   yacc.py:2565:    (183) brief_quantifier -> . BEGINNING
   yacc.py:2565:    (184) brief_quantifier -> . MIDDLE
   yacc.py:2565:    (185) brief_quantifier -> . END
   yacc.py:2566:
   yacc.py:2687:    REFERENCE       shift and go to state 305
   yacc.py:2687:    LINE            shift and go to state 188
   yacc.py:2687:    CASE            shift and go to state 211
   yacc.py:2687:    SPACE           shift and go to state 212
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2687:    REST            shift and go to state 213
   yacc.py:2687:    START           shift and go to state 214
   yacc.py:2687:    BEGINNING       shift and go to state 215
   yacc.py:2687:    MIDDLE          shift and go to state 216
   yacc.py:2687:    END             shift and go to state 217
   yacc.py:2689:
   yacc.py:2714:    partial_quantifier             shift and go to state 202
   yacc.py:2714:    singular_state_desc            shift and go to state 303
   yacc.py:2714:    singular_scope                 shift and go to state 200
   yacc.py:2714:    state                          shift and go to state 304
   yacc.py:2714:    brief_quantifier               shift and go to state 306
   yacc.py:2561:
   yacc.py:2562:state 203
   yacc.py:2563:
   yacc.py:2565:    (165) brief_state_desc -> brief_quantifier . state
   yacc.py:2565:    (186) partial_quantifier -> brief_quantifier . OF
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    OF              shift and go to state 308
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 307
   yacc.py:2561:
   yacc.py:2562:state 204
   yacc.py:2563:
   yacc.py:2565:    (173) plural_quantifier -> SEVERAL .
   yacc.py:2566:
   yacc.py:2687:    COLUMNS         reduce using rule 173 (plural_quantifier -> SEVERAL .)
   yacc.py:2687:    LINES           reduce using rule 173 (plural_quantifier -> SEVERAL .)
   yacc.py:2687:    CASES           reduce using rule 173 (plural_quantifier -> SEVERAL .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 205
   yacc.py:2563:
   yacc.py:2565:    (174) plural_quantifier -> SOME .
   yacc.py:2566:
   yacc.py:2687:    COLUMNS         reduce using rule 174 (plural_quantifier -> SOME .)
   yacc.py:2687:    LINES           reduce using rule 174 (plural_quantifier -> SOME .)
   yacc.py:2687:    CASES           reduce using rule 174 (plural_quantifier -> SOME .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 206
   yacc.py:2563:
   yacc.py:2565:    (178) plural_scope -> COLUMNS .
   yacc.py:2566:
   yacc.py:2687:    BLANK           reduce using rule 178 (plural_scope -> COLUMNS .)
   yacc.py:2687:    BROKEN          reduce using rule 178 (plural_scope -> COLUMNS .)
   yacc.py:2687:    EFFACED         reduce using rule 178 (plural_scope -> COLUMNS .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 178 (plural_scope -> COLUMNS .)
   yacc.py:2687:    MISSING         reduce using rule 178 (plural_scope -> COLUMNS .)
   yacc.py:2687:    TRACES          reduce using rule 178 (plural_scope -> COLUMNS .)
   yacc.py:2687:    NEWLINE         reduce using rule 178 (plural_scope -> COLUMNS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 207
   yacc.py:2563:
   yacc.py:2565:    (179) plural_scope -> LINES .
   yacc.py:2566:
   yacc.py:2687:    BLANK           reduce using rule 179 (plural_scope -> LINES .)
   yacc.py:2687:    BROKEN          reduce using rule 179 (plural_scope -> LINES .)
   yacc.py:2687:    EFFACED         reduce using rule 179 (plural_scope -> LINES .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 179 (plural_scope -> LINES .)
   yacc.py:2687:    MISSING         reduce using rule 179 (plural_scope -> LINES .)
   yacc.py:2687:    TRACES          reduce using rule 179 (plural_scope -> LINES .)
   yacc.py:2687:    NEWLINE         reduce using rule 179 (plural_scope -> LINES .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 208
   yacc.py:2563:
   yacc.py:2565:    (180) plural_scope -> CASES .
   yacc.py:2566:
   yacc.py:2687:    BLANK           reduce using rule 180 (plural_scope -> CASES .)
   yacc.py:2687:    BROKEN          reduce using rule 180 (plural_scope -> CASES .)
   yacc.py:2687:    EFFACED         reduce using rule 180 (plural_scope -> CASES .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 180 (plural_scope -> CASES .)
   yacc.py:2687:    MISSING         reduce using rule 180 (plural_scope -> CASES .)
   yacc.py:2687:    TRACES          reduce using rule 180 (plural_scope -> CASES .)
   yacc.py:2687:    NEWLINE         reduce using rule 180 (plural_scope -> CASES .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 209
   yacc.py:2563:
   yacc.py:2565:    (187) qualification -> AT . LEAST
   yacc.py:2565:    (188) qualification -> AT . MOST
   yacc.py:2566:
   yacc.py:2687:    LEAST           shift and go to state 309
   yacc.py:2687:    MOST            shift and go to state 310
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 210
   yacc.py:2563:
   yacc.py:2565:    (189) qualification -> ABOUT .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    SEVERAL         reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    SOME            reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    COLUMNS         reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    LINES           reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    CASES           reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    BLANK           reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    BROKEN          reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    EFFACED         reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    MISSING         reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    TRACES          reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    AT              reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2687:    ABOUT           reduce using rule 189 (qualification -> ABOUT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 211
   yacc.py:2563:
   yacc.py:2565:    (176) singular_scope -> CASE .
   yacc.py:2566:
   yacc.py:2687:    BLANK           reduce using rule 176 (singular_scope -> CASE .)
   yacc.py:2687:    BROKEN          reduce using rule 176 (singular_scope -> CASE .)
   yacc.py:2687:    EFFACED         reduce using rule 176 (singular_scope -> CASE .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 176 (singular_scope -> CASE .)
   yacc.py:2687:    MISSING         reduce using rule 176 (singular_scope -> CASE .)
   yacc.py:2687:    TRACES          reduce using rule 176 (singular_scope -> CASE .)
   yacc.py:2687:    NEWLINE         reduce using rule 176 (singular_scope -> CASE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 212
   yacc.py:2563:
   yacc.py:2565:    (177) singular_scope -> SPACE .
   yacc.py:2566:
   yacc.py:2687:    BLANK           reduce using rule 177 (singular_scope -> SPACE .)
   yacc.py:2687:    BROKEN          reduce using rule 177 (singular_scope -> SPACE .)
   yacc.py:2687:    EFFACED         reduce using rule 177 (singular_scope -> SPACE .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 177 (singular_scope -> SPACE .)
   yacc.py:2687:    MISSING         reduce using rule 177 (singular_scope -> SPACE .)
   yacc.py:2687:    TRACES          reduce using rule 177 (singular_scope -> SPACE .)
   yacc.py:2687:    NEWLINE         reduce using rule 177 (singular_scope -> SPACE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 213
   yacc.py:2563:
   yacc.py:2565:    (181) brief_quantifier -> REST .
   yacc.py:2566:
   yacc.py:2687:    OF              reduce using rule 181 (brief_quantifier -> REST .)
   yacc.py:2687:    BLANK           reduce using rule 181 (brief_quantifier -> REST .)
   yacc.py:2687:    BROKEN          reduce using rule 181 (brief_quantifier -> REST .)
   yacc.py:2687:    EFFACED         reduce using rule 181 (brief_quantifier -> REST .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 181 (brief_quantifier -> REST .)
   yacc.py:2687:    MISSING         reduce using rule 181 (brief_quantifier -> REST .)
   yacc.py:2687:    TRACES          reduce using rule 181 (brief_quantifier -> REST .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 214
   yacc.py:2563:
   yacc.py:2565:    (182) brief_quantifier -> START .
   yacc.py:2566:
   yacc.py:2687:    OF              reduce using rule 182 (brief_quantifier -> START .)
   yacc.py:2687:    BLANK           reduce using rule 182 (brief_quantifier -> START .)
   yacc.py:2687:    BROKEN          reduce using rule 182 (brief_quantifier -> START .)
   yacc.py:2687:    EFFACED         reduce using rule 182 (brief_quantifier -> START .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 182 (brief_quantifier -> START .)
   yacc.py:2687:    MISSING         reduce using rule 182 (brief_quantifier -> START .)
   yacc.py:2687:    TRACES          reduce using rule 182 (brief_quantifier -> START .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 215
   yacc.py:2563:
   yacc.py:2565:    (183) brief_quantifier -> BEGINNING .
   yacc.py:2566:
   yacc.py:2687:    OF              reduce using rule 183 (brief_quantifier -> BEGINNING .)
   yacc.py:2687:    BLANK           reduce using rule 183 (brief_quantifier -> BEGINNING .)
   yacc.py:2687:    BROKEN          reduce using rule 183 (brief_quantifier -> BEGINNING .)
   yacc.py:2687:    EFFACED         reduce using rule 183 (brief_quantifier -> BEGINNING .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 183 (brief_quantifier -> BEGINNING .)
   yacc.py:2687:    MISSING         reduce using rule 183 (brief_quantifier -> BEGINNING .)
   yacc.py:2687:    TRACES          reduce using rule 183 (brief_quantifier -> BEGINNING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 216
   yacc.py:2563:
   yacc.py:2565:    (184) brief_quantifier -> MIDDLE .
   yacc.py:2566:
   yacc.py:2687:    OF              reduce using rule 184 (brief_quantifier -> MIDDLE .)
   yacc.py:2687:    BLANK           reduce using rule 184 (brief_quantifier -> MIDDLE .)
   yacc.py:2687:    BROKEN          reduce using rule 184 (brief_quantifier -> MIDDLE .)
   yacc.py:2687:    EFFACED         reduce using rule 184 (brief_quantifier -> MIDDLE .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 184 (brief_quantifier -> MIDDLE .)
   yacc.py:2687:    MISSING         reduce using rule 184 (brief_quantifier -> MIDDLE .)
   yacc.py:2687:    TRACES          reduce using rule 184 (brief_quantifier -> MIDDLE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 217
   yacc.py:2563:
   yacc.py:2565:    (185) brief_quantifier -> END .
   yacc.py:2566:
   yacc.py:2687:    OF              reduce using rule 185 (brief_quantifier -> END .)
   yacc.py:2687:    BLANK           reduce using rule 185 (brief_quantifier -> END .)
   yacc.py:2687:    BROKEN          reduce using rule 185 (brief_quantifier -> END .)
   yacc.py:2687:    EFFACED         reduce using rule 185 (brief_quantifier -> END .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 185 (brief_quantifier -> END .)
   yacc.py:2687:    MISSING         reduce using rule 185 (brief_quantifier -> END .)
   yacc.py:2687:    TRACES          reduce using rule 185 (brief_quantifier -> END .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 218
   yacc.py:2563:
   yacc.py:2565:    (213) link_reference -> link_operator ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 213 (link_reference -> link_operator ID .)
   yacc.py:2687:    COMMA           reduce using rule 213 (link_reference -> link_operator ID .)
   yacc.py:2687:    REFERENCE       reduce using rule 213 (link_reference -> link_operator ID .)
   yacc.py:2687:    MINUS           reduce using rule 213 (link_reference -> link_operator ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 213 (link_reference -> link_operator ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 219
   yacc.py:2563:
   yacc.py:2565:    (127) milestone_name -> M EQUALS . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 311
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 220
   yacc.py:2563:
   yacc.py:2565:    (100) line_sequence -> LINELABEL ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 100 (line_sequence -> LINELABEL ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 100 (line_sequence -> LINELABEL ID .)
   yacc.py:2687:    HAT             reduce using rule 100 (line_sequence -> LINELABEL ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 221
   yacc.py:2563:
   yacc.py:2565:    (101) line_sequence -> SCORELABEL ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 101 (line_sequence -> SCORELABEL ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 101 (line_sequence -> SCORELABEL ID .)
   yacc.py:2687:    HAT             reduce using rule 101 (line_sequence -> SCORELABEL ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 222
   yacc.py:2563:
   yacc.py:2565:    (13) text_statement -> AMPERSAND ID EQUALS . ID newline
   yacc.py:2565:    (14) text_statement -> AMPERSAND ID EQUALS . ID QUERY newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 312
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 223
   yacc.py:2563:
   yacc.py:2565:    (147) newline -> newline NEWLINE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    TRANSLATION     reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    OBVERSE         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    REVERSE         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    LEFT            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    RIGHT           reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    TOP             reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    BOTTOM          reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    EDGE            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    FACE            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    SURFACE         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    COLUMN          reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    SEAL            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    HEADING         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    DOLLAR          reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    NOTE            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    CATCHLINE       reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    COLOPHON        reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    DATE            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    SIGNATURES      reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    SIGNATURE       reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    SUMMARY         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    WITNESSES       reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    M               reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    LINELABEL       reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    SCORELABEL      reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    PARBAR          reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    TO              reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    FROM            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    $end            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    COMPOSITE       reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    VERSION         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    ATF             reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    BIB             reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    LINK            reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    INCLUDE         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    COMMENT         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    CHECK           reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    SCORE           reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    PROJECT         reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    AMPERSAND       reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    KEY             reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    TABLET          reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    ENVELOPE        reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    PRISM           reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    BULLA           reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    SEALINGS        reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    FRAGMENT        reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    OBJECT          reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    END             reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    LABEL           reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    OPENR           reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    TR              reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    LEM             reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    ID              reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2687:    HAT             reduce using rule 147 (newline -> newline NEWLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 224
   yacc.py:2563:
   yacc.py:2565:    (193) translation -> translation END REFERENCE . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 313
   yacc.py:2561:
   yacc.py:2562:state 225
   yacc.py:2563:
   yacc.py:2565:    (208) translationlabeledline -> translationlabeledline reference .
   yacc.py:2565:    (209) translationlabeledline -> translationlabeledline reference . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    HAT             reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    COMMENT         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    CHECK           reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    NOTE            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    END             reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    LABEL           reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    OPENR           reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    DOLLAR          reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    OBVERSE         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    REVERSE         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    LEFT            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    RIGHT           reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    TOP             reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    BOTTOM          reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    EDGE            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    FACE            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    SURFACE         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    COLUMN          reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    SEAL            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    HEADING         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    COMPOSITE       reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    VERSION         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    ATF             reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    BIB             reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    LINK            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    INCLUDE         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    SCORE           reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    PROJECT         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    TRANSLATION     reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    AMPERSAND       reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    KEY             reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    TABLET          reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    ENVELOPE        reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    PRISM           reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    BULLA           reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    SEALINGS        reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    FRAGMENT        reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    OBJECT          reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    CATCHLINE       reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    COLOPHON        reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    DATE            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    SIGNATURES      reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    SIGNATURE       reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    SUMMARY         reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    WITNESSES       reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    M               reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    LINELABEL       reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    SCORELABEL      reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    PARBAR          reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    TO              reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    FROM            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    $end            reduce using rule 208 (translationlabeledline -> translationlabeledline reference .)
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 314
   yacc.py:2561:
   yacc.py:2562:state 226
   yacc.py:2563:
   yacc.py:2565:    (210) translationlabeledline -> translationlabeledline note_statement .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    HAT             reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    COMMENT         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    CHECK           reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    NOTE            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    END             reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    LABEL           reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    OPENR           reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    LEFT            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    TOP             reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    EDGE            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    FACE            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    SEAL            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    HEADING         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    VERSION         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    ATF             reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    BIB             reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    LINK            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    SCORE           reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    KEY             reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    TABLET          reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    PRISM           reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    BULLA           reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    DATE            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    M               reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    TO              reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    FROM            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2687:    $end            reduce using rule 210 (translationlabeledline -> translationlabeledline note_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 227
   yacc.py:2563:
   yacc.py:2565:    (211) translationlabeledline -> translationlabeledline ID .
   yacc.py:2565:    (212) translationlabeledline -> translationlabeledline ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    HAT             reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    COMMENT         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    CHECK           reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    NOTE            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    END             reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    LABEL           reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    OPENR           reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    DOLLAR          reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    OBVERSE         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    REVERSE         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    LEFT            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    RIGHT           reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    TOP             reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    BOTTOM          reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    EDGE            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    FACE            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    SURFACE         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    COLUMN          reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    SEAL            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    HEADING         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    COMPOSITE       reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    VERSION         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    ATF             reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    BIB             reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    LINK            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    INCLUDE         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    SCORE           reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    PROJECT         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    TRANSLATION     reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    AMPERSAND       reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    KEY             reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    TABLET          reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    ENVELOPE        reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    PRISM           reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    BULLA           reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    SEALINGS        reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    FRAGMENT        reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    OBJECT          reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    CATCHLINE       reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    COLOPHON        reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    DATE            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    SIGNATURES      reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    SIGNATURE       reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    SUMMARY         reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    WITNESSES       reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    M               reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    LINELABEL       reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    SCORELABEL      reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    PARBAR          reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    TO              reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    FROM            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    $end            reduce using rule 211 (translationlabeledline -> translationlabeledline ID .)
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 315
   yacc.py:2561:
   yacc.py:2562:state 228
   yacc.py:2563:
   yacc.py:2565:    (225) translationlabeledline -> translationlabeledline comment .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    HAT             reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    COMMENT         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    CHECK           reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    NOTE            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    END             reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    LABEL           reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    OPENR           reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    DOLLAR          reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    OBVERSE         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    REVERSE         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    LEFT            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    RIGHT           reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    TOP             reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    BOTTOM          reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    EDGE            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    FACE            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    SURFACE         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    COLUMN          reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    SEAL            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    HEADING         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    COMPOSITE       reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    VERSION         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    ATF             reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    BIB             reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    LINK            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    INCLUDE         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    SCORE           reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    PROJECT         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    TRANSLATION     reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    AMPERSAND       reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    KEY             reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    TABLET          reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    ENVELOPE        reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    PRISM           reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    BULLA           reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    SEALINGS        reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    FRAGMENT        reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    OBJECT          reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    CATCHLINE       reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    COLOPHON        reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    DATE            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    SIGNATURES      reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    SIGNATURE       reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    SUMMARY         reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    WITNESSES       reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    M               reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    LINELABEL       reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    SCORELABEL      reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    PARBAR          reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    TO              reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    FROM            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2687:    $end            reduce using rule 225 (translationlabeledline -> translationlabeledline comment .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 229
   yacc.py:2563:
   yacc.py:2565:    (197) translationlabeledline -> translationlabel NEWLINE .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    HAT             reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    COMMENT         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    CHECK           reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    NOTE            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    END             reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    LABEL           reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    OPENR           reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    DOLLAR          reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    OBVERSE         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    REVERSE         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    LEFT            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    RIGHT           reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    TOP             reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    BOTTOM          reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    EDGE            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    FACE            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    SURFACE         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    COLUMN          reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    SEAL            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    HEADING         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    COMPOSITE       reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    VERSION         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    ATF             reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    BIB             reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    LINK            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    INCLUDE         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    SCORE           reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    PROJECT         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    TRANSLATION     reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    AMPERSAND       reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    KEY             reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    TABLET          reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    ENVELOPE        reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    PRISM           reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    BULLA           reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    SEALINGS        reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    FRAGMENT        reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    OBJECT          reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    CATCHLINE       reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    COLOPHON        reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    DATE            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    SIGNATURES      reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    SIGNATURE       reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    SUMMARY         reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    WITNESSES       reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    M               reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    LINELABEL       reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    SCORELABEL      reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    PARBAR          reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    TO              reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    FROM            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2687:    $end            reduce using rule 197 (translationlabeledline -> translationlabel NEWLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 230
   yacc.py:2563:
   yacc.py:2565:    (199) translationlabeledline -> translationlabel CLOSER .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    HAT             reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    COMMENT         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    CHECK           reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    NOTE            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    END             reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    LABEL           reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    OPENR           reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    DOLLAR          reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    OBVERSE         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    REVERSE         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    LEFT            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    RIGHT           reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    TOP             reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    BOTTOM          reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    EDGE            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    FACE            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    SURFACE         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    COLUMN          reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    SEAL            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    HEADING         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    COMPOSITE       reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    VERSION         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    ATF             reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    BIB             reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    LINK            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    INCLUDE         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    SCORE           reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    PROJECT         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    TRANSLATION     reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    AMPERSAND       reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    KEY             reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    TABLET          reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    ENVELOPE        reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    PRISM           reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    BULLA           reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    SEALINGS        reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    FRAGMENT        reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    OBJECT          reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    CATCHLINE       reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    COLOPHON        reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    DATE            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    SIGNATURES      reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    SIGNATURE       reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    SUMMARY         reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    WITNESSES       reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    M               reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    LINELABEL       reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    SCORELABEL      reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    PARBAR          reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    TO              reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    FROM            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2687:    $end            reduce using rule 199 (translationlabeledline -> translationlabel CLOSER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 231
   yacc.py:2563:
   yacc.py:2565:    (203) translationlabel -> translationlabel ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 203 (translationlabel -> translationlabel ID .)
   yacc.py:2687:    CLOSER          reduce using rule 203 (translationlabel -> translationlabel ID .)
   yacc.py:2687:    ID              reduce using rule 203 (translationlabel -> translationlabel ID .)
   yacc.py:2687:    REFERENCE       reduce using rule 203 (translationlabel -> translationlabel ID .)
   yacc.py:2687:    MINUS           reduce using rule 203 (translationlabel -> translationlabel ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 232
   yacc.py:2563:
   yacc.py:2565:    (204) translationlabel -> translationlabel REFERENCE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 204 (translationlabel -> translationlabel REFERENCE .)
   yacc.py:2687:    CLOSER          reduce using rule 204 (translationlabel -> translationlabel REFERENCE .)
   yacc.py:2687:    ID              reduce using rule 204 (translationlabel -> translationlabel REFERENCE .)
   yacc.py:2687:    REFERENCE       reduce using rule 204 (translationlabel -> translationlabel REFERENCE .)
   yacc.py:2687:    MINUS           reduce using rule 204 (translationlabel -> translationlabel REFERENCE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 233
   yacc.py:2563:
   yacc.py:2565:    (205) translationrangelabel -> translationlabel MINUS .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 205 (translationrangelabel -> translationlabel MINUS .)
   yacc.py:2687:    CLOSER          reduce using rule 205 (translationrangelabel -> translationlabel MINUS .)
   yacc.py:2687:    ID              reduce using rule 205 (translationrangelabel -> translationlabel MINUS .)
   yacc.py:2687:    REFERENCE       reduce using rule 205 (translationrangelabel -> translationlabel MINUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 234
   yacc.py:2563:
   yacc.py:2565:    (198) translationlabeledline -> translationrangelabel NEWLINE .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    HAT             reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    COMMENT         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    CHECK           reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    NOTE            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    END             reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    LABEL           reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    OPENR           reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    DOLLAR          reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    OBVERSE         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    REVERSE         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    LEFT            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    RIGHT           reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    TOP             reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    BOTTOM          reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    EDGE            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    FACE            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    SURFACE         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    COLUMN          reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    SEAL            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    HEADING         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    COMPOSITE       reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    VERSION         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    ATF             reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    BIB             reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    LINK            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    INCLUDE         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    SCORE           reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    PROJECT         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    TRANSLATION     reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    AMPERSAND       reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    KEY             reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    TABLET          reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    ENVELOPE        reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    PRISM           reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    BULLA           reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    SEALINGS        reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    FRAGMENT        reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    OBJECT          reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    CATCHLINE       reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    COLOPHON        reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    DATE            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    SIGNATURES      reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    SIGNATURE       reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    SUMMARY         reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    WITNESSES       reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    M               reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    LINELABEL       reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    SCORELABEL      reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    PARBAR          reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    TO              reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    FROM            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2687:    $end            reduce using rule 198 (translationlabeledline -> translationrangelabel NEWLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 235
   yacc.py:2563:
   yacc.py:2565:    (200) translationlabeledline -> translationrangelabel CLOSER .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    HAT             reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    COMMENT         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    CHECK           reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    NOTE            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    END             reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    LABEL           reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    OPENR           reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    DOLLAR          reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    OBVERSE         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    REVERSE         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    LEFT            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    RIGHT           reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    TOP             reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    BOTTOM          reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    EDGE            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    FACE            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    SURFACE         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    COLUMN          reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    SEAL            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    HEADING         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    COMPOSITE       reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    VERSION         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    ATF             reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    BIB             reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    LINK            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    INCLUDE         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    SCORE           reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    PROJECT         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    TRANSLATION     reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    AMPERSAND       reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    KEY             reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    TABLET          reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    ENVELOPE        reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    PRISM           reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    BULLA           reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    SEALINGS        reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    FRAGMENT        reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    OBJECT          reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    CATCHLINE       reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    COLOPHON        reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    DATE            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    SIGNATURES      reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    SIGNATURE       reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    SUMMARY         reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    WITNESSES       reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    M               reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    LINELABEL       reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    SCORELABEL      reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    PARBAR          reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    TO              reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    FROM            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2687:    $end            reduce using rule 200 (translationlabeledline -> translationrangelabel CLOSER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 236
   yacc.py:2563:
   yacc.py:2565:    (206) translationrangelabel -> translationrangelabel ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 206 (translationrangelabel -> translationrangelabel ID .)
   yacc.py:2687:    CLOSER          reduce using rule 206 (translationrangelabel -> translationrangelabel ID .)
   yacc.py:2687:    ID              reduce using rule 206 (translationrangelabel -> translationrangelabel ID .)
   yacc.py:2687:    REFERENCE       reduce using rule 206 (translationrangelabel -> translationrangelabel ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 237
   yacc.py:2563:
   yacc.py:2565:    (207) translationrangelabel -> translationrangelabel REFERENCE .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 207 (translationrangelabel -> translationrangelabel REFERENCE .)
   yacc.py:2687:    CLOSER          reduce using rule 207 (translationrangelabel -> translationrangelabel REFERENCE .)
   yacc.py:2687:    ID              reduce using rule 207 (translationrangelabel -> translationrangelabel REFERENCE .)
   yacc.py:2687:    REFERENCE       reduce using rule 207 (translationrangelabel -> translationrangelabel REFERENCE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 238
   yacc.py:2563:
   yacc.py:2565:    (11) version_protocol -> VERSION ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    ATF             reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    BIB             reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    LINK            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    KEY             reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    TOP             reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    FACE            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    DATE            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    M               reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    TO              reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    FROM            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    $end            reduce using rule 11 (version_protocol -> VERSION ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 239
   yacc.py:2563:
   yacc.py:2565:    (33) skipped_protocol -> ATF USE UNICODE . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 316
   yacc.py:2561:
   yacc.py:2562:state 240
   yacc.py:2563:
   yacc.py:2565:    (34) skipped_protocol -> ATF USE MATH . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 317
   yacc.py:2561:
   yacc.py:2562:state 241
   yacc.py:2563:
   yacc.py:2565:    (35) skipped_protocol -> ATF USE LEGACY . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 318
   yacc.py:2561:
   yacc.py:2562:state 242
   yacc.py:2563:
   yacc.py:2565:    (36) skipped_protocol -> ATF USE MYLINES . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 319
   yacc.py:2561:
   yacc.py:2562:state 243
   yacc.py:2563:
   yacc.py:2565:    (37) skipped_protocol -> ATF USE LEXICAL . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 320
   yacc.py:2561:
   yacc.py:2562:state 244
   yacc.py:2563:
   yacc.py:2565:    (53) language_protocol -> ATF LANG ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 321
   yacc.py:2561:
   yacc.py:2562:state 245
   yacc.py:2563:
   yacc.py:2565:    (39) skipped_protocol -> BIB ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    ATF             reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    BIB             reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    LINK            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    KEY             reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    TOP             reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    FACE            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    DATE            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    M               reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    TO              reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    FROM            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    $end            reduce using rule 39 (skipped_protocol -> BIB ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 246
   yacc.py:2563:
   yacc.py:2565:    (40) skipped_protocol -> BIB ID EQUALS . ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 322
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 247
   yacc.py:2563:
   yacc.py:2565:    (49) link -> LINK DEF ID . EQUALS ID EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 323
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 248
   yacc.py:2563:
   yacc.py:2565:    (50) link -> LINK SOURCE ID . EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 324
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 249
   yacc.py:2563:
   yacc.py:2565:    (51) link -> LINK PARALLEL ID . EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 325
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 250
   yacc.py:2563:
   yacc.py:2565:    (52) link -> INCLUDE ID EQUALS . ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 326
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 251
   yacc.py:2563:
   yacc.py:2565:    (122) multilingual -> multilingual lemma_statement .
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    CHECK           reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    LEM             reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    NOTE            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    TO              reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    FROM            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    TR              reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    VERSION         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    ATF             reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    BIB             reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    LINK            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    SCORE           reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    KEY             reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    TABLET          reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    PRISM           reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    BULLA           reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    LEFT            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    TOP             reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    EDGE            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    FACE            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    SEAL            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    HEADING         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    DATE            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    M               reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    $end            reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    END             reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    LABEL           reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2687:    OPENR           reduce using rule 122 (multilingual -> multilingual lemma_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 252
   yacc.py:2563:
   yacc.py:2565:    (123) multilingual -> multilingual note_statement .
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    CHECK           reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    LEM             reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    NOTE            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    TO              reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    FROM            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    TR              reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    VERSION         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    ATF             reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    BIB             reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    LINK            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    SCORE           reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    KEY             reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    TABLET          reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    PRISM           reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    BULLA           reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    LEFT            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    TOP             reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    EDGE            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    FACE            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    SEAL            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    HEADING         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    DATE            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    M               reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    $end            reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    END             reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    LABEL           reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2687:    OPENR           reduce using rule 123 (multilingual -> multilingual note_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 253
   yacc.py:2563:
   yacc.py:2565:    (124) multilingual -> multilingual link_reference_statement .
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    CHECK           reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    LEM             reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    NOTE            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    PARBAR          reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    TO              reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    FROM            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    TR              reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    COMPOSITE       reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    VERSION         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    ATF             reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    BIB             reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    LINK            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    INCLUDE         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    SCORE           reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    PROJECT         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    TRANSLATION     reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    AMPERSAND       reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    KEY             reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    TABLET          reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    ENVELOPE        reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    PRISM           reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    BULLA           reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    SEALINGS        reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    FRAGMENT        reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    OBJECT          reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    OBVERSE         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    REVERSE         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    LEFT            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    RIGHT           reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    TOP             reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    BOTTOM          reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    EDGE            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    FACE            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    SURFACE         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    COLUMN          reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    SEAL            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    HEADING         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    DOLLAR          reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    CATCHLINE       reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    COLOPHON        reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    DATE            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    SIGNATURES      reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    SIGNATURE       reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    SUMMARY         reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    WITNESSES       reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    M               reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    LINELABEL       reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    SCORELABEL      reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    $end            reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    END             reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    LABEL           reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2687:    OPENR           reduce using rule 124 (multilingual -> multilingual link_reference_statement .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 254
   yacc.py:2563:
   yacc.py:2565:    (229) multilingual -> multilingual comment .
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    CHECK           reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    LEM             reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    NOTE            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    PARBAR          reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    TO              reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    FROM            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    TR              reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    COMPOSITE       reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    VERSION         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    ATF             reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    BIB             reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    LINK            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    INCLUDE         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    SCORE           reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    PROJECT         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    TRANSLATION     reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    AMPERSAND       reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    KEY             reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    TABLET          reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    ENVELOPE        reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    PRISM           reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    BULLA           reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    SEALINGS        reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    FRAGMENT        reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    OBJECT          reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    OBVERSE         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    REVERSE         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    LEFT            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    RIGHT           reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    TOP             reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    BOTTOM          reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    EDGE            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    FACE            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    SURFACE         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    COLUMN          reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    SEAL            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    HEADING         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    DOLLAR          reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    CATCHLINE       reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    COLOPHON        reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    DATE            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    SIGNATURES      reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    SIGNATURE       reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    SUMMARY         reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    WITNESSES       reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    M               reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    LINELABEL       reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    SCORELABEL      reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    $end            reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    END             reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    LABEL           reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2687:    OPENR           reduce using rule 229 (multilingual -> multilingual comment .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 255
   yacc.py:2563:
   yacc.py:2565:    (131) lemma_statement -> lemma_list newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    COMMENT         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    CHECK           reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    LEM             reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    NOTE            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    PARBAR          reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    TO              reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    FROM            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    VERSION         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    ATF             reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    BIB             reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    LINK            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    SCORE           reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    PROJECT         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    KEY             reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    TABLET          reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    PRISM           reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    BULLA           reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    OBJECT          reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    REVERSE         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    LEFT            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    RIGHT           reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    TOP             reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    EDGE            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    FACE            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    SURFACE         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    COLUMN          reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    SEAL            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    HEADING         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    DATE            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    M               reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    $end            reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    END             reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    LABEL           reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    OPENR           reduce using rule 131 (lemma_statement -> lemma_list newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 256
   yacc.py:2563:
   yacc.py:2565:    (128) lemma_list -> lemma_list lemma .
   yacc.py:2565:    (130) lemma -> lemma . ID
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 128 (lemma_list -> lemma_list lemma .)
   yacc.py:2687:    SEMICOLON       reduce using rule 128 (lemma_list -> lemma_list lemma .)
   yacc.py:2687:    ID              shift and go to state 327
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 257
   yacc.py:2563:
   yacc.py:2565:    (129) lemma -> SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 129 (lemma -> SEMICOLON .)
   yacc.py:2687:    NEWLINE         reduce using rule 129 (lemma -> SEMICOLON .)
   yacc.py:2687:    SEMICOLON       reduce using rule 129 (lemma -> SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 258
   yacc.py:2563:
   yacc.py:2565:    (109) interlinear -> TR ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 328
   yacc.py:2561:
   yacc.py:2562:state 259
   yacc.py:2563:
   yacc.py:2565:    (110) interlinear -> TR newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    COMMENT         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    CHECK           reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    LEM             reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    NOTE            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    PARBAR          reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    TO              reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    FROM            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    VERSION         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    ATF             reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    BIB             reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    LINK            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    SCORE           reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    PROJECT         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    KEY             reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    TABLET          reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    PRISM           reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    BULLA           reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    OBJECT          reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    REVERSE         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    LEFT            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    RIGHT           reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    TOP             reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    EDGE            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    FACE            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    SURFACE         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    COLUMN          reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    SEAL            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    HEADING         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    DATE            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    M               reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    $end            reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    END             reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    LABEL           reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    OPENR           reduce using rule 110 (interlinear -> TR newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 260
   yacc.py:2563:
   yacc.py:2565:    (115) equalbrace_statement -> equalbrace newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    COMMENT         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    CHECK           reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    LEM             reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    NOTE            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    PARBAR          reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    TO              reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    FROM            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    VERSION         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    ATF             reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    BIB             reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    LINK            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    SCORE           reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    PROJECT         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    KEY             reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    TABLET          reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    PRISM           reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    BULLA           reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    OBJECT          reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    REVERSE         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    LEFT            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    RIGHT           reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    TOP             reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    EDGE            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    FACE            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    SURFACE         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    COLUMN          reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    SEAL            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    HEADING         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    DATE            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    M               reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    $end            reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    END             reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    LABEL           reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    OPENR           reduce using rule 115 (equalbrace_statement -> equalbrace newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 261
   yacc.py:2563:
   yacc.py:2565:    (114) equalbrace -> equalbrace ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 114 (equalbrace -> equalbrace ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 114 (equalbrace -> equalbrace ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 262
   yacc.py:2563:
   yacc.py:2565:    (125) lemma_list -> LEM ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 125 (lemma_list -> LEM ID .)
   yacc.py:2687:    SEMICOLON       reduce using rule 125 (lemma_list -> LEM ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 263
   yacc.py:2563:
   yacc.py:2565:    (120) multilingual_statement -> multilingual_sequence newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMMENT         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    CHECK           reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    LEM             reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    NOTE            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    PARBAR          reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    TO              reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    FROM            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    TR              reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    VERSION         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    ATF             reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    BIB             reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    LINK            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    SCORE           reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    PROJECT         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    KEY             reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    TABLET          reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    PRISM           reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    BULLA           reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    OBJECT          reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    REVERSE         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    LEFT            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    RIGHT           reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    TOP             reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    EDGE            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    FACE            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    SURFACE         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    COLUMN          reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    SEAL            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    HEADING         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    DATE            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    M               reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    $end            reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    END             reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    LABEL           reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    OPENR           reduce using rule 120 (multilingual_statement -> multilingual_sequence newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 264
   yacc.py:2563:
   yacc.py:2565:    (118) multilingual_sequence -> multilingual_sequence ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 118 (multilingual_sequence -> multilingual_sequence ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 118 (multilingual_sequence -> multilingual_sequence ID .)
   yacc.py:2687:    HAT             reduce using rule 118 (multilingual_sequence -> multilingual_sequence ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 265
   yacc.py:2563:
   yacc.py:2565:    (119) multilingual_sequence -> multilingual_sequence reference .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 119 (multilingual_sequence -> multilingual_sequence reference .)
   yacc.py:2687:    NEWLINE         reduce using rule 119 (multilingual_sequence -> multilingual_sequence reference .)
   yacc.py:2687:    HAT             reduce using rule 119 (multilingual_sequence -> multilingual_sequence reference .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 266
   yacc.py:2563:
   yacc.py:2565:    (117) multilingual_sequence -> MULTILINGUAL ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 117 (multilingual_sequence -> MULTILINGUAL ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 117 (multilingual_sequence -> MULTILINGUAL ID .)
   yacc.py:2687:    HAT             reduce using rule 117 (multilingual_sequence -> MULTILINGUAL ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 267
   yacc.py:2563:
   yacc.py:2565:    (222) comment -> COMMENT ID NEWLINE .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    VERSION         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    ATF             reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    BIB             reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    LINK            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    INCLUDE         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    COMMENT         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    CHECK           reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    SCORE           reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    PROJECT         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    TRANSLATION     reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    AMPERSAND       reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    KEY             reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    TABLET          reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    ENVELOPE        reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    PRISM           reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    BULLA           reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    SEALINGS        reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    FRAGMENT        reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    OBJECT          reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    OBVERSE         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    REVERSE         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    LEFT            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    RIGHT           reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    TOP             reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    BOTTOM          reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    EDGE            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    FACE            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    SURFACE         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    COLUMN          reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    SEAL            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    HEADING         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    DOLLAR          reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    NOTE            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    CATCHLINE       reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    COLOPHON        reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    DATE            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    SIGNATURES      reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    SIGNATURE       reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    SUMMARY         reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    WITNESSES       reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    M               reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    LINELABEL       reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    SCORELABEL      reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    PARBAR          reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    TO              reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    FROM            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    $end            reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    END             reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    LABEL           reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    OPENR           reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    TR              reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    LEM             reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    ID              reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2687:    HAT             reduce using rule 222 (comment -> COMMENT ID NEWLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 268
   yacc.py:2563:
   yacc.py:2565:    (223) comment -> CHECK ID NEWLINE .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    VERSION         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    ATF             reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    BIB             reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    LINK            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    INCLUDE         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    COMMENT         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    CHECK           reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    SCORE           reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    PROJECT         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    TRANSLATION     reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    AMPERSAND       reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    KEY             reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    TABLET          reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    ENVELOPE        reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    PRISM           reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    BULLA           reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    SEALINGS        reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    FRAGMENT        reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    OBJECT          reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    OBVERSE         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    REVERSE         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    LEFT            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    RIGHT           reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    TOP             reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    BOTTOM          reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    EDGE            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    FACE            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    SURFACE         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    COLUMN          reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    SEAL            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    HEADING         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    DOLLAR          reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    NOTE            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    CATCHLINE       reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    COLOPHON        reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    DATE            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    SIGNATURES      reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    SIGNATURE       reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    SUMMARY         reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    WITNESSES       reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    M               reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    LINELABEL       reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    SCORELABEL      reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    PARBAR          reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    TO              reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    FROM            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    $end            reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    END             reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    LABEL           reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    OPENR           reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    TR              reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    LEM             reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    ID              reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2687:    HAT             reduce using rule 223 (comment -> CHECK ID NEWLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 269
   yacc.py:2563:
   yacc.py:2565:    (230) score -> SCORE ID ID . NEWLINE
   yacc.py:2565:    (231) score -> SCORE ID ID . ID NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 330
   yacc.py:2687:    ID              shift and go to state 329
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 270
   yacc.py:2563:
   yacc.py:2565:    (22) project_statement -> PROJECT ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    ATF             reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    BIB             reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    LINK            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    KEY             reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    TOP             reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    FACE            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    DATE            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    M               reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    TO              reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    FROM            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    $end            reduce using rule 22 (project_statement -> PROJECT ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 271
   yacc.py:2563:
   yacc.py:2565:    (43) key_statement -> key EQUALS newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    VERSION         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    ATF             reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    BIB             reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    LINK            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    COMMENT         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    CHECK           reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    SCORE           reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    PROJECT         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    KEY             reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    TABLET          reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    PRISM           reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    BULLA           reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    OBJECT          reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    REVERSE         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    LEFT            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    RIGHT           reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    TOP             reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    EDGE            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    FACE            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    SURFACE         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    COLUMN          reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    SEAL            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    HEADING         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    NOTE            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    DATE            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    M               reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    PARBAR          reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    TO              reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    FROM            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    $end            reduce using rule 43 (key_statement -> key EQUALS newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 272
   yacc.py:2563:
   yacc.py:2565:    (45) key -> key EQUALS ID .
   yacc.py:2566:
   yacc.py:2687:    EQUALS          reduce using rule 45 (key -> key EQUALS ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 45 (key -> key EQUALS ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 273
   yacc.py:2563:
   yacc.py:2565:    (190) translation_statement -> TRANSLATION PARALLEL ID . PROJECT newline
   yacc.py:2566:
   yacc.py:2687:    PROJECT         shift and go to state 331
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 274
   yacc.py:2563:
   yacc.py:2565:    (191) translation_statement -> TRANSLATION LABELED ID . PROJECT newline
   yacc.py:2566:
   yacc.py:2687:    PROJECT         shift and go to state 332
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 275
   yacc.py:2563:
   yacc.py:2565:    (145) reference -> HAT ID . HAT
   yacc.py:2566:
   yacc.py:2687:    HAT             shift and go to state 333
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 276
   yacc.py:2563:
   yacc.py:2565:    (7) link_reference -> link_reference ID QUERY .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 7 (link_reference -> link_reference ID QUERY .)
   yacc.py:2687:    COMMA           reduce using rule 7 (link_reference -> link_reference ID QUERY .)
   yacc.py:2687:    REFERENCE       reduce using rule 7 (link_reference -> link_reference ID QUERY .)
   yacc.py:2687:    MINUS           reduce using rule 7 (link_reference -> link_reference ID QUERY .)
   yacc.py:2687:    NEWLINE         reduce using rule 7 (link_reference -> link_reference ID QUERY .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 277
   yacc.py:2563:
   yacc.py:2565:    (5) link_reference -> link_reference COMMA ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 5 (link_reference -> link_reference COMMA ID .)
   yacc.py:2687:    COMMA           reduce using rule 5 (link_reference -> link_reference COMMA ID .)
   yacc.py:2687:    REFERENCE       reduce using rule 5 (link_reference -> link_reference COMMA ID .)
   yacc.py:2687:    MINUS           reduce using rule 5 (link_reference -> link_reference COMMA ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 5 (link_reference -> link_reference COMMA ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 278
   yacc.py:2563:
   yacc.py:2565:    (215) link_range_reference -> link_range_reference COMMA ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 215 (link_range_reference -> link_range_reference COMMA ID .)
   yacc.py:2687:    COMMA           reduce using rule 215 (link_range_reference -> link_range_reference COMMA ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 215 (link_range_reference -> link_range_reference COMMA ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 279
   yacc.py:2563:
   yacc.py:2565:    (148) loose_dollar_statement -> DOLLAR PARENTHETICALID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    VERSION         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    ATF             reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    BIB             reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    LINK            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    CHECK           reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    SCORE           reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    KEY             reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    TABLET          reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    PRISM           reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    BULLA           reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    LEFT            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    TOP             reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    EDGE            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    FACE            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    SEAL            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    HEADING         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    NOTE            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    DATE            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    M               reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    TO              reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    FROM            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    $end            reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    END             reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    LABEL           reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    OPENR           reduce using rule 148 (loose_dollar_statement -> DOLLAR PARENTHETICALID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 280
   yacc.py:2563:
   yacc.py:2565:    (149) strict_dollar_statement -> DOLLAR state_description newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    VERSION         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    ATF             reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    BIB             reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    LINK            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    COMMENT         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    CHECK           reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    SCORE           reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    PROJECT         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    KEY             reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    TABLET          reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    PRISM           reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    BULLA           reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    OBJECT          reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    REVERSE         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    LEFT            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    RIGHT           reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    TOP             reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    EDGE            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    FACE            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    SURFACE         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    COLUMN          reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    SEAL            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    HEADING         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    NOTE            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    DATE            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    M               reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    PARBAR          reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    TO              reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    FROM            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    $end            reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    END             reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    LABEL           reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    OPENR           reduce using rule 149 (strict_dollar_statement -> DOLLAR state_description newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 281
   yacc.py:2563:
   yacc.py:2565:    (8) simple_dollar_statement -> DOLLAR ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    ATF             reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    BIB             reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    LINK            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    KEY             reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    TOP             reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    FACE            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    DATE            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    M               reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    TO              reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    FROM            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    $end            reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    END             reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    LABEL           reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    OPENR           reduce using rule 8 (simple_dollar_statement -> DOLLAR ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 282
   yacc.py:2563:
   yacc.py:2565:    (154) plural_state_description -> ID plural_scope . state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 334
   yacc.py:2561:
   yacc.py:2562:state 283
   yacc.py:2563:
   yacc.py:2565:    (155) plural_state_description -> ID singular_scope . state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 335
   yacc.py:2561:
   yacc.py:2562:state 284
   yacc.py:2563:
   yacc.py:2565:    (156) plural_state_description -> ID REFERENCE . state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 336
   yacc.py:2561:
   yacc.py:2562:state 285
   yacc.py:2563:
   yacc.py:2565:    (159) plural_state_description -> ID MINUS . ID plural_scope state
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 337
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 286
   yacc.py:2563:
   yacc.py:2565:    (9) simple_dollar_statement -> DOLLAR state newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    VERSION         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    ATF             reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    BIB             reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    LINK            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    COMMENT         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    CHECK           reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    SCORE           reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    PROJECT         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    KEY             reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    TABLET          reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    PRISM           reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    BULLA           reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    OBJECT          reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    REVERSE         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    LEFT            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    RIGHT           reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    TOP             reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    EDGE            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    FACE            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    SURFACE         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    COLUMN          reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    SEAL            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    HEADING         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    NOTE            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    DATE            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    M               reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    PARBAR          reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    TO              reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    FROM            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    $end            reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    END             reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    LABEL           reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    OPENR           reduce using rule 9 (simple_dollar_statement -> DOLLAR state newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 287
   yacc.py:2563:
   yacc.py:2565:    (158) plural_state_description -> state plural_scope .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 158 (plural_state_description -> state plural_scope .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 288
   yacc.py:2563:
   yacc.py:2565:    (164) singular_state_desc -> state singular_scope .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 164 (singular_state_desc -> state singular_scope .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 289
   yacc.py:2563:
   yacc.py:2565:    (10) simple_dollar_statement -> DOLLAR REFERENCE ID . newline
   yacc.py:2565:    (163) singular_state_desc -> REFERENCE ID . state
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 338
   yacc.py:2714:    state                          shift and go to state 339
   yacc.py:2561:
   yacc.py:2562:state 290
   yacc.py:2563:
   yacc.py:2565:    (162) singular_state_desc -> REFERENCE state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 162 (singular_state_desc -> REFERENCE state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 291
   yacc.py:2563:
   yacc.py:2565:    (133) ruling -> DOLLAR SINGLE RULING .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 133 (ruling -> DOLLAR SINGLE RULING .)
   yacc.py:2687:    HASH            reduce using rule 133 (ruling -> DOLLAR SINGLE RULING .)
   yacc.py:2687:    EXCLAIM         reduce using rule 133 (ruling -> DOLLAR SINGLE RULING .)
   yacc.py:2687:    QUERY           reduce using rule 133 (ruling -> DOLLAR SINGLE RULING .)
   yacc.py:2687:    STAR            reduce using rule 133 (ruling -> DOLLAR SINGLE RULING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 292
   yacc.py:2563:
   yacc.py:2565:    (136) ruling -> DOLLAR SINGLE LINE . RULING
   yacc.py:2566:
   yacc.py:2687:    RULING          shift and go to state 340
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 293
   yacc.py:2563:
   yacc.py:2565:    (134) ruling -> DOLLAR DOUBLE RULING .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 134 (ruling -> DOLLAR DOUBLE RULING .)
   yacc.py:2687:    HASH            reduce using rule 134 (ruling -> DOLLAR DOUBLE RULING .)
   yacc.py:2687:    EXCLAIM         reduce using rule 134 (ruling -> DOLLAR DOUBLE RULING .)
   yacc.py:2687:    QUERY           reduce using rule 134 (ruling -> DOLLAR DOUBLE RULING .)
   yacc.py:2687:    STAR            reduce using rule 134 (ruling -> DOLLAR DOUBLE RULING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 294
   yacc.py:2563:
   yacc.py:2565:    (137) ruling -> DOLLAR DOUBLE LINE . RULING
   yacc.py:2566:
   yacc.py:2687:    RULING          shift and go to state 341
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 295
   yacc.py:2563:
   yacc.py:2565:    (135) ruling -> DOLLAR TRIPLE RULING .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 135 (ruling -> DOLLAR TRIPLE RULING .)
   yacc.py:2687:    HASH            reduce using rule 135 (ruling -> DOLLAR TRIPLE RULING .)
   yacc.py:2687:    EXCLAIM         reduce using rule 135 (ruling -> DOLLAR TRIPLE RULING .)
   yacc.py:2687:    QUERY           reduce using rule 135 (ruling -> DOLLAR TRIPLE RULING .)
   yacc.py:2687:    STAR            reduce using rule 135 (ruling -> DOLLAR TRIPLE RULING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 296
   yacc.py:2563:
   yacc.py:2565:    (138) ruling -> DOLLAR TRIPLE LINE . RULING
   yacc.py:2566:
   yacc.py:2687:    RULING          shift and go to state 342
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 297
   yacc.py:2563:
   yacc.py:2565:    (153) plural_state_description -> plural_quantifier plural_scope . state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 343
   yacc.py:2561:
   yacc.py:2562:state 298
   yacc.py:2563:
   yacc.py:2565:    (157) plural_state_description -> plural_scope state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 157 (plural_state_description -> plural_scope state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 299
   yacc.py:2563:
   yacc.py:2565:    (161) singular_state_desc -> singular_scope state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 161 (singular_state_desc -> singular_scope state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 300
   yacc.py:2563:
   yacc.py:2565:    (160) plural_state_description -> qualification plural_state_description .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 160 (plural_state_description -> qualification plural_state_description .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 301
   yacc.py:2563:
   yacc.py:2565:    (158) plural_state_description -> state . plural_scope
   yacc.py:2565:    (178) plural_scope -> . COLUMNS
   yacc.py:2565:    (179) plural_scope -> . LINES
   yacc.py:2565:    (180) plural_scope -> . CASES
   yacc.py:2566:
   yacc.py:2687:    COLUMNS         shift and go to state 206
   yacc.py:2687:    LINES           shift and go to state 207
   yacc.py:2687:    CASES           shift and go to state 208
   yacc.py:2689:
   yacc.py:2714:    plural_scope                   shift and go to state 287
   yacc.py:2561:
   yacc.py:2562:state 302
   yacc.py:2563:
   yacc.py:2565:    (154) plural_state_description -> ID . plural_scope state
   yacc.py:2565:    (155) plural_state_description -> ID . singular_scope state
   yacc.py:2565:    (156) plural_state_description -> ID . REFERENCE state
   yacc.py:2565:    (159) plural_state_description -> ID . MINUS ID plural_scope state
   yacc.py:2565:    (178) plural_scope -> . COLUMNS
   yacc.py:2565:    (179) plural_scope -> . LINES
   yacc.py:2565:    (180) plural_scope -> . CASES
   yacc.py:2565:    (175) singular_scope -> . LINE
   yacc.py:2565:    (176) singular_scope -> . CASE
   yacc.py:2565:    (177) singular_scope -> . SPACE
   yacc.py:2566:
   yacc.py:2687:    REFERENCE       shift and go to state 284
   yacc.py:2687:    MINUS           shift and go to state 285
   yacc.py:2687:    COLUMNS         shift and go to state 206
   yacc.py:2687:    LINES           shift and go to state 207
   yacc.py:2687:    CASES           shift and go to state 208
   yacc.py:2687:    LINE            shift and go to state 188
   yacc.py:2687:    CASE            shift and go to state 211
   yacc.py:2687:    SPACE           shift and go to state 212
   yacc.py:2689:
   yacc.py:2714:    plural_scope                   shift and go to state 282
   yacc.py:2714:    singular_scope                 shift and go to state 283
   yacc.py:2561:
   yacc.py:2562:state 303
   yacc.py:2563:
   yacc.py:2565:    (166) singular_state_desc -> partial_quantifier singular_state_desc .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 166 (singular_state_desc -> partial_quantifier singular_state_desc .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 304
   yacc.py:2563:
   yacc.py:2565:    (164) singular_state_desc -> state . singular_scope
   yacc.py:2565:    (175) singular_scope -> . LINE
   yacc.py:2565:    (176) singular_scope -> . CASE
   yacc.py:2565:    (177) singular_scope -> . SPACE
   yacc.py:2566:
   yacc.py:2687:    LINE            shift and go to state 188
   yacc.py:2687:    CASE            shift and go to state 211
   yacc.py:2687:    SPACE           shift and go to state 212
   yacc.py:2689:
   yacc.py:2714:    singular_scope                 shift and go to state 288
   yacc.py:2561:
   yacc.py:2562:state 305
   yacc.py:2563:
   yacc.py:2565:    (162) singular_state_desc -> REFERENCE . state
   yacc.py:2565:    (163) singular_state_desc -> REFERENCE . ID state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 344
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 290
   yacc.py:2561:
   yacc.py:2562:state 306
   yacc.py:2563:
   yacc.py:2565:    (186) partial_quantifier -> brief_quantifier . OF
   yacc.py:2566:
   yacc.py:2687:    OF              shift and go to state 308
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 307
   yacc.py:2563:
   yacc.py:2565:    (165) brief_state_desc -> brief_quantifier state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 165 (brief_state_desc -> brief_quantifier state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 308
   yacc.py:2563:
   yacc.py:2565:    (186) partial_quantifier -> brief_quantifier OF .
   yacc.py:2566:
   yacc.py:2687:    REFERENCE       reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    LINE            reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    CASE            reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    SPACE           reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    BLANK           reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    BROKEN          reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    EFFACED         reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    MISSING         reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    TRACES          reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    REST            reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    START           reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    BEGINNING       reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    MIDDLE          reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2687:    END             reduce using rule 186 (partial_quantifier -> brief_quantifier OF .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 309
   yacc.py:2563:
   yacc.py:2565:    (187) qualification -> AT LEAST .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    SEVERAL         reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    SOME            reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    COLUMNS         reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    LINES           reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    CASES           reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    BLANK           reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    BROKEN          reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    EFFACED         reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    MISSING         reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    TRACES          reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    AT              reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2687:    ABOUT           reduce using rule 187 (qualification -> AT LEAST .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 310
   yacc.py:2563:
   yacc.py:2565:    (188) qualification -> AT MOST .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    SEVERAL         reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    SOME            reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    COLUMNS         reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    LINES           reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    CASES           reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    BLANK           reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    BROKEN          reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    EFFACED         reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    ILLEGIBLE       reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    MISSING         reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    TRACES          reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    AT              reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2687:    ABOUT           reduce using rule 188 (qualification -> AT MOST .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 311
   yacc.py:2563:
   yacc.py:2565:    (127) milestone_name -> M EQUALS ID .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 127 (milestone_name -> M EQUALS ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 312
   yacc.py:2563:
   yacc.py:2565:    (13) text_statement -> AMPERSAND ID EQUALS ID . newline
   yacc.py:2565:    (14) text_statement -> AMPERSAND ID EQUALS ID . QUERY newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    QUERY           shift and go to state 346
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 345
   yacc.py:2561:
   yacc.py:2562:state 313
   yacc.py:2563:
   yacc.py:2565:    (193) translation -> translation END REFERENCE newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    END             reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    COMMENT         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    CHECK           reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    LABEL           reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    OPENR           reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    REVERSE         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    LEFT            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    RIGHT           reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    TOP             reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    EDGE            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    FACE            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    SURFACE         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    COLUMN          reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    SEAL            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    HEADING         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    VERSION         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    ATF             reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    BIB             reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    LINK            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    SCORE           reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    PROJECT         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    KEY             reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    TABLET          reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    PRISM           reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    BULLA           reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    OBJECT          reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    NOTE            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    DATE            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    M               reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    PARBAR          reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    TO              reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    FROM            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    $end            reduce using rule 193 (translation -> translation END REFERENCE newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 314
   yacc.py:2563:
   yacc.py:2565:    (209) translationlabeledline -> translationlabeledline reference newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    HAT             reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    COMMENT         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    CHECK           reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    NOTE            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    END             reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    LABEL           reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    OPENR           reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    REVERSE         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    LEFT            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    RIGHT           reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    TOP             reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    EDGE            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    FACE            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    SURFACE         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    COLUMN          reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    SEAL            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    HEADING         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    VERSION         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    ATF             reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    BIB             reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    LINK            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    SCORE           reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    PROJECT         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    KEY             reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    TABLET          reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    PRISM           reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    BULLA           reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    OBJECT          reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    DATE            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    M               reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    PARBAR          reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    TO              reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    FROM            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    $end            reduce using rule 209 (translationlabeledline -> translationlabeledline reference newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 315
   yacc.py:2563:
   yacc.py:2565:    (212) translationlabeledline -> translationlabeledline ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    HAT             reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    END             reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    LABEL           reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    OPENR           reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    TOP             reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    FACE            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    ATF             reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    BIB             reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    LINK            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    KEY             reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    DATE            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    M               reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    TO              reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    FROM            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    $end            reduce using rule 212 (translationlabeledline -> translationlabeledline ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 316
   yacc.py:2563:
   yacc.py:2565:    (33) skipped_protocol -> ATF USE UNICODE newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    VERSION         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    ATF             reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    BIB             reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    LINK            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    COMMENT         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    CHECK           reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    SCORE           reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    PROJECT         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    KEY             reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    TABLET          reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    PRISM           reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    BULLA           reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    OBJECT          reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    REVERSE         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    LEFT            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    RIGHT           reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    TOP             reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    EDGE            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    FACE            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    SURFACE         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    COLUMN          reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    SEAL            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    HEADING         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    NOTE            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    DATE            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    M               reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    PARBAR          reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    TO              reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    FROM            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    $end            reduce using rule 33 (skipped_protocol -> ATF USE UNICODE newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 317
   yacc.py:2563:
   yacc.py:2565:    (34) skipped_protocol -> ATF USE MATH newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    VERSION         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    ATF             reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    BIB             reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    LINK            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    COMMENT         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    CHECK           reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    SCORE           reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    PROJECT         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    KEY             reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    TABLET          reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    PRISM           reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    BULLA           reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    OBJECT          reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    REVERSE         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    LEFT            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    RIGHT           reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    TOP             reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    EDGE            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    FACE            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    SURFACE         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    COLUMN          reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    SEAL            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    HEADING         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    NOTE            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    DATE            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    M               reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    PARBAR          reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    TO              reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    FROM            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    $end            reduce using rule 34 (skipped_protocol -> ATF USE MATH newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 318
   yacc.py:2563:
   yacc.py:2565:    (35) skipped_protocol -> ATF USE LEGACY newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    VERSION         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    ATF             reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    BIB             reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    LINK            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    COMMENT         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    CHECK           reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    SCORE           reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    PROJECT         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    KEY             reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    TABLET          reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    PRISM           reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    BULLA           reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    OBJECT          reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    REVERSE         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    LEFT            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    RIGHT           reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    TOP             reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    EDGE            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    FACE            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    SURFACE         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    COLUMN          reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    SEAL            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    HEADING         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    NOTE            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    DATE            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    M               reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    PARBAR          reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    TO              reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    FROM            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    $end            reduce using rule 35 (skipped_protocol -> ATF USE LEGACY newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 319
   yacc.py:2563:
   yacc.py:2565:    (36) skipped_protocol -> ATF USE MYLINES newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    VERSION         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    ATF             reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    BIB             reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    LINK            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    COMMENT         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    CHECK           reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    SCORE           reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    PROJECT         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    KEY             reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    TABLET          reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    PRISM           reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    BULLA           reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    OBJECT          reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    REVERSE         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    LEFT            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    RIGHT           reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    TOP             reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    EDGE            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    FACE            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    SURFACE         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    COLUMN          reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    SEAL            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    HEADING         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    NOTE            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    DATE            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    M               reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    PARBAR          reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    TO              reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    FROM            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    $end            reduce using rule 36 (skipped_protocol -> ATF USE MYLINES newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 320
   yacc.py:2563:
   yacc.py:2565:    (37) skipped_protocol -> ATF USE LEXICAL newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    VERSION         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    ATF             reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    BIB             reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    LINK            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    COMMENT         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    CHECK           reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    SCORE           reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    PROJECT         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    KEY             reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    TABLET          reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    PRISM           reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    BULLA           reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    OBJECT          reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    REVERSE         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    LEFT            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    RIGHT           reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    TOP             reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    EDGE            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    FACE            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    SURFACE         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    COLUMN          reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    SEAL            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    HEADING         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    NOTE            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    DATE            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    M               reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    PARBAR          reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    TO              reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    FROM            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    $end            reduce using rule 37 (skipped_protocol -> ATF USE LEXICAL newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 321
   yacc.py:2563:
   yacc.py:2565:    (53) language_protocol -> ATF LANG ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    ATF             reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    BIB             reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    LINK            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    KEY             reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    TOP             reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    FACE            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    DATE            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    M               reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    TO              reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    FROM            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    $end            reduce using rule 53 (language_protocol -> ATF LANG ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 322
   yacc.py:2563:
   yacc.py:2565:    (40) skipped_protocol -> BIB ID EQUALS ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 347
   yacc.py:2561:
   yacc.py:2562:state 323
   yacc.py:2563:
   yacc.py:2565:    (49) link -> LINK DEF ID EQUALS . ID EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 348
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 324
   yacc.py:2563:
   yacc.py:2565:    (50) link -> LINK SOURCE ID EQUALS . ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 349
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 325
   yacc.py:2563:
   yacc.py:2565:    (51) link -> LINK PARALLEL ID EQUALS . ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 350
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 326
   yacc.py:2563:
   yacc.py:2565:    (52) link -> INCLUDE ID EQUALS ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 351
   yacc.py:2561:
   yacc.py:2562:state 327
   yacc.py:2563:
   yacc.py:2565:    (130) lemma -> lemma ID .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 130 (lemma -> lemma ID .)
   yacc.py:2687:    NEWLINE         reduce using rule 130 (lemma -> lemma ID .)
   yacc.py:2687:    SEMICOLON       reduce using rule 130 (lemma -> lemma ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 328
   yacc.py:2563:
   yacc.py:2565:    (109) interlinear -> TR ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    TR              reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    LEM             reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    EQUALBRACE      reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    TO              reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    FROM            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    MULTILINGUAL    reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    ATF             reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    BIB             reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    LINK            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    KEY             reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    TOP             reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    FACE            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    DATE            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    M               reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    $end            reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    END             reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    LABEL           reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    OPENR           reduce using rule 109 (interlinear -> TR ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 329
   yacc.py:2563:
   yacc.py:2565:    (231) score -> SCORE ID ID ID . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 352
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 330
   yacc.py:2563:
   yacc.py:2565:    (230) score -> SCORE ID ID NEWLINE .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    VERSION         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    ATF             reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    BIB             reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    LINK            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    INCLUDE         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    COMMENT         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    CHECK           reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    SCORE           reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    PROJECT         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    TRANSLATION     reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    AMPERSAND       reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    KEY             reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    TABLET          reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    ENVELOPE        reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    PRISM           reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    BULLA           reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    SEALINGS        reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    FRAGMENT        reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    OBJECT          reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    OBVERSE         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    REVERSE         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    LEFT            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    RIGHT           reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    TOP             reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    BOTTOM          reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    EDGE            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    FACE            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    SURFACE         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    COLUMN          reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    SEAL            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    HEADING         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    DOLLAR          reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    NOTE            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    CATCHLINE       reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    COLOPHON        reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    DATE            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    SIGNATURES      reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    SIGNATURE       reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    SUMMARY         reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    WITNESSES       reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    M               reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    LINELABEL       reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    SCORELABEL      reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    PARBAR          reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    TO              reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    FROM            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2687:    $end            reduce using rule 230 (score -> SCORE ID ID NEWLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 331
   yacc.py:2563:
   yacc.py:2565:    (190) translation_statement -> TRANSLATION PARALLEL ID PROJECT . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 353
   yacc.py:2561:
   yacc.py:2562:state 332
   yacc.py:2563:
   yacc.py:2565:    (191) translation_statement -> TRANSLATION LABELED ID PROJECT . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 354
   yacc.py:2561:
   yacc.py:2562:state 333
   yacc.py:2563:
   yacc.py:2565:    (145) reference -> HAT ID HAT .
   yacc.py:2566:
   yacc.py:2687:    ID              reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    NEWLINE         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    HAT             reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    COMMENT         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    CHECK           reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    NOTE            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    END             reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    LABEL           reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    OPENR           reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    DOLLAR          reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    OBVERSE         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    REVERSE         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    LEFT            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    RIGHT           reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    TOP             reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    BOTTOM          reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    EDGE            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    FACE            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    SURFACE         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    COLUMN          reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    SEAL            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    HEADING         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    COMPOSITE       reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    VERSION         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    ATF             reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    BIB             reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    LINK            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    INCLUDE         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    SCORE           reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    PROJECT         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    TRANSLATION     reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    AMPERSAND       reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    KEY             reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    TABLET          reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    ENVELOPE        reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    PRISM           reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    BULLA           reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    SEALINGS        reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    FRAGMENT        reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    OBJECT          reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    CATCHLINE       reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    COLOPHON        reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    DATE            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    SIGNATURES      reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    SIGNATURE       reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    SUMMARY         reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    WITNESSES       reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    M               reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    LINELABEL       reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    SCORELABEL      reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    PARBAR          reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    TO              reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    FROM            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2687:    $end            reduce using rule 145 (reference -> HAT ID HAT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 334
   yacc.py:2563:
   yacc.py:2565:    (154) plural_state_description -> ID plural_scope state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 154 (plural_state_description -> ID plural_scope state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 335
   yacc.py:2563:
   yacc.py:2565:    (155) plural_state_description -> ID singular_scope state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 155 (plural_state_description -> ID singular_scope state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 336
   yacc.py:2563:
   yacc.py:2565:    (156) plural_state_description -> ID REFERENCE state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 156 (plural_state_description -> ID REFERENCE state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 337
   yacc.py:2563:
   yacc.py:2565:    (159) plural_state_description -> ID MINUS ID . plural_scope state
   yacc.py:2565:    (178) plural_scope -> . COLUMNS
   yacc.py:2565:    (179) plural_scope -> . LINES
   yacc.py:2565:    (180) plural_scope -> . CASES
   yacc.py:2566:
   yacc.py:2687:    COLUMNS         shift and go to state 206
   yacc.py:2687:    LINES           shift and go to state 207
   yacc.py:2687:    CASES           shift and go to state 208
   yacc.py:2689:
   yacc.py:2714:    plural_scope                   shift and go to state 355
   yacc.py:2561:
   yacc.py:2562:state 338
   yacc.py:2563:
   yacc.py:2565:    (10) simple_dollar_statement -> DOLLAR REFERENCE ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    ATF             reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    BIB             reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    LINK            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    KEY             reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    TOP             reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    FACE            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    DATE            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    M               reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    TO              reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    FROM            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    $end            reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    END             reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    LABEL           reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    OPENR           reduce using rule 10 (simple_dollar_statement -> DOLLAR REFERENCE ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 339
   yacc.py:2563:
   yacc.py:2565:    (163) singular_state_desc -> REFERENCE ID state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 163 (singular_state_desc -> REFERENCE ID state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 340
   yacc.py:2563:
   yacc.py:2565:    (136) ruling -> DOLLAR SINGLE LINE RULING .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 136 (ruling -> DOLLAR SINGLE LINE RULING .)
   yacc.py:2687:    HASH            reduce using rule 136 (ruling -> DOLLAR SINGLE LINE RULING .)
   yacc.py:2687:    EXCLAIM         reduce using rule 136 (ruling -> DOLLAR SINGLE LINE RULING .)
   yacc.py:2687:    QUERY           reduce using rule 136 (ruling -> DOLLAR SINGLE LINE RULING .)
   yacc.py:2687:    STAR            reduce using rule 136 (ruling -> DOLLAR SINGLE LINE RULING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 341
   yacc.py:2563:
   yacc.py:2565:    (137) ruling -> DOLLAR DOUBLE LINE RULING .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 137 (ruling -> DOLLAR DOUBLE LINE RULING .)
   yacc.py:2687:    HASH            reduce using rule 137 (ruling -> DOLLAR DOUBLE LINE RULING .)
   yacc.py:2687:    EXCLAIM         reduce using rule 137 (ruling -> DOLLAR DOUBLE LINE RULING .)
   yacc.py:2687:    QUERY           reduce using rule 137 (ruling -> DOLLAR DOUBLE LINE RULING .)
   yacc.py:2687:    STAR            reduce using rule 137 (ruling -> DOLLAR DOUBLE LINE RULING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 342
   yacc.py:2563:
   yacc.py:2565:    (138) ruling -> DOLLAR TRIPLE LINE RULING .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 138 (ruling -> DOLLAR TRIPLE LINE RULING .)
   yacc.py:2687:    HASH            reduce using rule 138 (ruling -> DOLLAR TRIPLE LINE RULING .)
   yacc.py:2687:    EXCLAIM         reduce using rule 138 (ruling -> DOLLAR TRIPLE LINE RULING .)
   yacc.py:2687:    QUERY           reduce using rule 138 (ruling -> DOLLAR TRIPLE LINE RULING .)
   yacc.py:2687:    STAR            reduce using rule 138 (ruling -> DOLLAR TRIPLE LINE RULING .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 343
   yacc.py:2563:
   yacc.py:2565:    (153) plural_state_description -> plural_quantifier plural_scope state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 153 (plural_state_description -> plural_quantifier plural_scope state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 344
   yacc.py:2563:
   yacc.py:2565:    (163) singular_state_desc -> REFERENCE ID . state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 339
   yacc.py:2561:
   yacc.py:2562:state 345
   yacc.py:2563:
   yacc.py:2565:    (13) text_statement -> AMPERSAND ID EQUALS ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    ATF             reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    BIB             reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    LINK            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    KEY             reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    TOP             reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    FACE            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    DATE            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    M               reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    TO              reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    FROM            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    $end            reduce using rule 13 (text_statement -> AMPERSAND ID EQUALS ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 346
   yacc.py:2563:
   yacc.py:2565:    (14) text_statement -> AMPERSAND ID EQUALS ID QUERY . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 356
   yacc.py:2561:
   yacc.py:2562:state 347
   yacc.py:2563:
   yacc.py:2565:    (40) skipped_protocol -> BIB ID EQUALS ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    ATF             reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    BIB             reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    LINK            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    KEY             reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    TOP             reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    FACE            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    DATE            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    M               reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    TO              reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    FROM            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    $end            reduce using rule 40 (skipped_protocol -> BIB ID EQUALS ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 348
   yacc.py:2563:
   yacc.py:2565:    (49) link -> LINK DEF ID EQUALS ID . EQUALS ID newline
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 357
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 349
   yacc.py:2563:
   yacc.py:2565:    (50) link -> LINK SOURCE ID EQUALS ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 358
   yacc.py:2561:
   yacc.py:2562:state 350
   yacc.py:2563:
   yacc.py:2565:    (51) link -> LINK PARALLEL ID EQUALS ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 359
   yacc.py:2561:
   yacc.py:2562:state 351
   yacc.py:2563:
   yacc.py:2565:    (52) link -> INCLUDE ID EQUALS ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    ATF             reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    BIB             reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    LINK            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    KEY             reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    TOP             reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    FACE            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    DATE            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    M               reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    TO              reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    FROM            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    $end            reduce using rule 52 (link -> INCLUDE ID EQUALS ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 352
   yacc.py:2563:
   yacc.py:2565:    (231) score -> SCORE ID ID ID NEWLINE .
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    VERSION         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    ATF             reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    BIB             reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    LINK            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    INCLUDE         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    COMMENT         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    CHECK           reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    SCORE           reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    PROJECT         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    TRANSLATION     reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    AMPERSAND       reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    KEY             reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    TABLET          reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    ENVELOPE        reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    PRISM           reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    BULLA           reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    SEALINGS        reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    FRAGMENT        reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    OBJECT          reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    OBVERSE         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    REVERSE         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    LEFT            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    RIGHT           reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    TOP             reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    BOTTOM          reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    EDGE            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    FACE            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    SURFACE         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    COLUMN          reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    SEAL            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    HEADING         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    DOLLAR          reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    NOTE            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    CATCHLINE       reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    COLOPHON        reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    DATE            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    SIGNATURES      reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    SIGNATURE       reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    SUMMARY         reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    WITNESSES       reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    M               reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    LINELABEL       reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    SCORELABEL      reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    PARBAR          reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    TO              reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    FROM            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2687:    $end            reduce using rule 231 (score -> SCORE ID ID ID NEWLINE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 353
   yacc.py:2563:
   yacc.py:2565:    (190) translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    END             reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    COMMENT         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    CHECK           reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    LABEL           reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    OPENR           reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    REVERSE         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    LEFT            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    RIGHT           reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    TOP             reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    EDGE            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    FACE            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    SURFACE         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    COLUMN          reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    SEAL            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    HEADING         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    VERSION         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    ATF             reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    BIB             reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    LINK            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    SCORE           reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    PROJECT         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    KEY             reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    TABLET          reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    PRISM           reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    BULLA           reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    OBJECT          reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    NOTE            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    DATE            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    M               reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    PARBAR          reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    TO              reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    FROM            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    $end            reduce using rule 190 (translation_statement -> TRANSLATION PARALLEL ID PROJECT newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 354
   yacc.py:2563:
   yacc.py:2565:    (191) translation_statement -> TRANSLATION LABELED ID PROJECT newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    END             reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    COMMENT         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    CHECK           reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    LABEL           reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    OPENR           reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    REVERSE         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    LEFT            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    RIGHT           reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    TOP             reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    EDGE            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    FACE            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    SURFACE         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    COLUMN          reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    SEAL            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    HEADING         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    COMPOSITE       reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    VERSION         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    ATF             reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    BIB             reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    LINK            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    SCORE           reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    PROJECT         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    KEY             reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    TABLET          reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    PRISM           reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    BULLA           reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    OBJECT          reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    NOTE            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    DATE            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    M               reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    PARBAR          reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    TO              reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    FROM            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    $end            reduce using rule 191 (translation_statement -> TRANSLATION LABELED ID PROJECT newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 355
   yacc.py:2563:
   yacc.py:2565:    (159) plural_state_description -> ID MINUS ID plural_scope . state
   yacc.py:2565:    (167) state -> . BLANK
   yacc.py:2565:    (168) state -> . BROKEN
   yacc.py:2565:    (169) state -> . EFFACED
   yacc.py:2565:    (170) state -> . ILLEGIBLE
   yacc.py:2565:    (171) state -> . MISSING
   yacc.py:2565:    (172) state -> . TRACES
   yacc.py:2566:
   yacc.py:2687:    BLANK           shift and go to state 192
   yacc.py:2687:    BROKEN          shift and go to state 193
   yacc.py:2687:    EFFACED         shift and go to state 194
   yacc.py:2687:    ILLEGIBLE       shift and go to state 195
   yacc.py:2687:    MISSING         shift and go to state 196
   yacc.py:2687:    TRACES          shift and go to state 197
   yacc.py:2689:
   yacc.py:2714:    state                          shift and go to state 360
   yacc.py:2561:
   yacc.py:2562:state 356
   yacc.py:2563:
   yacc.py:2565:    (14) text_statement -> AMPERSAND ID EQUALS ID QUERY newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    VERSION         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    ATF             reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    BIB             reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    LINK            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    COMMENT         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    CHECK           reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    SCORE           reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    PROJECT         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    KEY             reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    TABLET          reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    PRISM           reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    BULLA           reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    OBJECT          reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    REVERSE         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    LEFT            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    RIGHT           reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    TOP             reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    EDGE            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    FACE            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    SURFACE         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    COLUMN          reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    SEAL            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    HEADING         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    NOTE            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    DATE            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    M               reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    PARBAR          reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    TO              reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    FROM            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    $end            reduce using rule 14 (text_statement -> AMPERSAND ID EQUALS ID QUERY newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 357
   yacc.py:2563:
   yacc.py:2565:    (49) link -> LINK DEF ID EQUALS ID EQUALS . ID newline
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 361
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 358
   yacc.py:2563:
   yacc.py:2565:    (50) link -> LINK SOURCE ID EQUALS ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    ATF             reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    BIB             reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    LINK            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    KEY             reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    TOP             reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    FACE            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    DATE            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    M               reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    TO              reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    FROM            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    $end            reduce using rule 50 (link -> LINK SOURCE ID EQUALS ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 359
   yacc.py:2563:
   yacc.py:2565:    (51) link -> LINK PARALLEL ID EQUALS ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    ATF             reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    BIB             reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    LINK            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    KEY             reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    TOP             reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    FACE            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    DATE            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    M               reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    TO              reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    FROM            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    $end            reduce using rule 51 (link -> LINK PARALLEL ID EQUALS ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 360
   yacc.py:2563:
   yacc.py:2565:    (159) plural_state_description -> ID MINUS ID plural_scope state .
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         reduce using rule 159 (plural_state_description -> ID MINUS ID plural_scope state .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 361
   yacc.py:2563:
   yacc.py:2565:    (49) link -> LINK DEF ID EQUALS ID EQUALS ID . newline
   yacc.py:2565:    (146) newline -> . NEWLINE
   yacc.py:2565:    (147) newline -> . newline NEWLINE
   yacc.py:2566:
   yacc.py:2687:    NEWLINE         shift and go to state 100
   yacc.py:2689:
   yacc.py:2714:    newline                        shift and go to state 362
   yacc.py:2561:
   yacc.py:2562:state 362
   yacc.py:2563:
   yacc.py:2565:    (49) link -> LINK DEF ID EQUALS ID EQUALS ID newline .
   yacc.py:2565:    (147) newline -> newline . NEWLINE
   yacc.py:2566:
   yacc.py:2687:    COMPOSITE       reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    VERSION         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    ATF             reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    BIB             reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    LINK            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    INCLUDE         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    COMMENT         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    CHECK           reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    SCORE           reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    PROJECT         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    TRANSLATION     reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    AMPERSAND       reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    KEY             reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    LEMMATIZER      reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    TABLET          reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    ENVELOPE        reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    PRISM           reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    BULLA           reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    SEALINGS        reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    FRAGMENT        reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    OBJECT          reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    OBVERSE         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    REVERSE         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    LEFT            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    RIGHT           reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    TOP             reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    BOTTOM          reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    EDGE            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    FACE            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    SURFACE         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    COLUMN          reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    SEAL            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    HEADING         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    DOLLAR          reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    NOTE            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    CATCHLINE       reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    COLOPHON        reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    DATE            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURES      reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    SIGNATURE       reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    SUMMARY         reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    WITNESSES       reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    M               reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    LINELABEL       reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    SCORELABEL      reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    PARBAR          reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    TO              reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    FROM            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    $end            reduce using rule 49 (link -> LINK DEF ID EQUALS ID EQUALS ID newline .)
   yacc.py:2687:    NEWLINE         shift and go to state 223
   yacc.py:2689:
